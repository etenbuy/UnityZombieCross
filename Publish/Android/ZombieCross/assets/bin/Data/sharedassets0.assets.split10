 "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES"
}
}
 }
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="GrassBillboard" }
  ZWrite Off
  Cull Off
  Blend One One
  GpuProgramID 121335
Program "vp" {
SubProgram "gles " {
Keywords { "POINT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldNormal_2;
  mediump vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 v_24;
  v_24.x = _World2Object[0].x;
  v_24.y = _World2Object[1].x;
  v_24.z = _World2Object[2].x;
  v_24.w = _World2Object[3].x;
  highp vec4 v_25;
  v_25.x = _World2Object[0].y;
  v_25.y = _World2Object[1].y;
  v_25.z = _World2Object[2].y;
  v_25.w = _World2Object[3].y;
  highp vec4 v_26;
  v_26.x = _World2Object[0].z;
  v_26.y = _World2Object[1].z;
  v_26.z = _World2Object[2].z;
  v_26.w = _World2Object[3].z;
  highp vec3 tmpvar_27;
  tmpvar_27 = normalize(((
    (v_24.xyz * _glesNormal.x)
   + 
    (v_25.xyz * _glesNormal.y)
  ) + (v_26.xyz * _glesNormal.z)));
  worldNormal_2 = tmpvar_27;
  tmpvar_3 = worldNormal_2;
  gl_Position = (glstate_matrix_mvp * vertex_8);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  mediump vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_8;
  tmpvar_8 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_9;
  x_9 = (tmpvar_8.w - _Cutoff);
  if ((x_9 < 0.0)) {
    discard;
  };
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD2;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_LightMatrix0 * tmpvar_10).xyz;
  lightCoord_4 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (lightCoord_4, lightCoord_4);
  lowp float tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, vec2(tmpvar_12)).w;
  lowp vec3 tmpvar_14;
  tmpvar_14 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_14;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_13);
  lowp vec4 c_15;
  lowp vec4 c_16;
  lowp float diff_17;
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_17 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = ((tmpvar_8.xyz * tmpvar_1) * diff_17);
  c_16.xyz = tmpvar_19;
  c_16.w = (tmpvar_8.w * xlv_COLOR0.w);
  c_15.w = c_16.w;
  mediump vec3 tmpvar_20;
  tmpvar_20 = c_16.xyz;
  c_15.xyz = tmpvar_20;
  c_3.xyz = c_15.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldNormal_2;
  mediump vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 v_24;
  v_24.x = _World2Object[0].x;
  v_24.y = _World2Object[1].x;
  v_24.z = _World2Object[2].x;
  v_24.w = _World2Object[3].x;
  highp vec4 v_25;
  v_25.x = _World2Object[0].y;
  v_25.y = _World2Object[1].y;
  v_25.z = _World2Object[2].y;
  v_25.w = _World2Object[3].y;
  highp vec4 v_26;
  v_26.x = _World2Object[0].z;
  v_26.y = _World2Object[1].z;
  v_26.z = _World2Object[2].z;
  v_26.w = _World2Object[3].z;
  highp vec3 tmpvar_27;
  tmpvar_27 = normalize(((
    (v_24.xyz * _glesNormal.x)
   + 
    (v_25.xyz * _glesNormal.y)
  ) + (v_26.xyz * _glesNormal.z)));
  worldNormal_2 = tmpvar_27;
  tmpvar_3 = worldNormal_2;
  gl_Position = (glstate_matrix_mvp * vertex_8);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_7;
  tmpvar_7 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_8;
  x_8 = (tmpvar_7.w - _Cutoff);
  if ((x_8 < 0.0)) {
    discard;
  };
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_9;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_12 = tmpvar_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = ((tmpvar_7.xyz * tmpvar_1) * diff_12);
  c_11.xyz = tmpvar_14;
  c_11.w = (tmpvar_7.w * xlv_COLOR0.w);
  c_10.w = c_11.w;
  mediump vec3 tmpvar_15;
  tmpvar_15 = c_11.xyz;
  c_10.xyz = tmpvar_15;
  c_3.xyz = c_10.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "SPOT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldNormal_2;
  mediump vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 v_24;
  v_24.x = _World2Object[0].x;
  v_24.y = _World2Object[1].x;
  v_24.z = _World2Object[2].x;
  v_24.w = _World2Object[3].x;
  highp vec4 v_25;
  v_25.x = _World2Object[0].y;
  v_25.y = _World2Object[1].y;
  v_25.z = _World2Object[2].y;
  v_25.w = _World2Object[3].y;
  highp vec4 v_26;
  v_26.x = _World2Object[0].z;
  v_26.y = _World2Object[1].z;
  v_26.z = _World2Object[2].z;
  v_26.w = _World2Object[3].z;
  highp vec3 tmpvar_27;
  tmpvar_27 = normalize(((
    (v_24.xyz * _glesNormal.x)
   + 
    (v_25.xyz * _glesNormal.y)
  ) + (v_26.xyz * _glesNormal.z)));
  worldNormal_2 = tmpvar_27;
  tmpvar_3 = worldNormal_2;
  gl_Position = (glstate_matrix_mvp * vertex_8);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  mediump vec4 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_8;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_9;
  tmpvar_9 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_10;
  x_10 = (tmpvar_9.w - _Cutoff);
  if ((x_10 < 0.0)) {
    discard;
  };
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  highp vec4 tmpvar_12;
  tmpvar_12 = (_LightMatrix0 * tmpvar_11);
  lightCoord_5 = tmpvar_12;
  lowp vec4 tmpvar_13;
  mediump vec2 P_14;
  P_14 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
  tmpvar_13 = texture2D (_LightTexture0, P_14);
  mediump float tmpvar_15;
  tmpvar_15 = dot (lightCoord_5.xyz, lightCoord_5.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(tmpvar_15));
  mediump float tmpvar_17;
  tmpvar_17 = ((float(
    (lightCoord_5.z > 0.0)
  ) * tmpvar_13.w) * tmpvar_16.w);
  atten_4 = tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_18;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_21 = tmpvar_22;
  mediump vec3 tmpvar_23;
  tmpvar_23 = ((tmpvar_9.xyz * tmpvar_1) * diff_21);
  c_20.xyz = tmpvar_23;
  c_20.w = (tmpvar_9.w * xlv_COLOR0.w);
  c_19.w = c_20.w;
  mediump vec3 tmpvar_24;
  tmpvar_24 = c_20.xyz;
  c_19.xyz = tmpvar_24;
  c_3.xyz = c_19.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldNormal_2;
  mediump vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 v_24;
  v_24.x = _World2Object[0].x;
  v_24.y = _World2Object[1].x;
  v_24.z = _World2Object[2].x;
  v_24.w = _World2Object[3].x;
  highp vec4 v_25;
  v_25.x = _World2Object[0].y;
  v_25.y = _World2Object[1].y;
  v_25.z = _World2Object[2].y;
  v_25.w = _World2Object[3].y;
  highp vec4 v_26;
  v_26.x = _World2Object[0].z;
  v_26.y = _World2Object[1].z;
  v_26.z = _World2Object[2].z;
  v_26.w = _World2Object[3].z;
  highp vec3 tmpvar_27;
  tmpvar_27 = normalize(((
    (v_24.xyz * _glesNormal.x)
   + 
    (v_25.xyz * _glesNormal.y)
  ) + (v_26.xyz * _glesNormal.z)));
  worldNormal_2 = tmpvar_27;
  tmpvar_3 = worldNormal_2;
  gl_Position = (glstate_matrix_mvp * vertex_8);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform lowp samplerCube _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  mediump vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_8;
  tmpvar_8 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_9;
  x_9 = (tmpvar_8.w - _Cutoff);
  if ((x_9 < 0.0)) {
    discard;
  };
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD2;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_LightMatrix0 * tmpvar_10).xyz;
  lightCoord_4 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (lightCoord_4, lightCoord_4);
  lowp float tmpvar_13;
  tmpvar_13 = (texture2D (_LightTextureB0, vec2(tmpvar_12)).w * textureCube (_LightTexture0, lightCoord_4).w);
  lowp vec3 tmpvar_14;
  tmpvar_14 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_14;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_13);
  lowp vec4 c_15;
  lowp vec4 c_16;
  lowp float diff_17;
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_17 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = ((tmpvar_8.xyz * tmpvar_1) * diff_17);
  c_16.xyz = tmpvar_19;
  c_16.w = (tmpvar_8.w * xlv_COLOR0.w);
  c_15.w = c_16.w;
  mediump vec3 tmpvar_20;
  tmpvar_20 = c_16.xyz;
  c_15.xyz = tmpvar_20;
  c_3.xyz = c_15.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldNormal_2;
  mediump vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 v_24;
  v_24.x = _World2Object[0].x;
  v_24.y = _World2Object[1].x;
  v_24.z = _World2Object[2].x;
  v_24.w = _World2Object[3].x;
  highp vec4 v_25;
  v_25.x = _World2Object[0].y;
  v_25.y = _World2Object[1].y;
  v_25.z = _World2Object[2].y;
  v_25.w = _World2Object[3].y;
  highp vec4 v_26;
  v_26.x = _World2Object[0].z;
  v_26.y = _World2Object[1].z;
  v_26.z = _World2Object[2].z;
  v_26.w = _World2Object[3].z;
  highp vec3 tmpvar_27;
  tmpvar_27 = normalize(((
    (v_24.xyz * _glesNormal.x)
   + 
    (v_25.xyz * _glesNormal.y)
  ) + (v_26.xyz * _glesNormal.z)));
  worldNormal_2 = tmpvar_27;
  tmpvar_3 = worldNormal_2;
  gl_Position = (glstate_matrix_mvp * vertex_8);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  mediump vec2 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_8;
  tmpvar_8 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_9;
  x_9 = (tmpvar_8.w - _Cutoff);
  if ((x_9 < 0.0)) {
    discard;
  };
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD2;
  highp vec2 tmpvar_11;
  tmpvar_11 = (_LightMatrix0 * tmpvar_10).xy;
  lightCoord_4 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, lightCoord_4).w;
  lowp vec3 tmpvar_13;
  tmpvar_13 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_13;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_12);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = ((tmpvar_8.xyz * tmpvar_1) * diff_16);
  c_15.xyz = tmpvar_18;
  c_15.w = (tmpvar_8.w * xlv_COLOR0.w);
  c_14.w = c_15.w;
  mediump vec3 tmpvar_19;
  tmpvar_19 = c_15.xyz;
  c_14.xyz = tmpvar_19;
  c_3.xyz = c_14.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
varying highp float xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldNormal_2;
  mediump vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 v_25;
  v_25.x = _World2Object[0].x;
  v_25.y = _World2Object[1].x;
  v_25.z = _World2Object[2].x;
  v_25.w = _World2Object[3].x;
  highp vec4 v_26;
  v_26.x = _World2Object[0].y;
  v_26.y = _World2Object[1].y;
  v_26.z = _World2Object[2].y;
  v_26.w = _World2Object[3].y;
  highp vec4 v_27;
  v_27.x = _World2Object[0].z;
  v_27.y = _World2Object[1].z;
  v_27.z = _World2Object[2].z;
  v_27.w = _World2Object[3].z;
  highp vec3 tmpvar_28;
  tmpvar_28 = normalize(((
    (v_25.xyz * _glesNormal.x)
   + 
    (v_26.xyz * _glesNormal.y)
  ) + (v_27.xyz * _glesNormal.z)));
  worldNormal_2 = tmpvar_28;
  tmpvar_3 = worldNormal_2;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD4 = exp2(-((unity_FogParams.y * tmpvar_24.z)));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  mediump vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_8;
  tmpvar_8 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_9;
  x_9 = (tmpvar_8.w - _Cutoff);
  if ((x_9 < 0.0)) {
    discard;
  };
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD2;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_LightMatrix0 * tmpvar_10).xyz;
  lightCoord_4 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (lightCoord_4, lightCoord_4);
  lowp float tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, vec2(tmpvar_12)).w;
  lowp vec3 tmpvar_14;
  tmpvar_14 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_14;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_13);
  lowp vec4 c_15;
  lowp vec4 c_16;
  lowp float diff_17;
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_17 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = ((tmpvar_8.xyz * tmpvar_1) * diff_17);
  c_16.xyz = tmpvar_19;
  c_16.w = (tmpvar_8.w * xlv_COLOR0.w);
  c_15.w = c_16.w;
  mediump vec3 tmpvar_20;
  tmpvar_20 = c_16.xyz;
  c_15.xyz = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = mix (vec3(0.0, 0.0, 0.0), c_15.xyz, vec3(tmpvar_21));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
varying highp float xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldNormal_2;
  mediump vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 v_25;
  v_25.x = _World2Object[0].x;
  v_25.y = _World2Object[1].x;
  v_25.z = _World2Object[2].x;
  v_25.w = _World2Object[3].x;
  highp vec4 v_26;
  v_26.x = _World2Object[0].y;
  v_26.y = _World2Object[1].y;
  v_26.z = _World2Object[2].y;
  v_26.w = _World2Object[3].y;
  highp vec4 v_27;
  v_27.x = _World2Object[0].z;
  v_27.y = _World2Object[1].z;
  v_27.z = _World2Object[2].z;
  v_27.w = _World2Object[3].z;
  highp vec3 tmpvar_28;
  tmpvar_28 = normalize(((
    (v_25.xyz * _glesNormal.x)
   + 
    (v_26.xyz * _glesNormal.y)
  ) + (v_27.xyz * _glesNormal.z)));
  worldNormal_2 = tmpvar_28;
  tmpvar_3 = worldNormal_2;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD4 = exp2(-((unity_FogParams.y * tmpvar_24.z)));
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_7;
  tmpvar_7 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_8;
  x_8 = (tmpvar_7.w - _Cutoff);
  if ((x_8 < 0.0)) {
    discard;
  };
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_9;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_12 = tmpvar_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = ((tmpvar_7.xyz * tmpvar_1) * diff_12);
  c_11.xyz = tmpvar_14;
  c_11.w = (tmpvar_7.w * xlv_COLOR0.w);
  c_10.w = c_11.w;
  mediump vec3 tmpvar_15;
  tmpvar_15 = c_11.xyz;
  c_10.xyz = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = mix (vec3(0.0, 0.0, 0.0), c_10.xyz, vec3(tmpvar_16));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
varying highp float xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldNormal_2;
  mediump vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 v_25;
  v_25.x = _World2Object[0].x;
  v_25.y = _World2Object[1].x;
  v_25.z = _World2Object[2].x;
  v_25.w = _World2Object[3].x;
  highp vec4 v_26;
  v_26.x = _World2Object[0].y;
  v_26.y = _World2Object[1].y;
  v_26.z = _World2Object[2].y;
  v_26.w = _World2Object[3].y;
  highp vec4 v_27;
  v_27.x = _World2Object[0].z;
  v_27.y = _World2Object[1].z;
  v_27.z = _World2Object[2].z;
  v_27.w = _World2Object[3].z;
  highp vec3 tmpvar_28;
  tmpvar_28 = normalize(((
    (v_25.xyz * _glesNormal.x)
   + 
    (v_26.xyz * _glesNormal.y)
  ) + (v_27.xyz * _glesNormal.z)));
  worldNormal_2 = tmpvar_28;
  tmpvar_3 = worldNormal_2;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD4 = exp2(-((unity_FogParams.y * tmpvar_24.z)));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  mediump vec4 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_8;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_9;
  tmpvar_9 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_10;
  x_10 = (tmpvar_9.w - _Cutoff);
  if ((x_10 < 0.0)) {
    discard;
  };
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  highp vec4 tmpvar_12;
  tmpvar_12 = (_LightMatrix0 * tmpvar_11);
  lightCoord_5 = tmpvar_12;
  lowp vec4 tmpvar_13;
  mediump vec2 P_14;
  P_14 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
  tmpvar_13 = texture2D (_LightTexture0, P_14);
  mediump float tmpvar_15;
  tmpvar_15 = dot (lightCoord_5.xyz, lightCoord_5.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(tmpvar_15));
  mediump float tmpvar_17;
  tmpvar_17 = ((float(
    (lightCoord_5.z > 0.0)
  ) * tmpvar_13.w) * tmpvar_16.w);
  atten_4 = tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_18;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_21 = tmpvar_22;
  mediump vec3 tmpvar_23;
  tmpvar_23 = ((tmpvar_9.xyz * tmpvar_1) * diff_21);
  c_20.xyz = tmpvar_23;
  c_20.w = (tmpvar_9.w * xlv_COLOR0.w);
  c_19.w = c_20.w;
  mediump vec3 tmpvar_24;
  tmpvar_24 = c_20.xyz;
  c_19.xyz = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = mix (vec3(0.0, 0.0, 0.0), c_19.xyz, vec3(tmpvar_25));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
varying highp float xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldNormal_2;
  mediump vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 v_25;
  v_25.x = _World2Object[0].x;
  v_25.y = _World2Object[1].x;
  v_25.z = _World2Object[2].x;
  v_25.w = _World2Object[3].x;
  highp vec4 v_26;
  v_26.x = _World2Object[0].y;
  v_26.y = _World2Object[1].y;
  v_26.z = _World2Object[2].y;
  v_26.w = _World2Object[3].y;
  highp vec4 v_27;
  v_27.x = _World2Object[0].z;
  v_27.y = _World2Object[1].z;
  v_27.z = _World2Object[2].z;
  v_27.w = _World2Object[3].z;
  highp vec3 tmpvar_28;
  tmpvar_28 = normalize(((
    (v_25.xyz * _glesNormal.x)
   + 
    (v_26.xyz * _glesNormal.y)
  ) + (v_27.xyz * _glesNormal.z)));
  worldNormal_2 = tmpvar_28;
  tmpvar_3 = worldNormal_2;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD4 = exp2(-((unity_FogParams.y * tmpvar_24.z)));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform lowp samplerCube _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  mediump vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_8;
  tmpvar_8 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_9;
  x_9 = (tmpvar_8.w - _Cutoff);
  if ((x_9 < 0.0)) {
    discard;
  };
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD2;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_LightMatrix0 * tmpvar_10).xyz;
  lightCoord_4 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (lightCoord_4, lightCoord_4);
  lowp float tmpvar_13;
  tmpvar_13 = (texture2D (_LightTextureB0, vec2(tmpvar_12)).w * textureCube (_LightTexture0, lightCoord_4).w);
  lowp vec3 tmpvar_14;
  tmpvar_14 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_14;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_13);
  lowp vec4 c_15;
  lowp vec4 c_16;
  lowp float diff_17;
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_17 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = ((tmpvar_8.xyz * tmpvar_1) * diff_17);
  c_16.xyz = tmpvar_19;
  c_16.w = (tmpvar_8.w * xlv_COLOR0.w);
  c_15.w = c_16.w;
  mediump vec3 tmpvar_20;
  tmpvar_20 = c_16.xyz;
  c_15.xyz = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = mix (vec3(0.0, 0.0, 0.0), c_15.xyz, vec3(tmpvar_21));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
varying highp float xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldNormal_2;
  mediump vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 v_25;
  v_25.x = _World2Object[0].x;
  v_25.y = _World2Object[1].x;
  v_25.z = _World2Object[2].x;
  v_25.w = _World2Object[3].x;
  highp vec4 v_26;
  v_26.x = _World2Object[0].y;
  v_26.y = _World2Object[1].y;
  v_26.z = _World2Object[2].y;
  v_26.w = _World2Object[3].y;
  highp vec4 v_27;
  v_27.x = _World2Object[0].z;
  v_27.y = _World2Object[1].z;
  v_27.z = _World2Object[2].z;
  v_27.w = _World2Object[3].z;
  highp vec3 tmpvar_28;
  tmpvar_28 = normalize(((
    (v_25.xyz * _glesNormal.x)
   + 
    (v_26.xyz * _glesNormal.y)
  ) + (v_27.xyz * _glesNormal.z)));
  worldNormal_2 = tmpvar_28;
  tmpvar_3 = worldNormal_2;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD4 = exp2(-((unity_FogParams.y * tmpvar_24.z)));
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  mediump vec2 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_8;
  tmpvar_8 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_9;
  x_9 = (tmpvar_8.w - _Cutoff);
  if ((x_9 < 0.0)) {
    discard;
  };
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD2;
  highp vec2 tmpvar_11;
  tmpvar_11 = (_LightMatrix0 * tmpvar_10).xy;
  lightCoord_4 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, lightCoord_4).w;
  lowp vec3 tmpvar_13;
  tmpvar_13 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_13;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_12);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = ((tmpvar_8.xyz * tmpvar_1) * diff_16);
  c_15.xyz = tmpvar_18;
  c_15.w = (tmpvar_8.w * xlv_COLOR0.w);
  c_14.w = c_15.w;
  mediump vec3 tmpvar_19;
  tmpvar_19 = c_15.xyz;
  c_14.xyz = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = mix (vec3(0.0, 0.0, 0.0), c_14.xyz, vec3(tmpvar_20));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "POINT" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP" }
"!!GLES"
}
}
 }
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PrePassBase" "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="GrassBillboard" }
  Cull Off
  GpuProgramID 176492
Program "vp" {
SubProgram "gles " {
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldNormal_2;
  mediump vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 v_24;
  v_24.x = _World2Object[0].x;
  v_24.y = _World2Object[1].x;
  v_24.z = _World2Object[2].x;
  v_24.w = _World2Object[3].x;
  highp vec4 v_25;
  v_25.x = _World2Object[0].y;
  v_25.y = _World2Object[1].y;
  v_25.z = _World2Object[2].y;
  v_25.w = _World2Object[3].y;
  highp vec4 v_26;
  v_26.x = _World2Object[0].z;
  v_26.y = _World2Object[1].z;
  v_26.z = _World2Object[2].z;
  v_26.w = _World2Object[3].z;
  highp vec3 tmpvar_27;
  tmpvar_27 = normalize(((
    (v_24.xyz * _glesNormal.x)
   + 
    (v_25.xyz * _glesNormal.y)
  ) + (v_26.xyz * _glesNormal.z)));
  worldNormal_2 = tmpvar_27;
  tmpvar_3 = worldNormal_2;
  gl_Position = (glstate_matrix_mvp * vertex_8);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp vec4 res_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  lowp float x_3;
  x_3 = ((texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0).w - _Cutoff);
  if ((x_3 < 0.0)) {
    discard;
  };
  res_1.xyz = ((tmpvar_2 * 0.5) + 0.5);
  res_1.w = 0.0;
  gl_FragData[0] = res_1;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
"!!GLES"
}
}
 }
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PrePassFinal" "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="GrassBillboard" }
  ZWrite Off
  Cull Off
  GpuProgramID 228996
Program "vp" {
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 o_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * 0.5);
  highp vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (tmpvar_26.y * _ProjectionParams.x);
  o_25.xy = (tmpvar_27 + tmpvar_26.w);
  o_25.zw = tmpvar_24.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp vec4 v_28;
  v_28.x = _World2Object[0].x;
  v_28.y = _World2Object[1].x;
  v_28.z = _World2Object[2].x;
  v_28.w = _World2Object[3].x;
  highp vec4 v_29;
  v_29.x = _World2Object[0].y;
  v_29.y = _World2Object[1].y;
  v_29.z = _World2Object[2].y;
  v_29.w = _World2Object[3].y;
  highp vec4 v_30;
  v_30.x = _World2Object[0].z;
  v_30.y = _World2Object[1].z;
  v_30.z = _World2Object[2].z;
  v_30.w = _World2Object[3].z;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = normalize(((
    (v_28.xyz * _glesNormal.x)
   + 
    (v_29.xyz * _glesNormal.y)
  ) + (v_30.xyz * _glesNormal.z)));
  mediump vec3 tmpvar_32;
  mediump vec4 normal_33;
  normal_33 = tmpvar_31;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_32 = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  tmpvar_3 = tmpvar_32;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD2 = o_25;
  xlv_TEXCOORD3 = tmpvar_2;
  xlv_TEXCOORD4 = tmpvar_3;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_5;
  x_5 = (tmpvar_4.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_7 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_7.w;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7.xyz + xlv_TEXCOORD4);
  light_3.xyz = tmpvar_8;
  lowp vec4 c_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_4.xyz * light_3.xyz);
  c_9.xyz = tmpvar_10;
  c_9.w = (tmpvar_4.w * xlv_COLOR0.w);
  c_2.xyz = c_9.xyz;
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 o_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * 0.5);
  highp vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (tmpvar_26.y * _ProjectionParams.x);
  o_25.xy = (tmpvar_27 + tmpvar_26.w);
  o_25.zw = tmpvar_24.zw;
  tmpvar_2.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp vec4 v_28;
  v_28.x = _World2Object[0].x;
  v_28.y = _World2Object[1].x;
  v_28.z = _World2Object[2].x;
  v_28.w = _World2Object[3].x;
  highp vec4 v_29;
  v_29.x = _World2Object[0].y;
  v_29.y = _World2Object[1].y;
  v_29.z = _World2Object[2].y;
  v_29.w = _World2Object[3].y;
  highp vec4 v_30;
  v_30.x = _World2Object[0].z;
  v_30.y = _World2Object[1].z;
  v_30.z = _World2Object[2].z;
  v_30.w = _World2Object[3].z;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = normalize(((
    (v_28.xyz * _glesNormal.x)
   + 
    (v_29.xyz * _glesNormal.y)
  ) + (v_30.xyz * _glesNormal.z)));
  mediump vec3 tmpvar_32;
  mediump vec4 normal_33;
  normal_33 = tmpvar_31;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_32 = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  tmpvar_3 = tmpvar_32;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD2 = o_25;
  xlv_TEXCOORD3 = tmpvar_2;
  xlv_TEXCOORD4 = tmpvar_3;
}



#endif
#ifdef FRAGMENT

uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_5;
  x_5 = (tmpvar_4.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_7 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_7.w;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7.xyz + xlv_TEXCOORD4);
  light_3.xyz = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
  light_3.xyz = (light_3.xyz + pow ((
    (unity_DynamicLightmap_HDR.x * tmpvar_9.w)
   * tmpvar_9.xyz), unity_DynamicLightmap_HDR.yyy));
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4.xyz * light_3.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = (tmpvar_4.w * xlv_COLOR0.w);
  c_2.xyz = c_10.xyz;
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 o_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * 0.5);
  highp vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (tmpvar_26.y * _ProjectionParams.x);
  o_25.xy = (tmpvar_27 + tmpvar_26.w);
  o_25.zw = tmpvar_24.zw;
  tmpvar_2.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp vec4 v_28;
  v_28.x = _World2Object[0].x;
  v_28.y = _World2Object[1].x;
  v_28.z = _World2Object[2].x;
  v_28.w = _World2Object[3].x;
  highp vec4 v_29;
  v_29.x = _World2Object[0].y;
  v_29.y = _World2Object[1].y;
  v_29.z = _World2Object[2].y;
  v_29.w = _World2Object[3].y;
  highp vec4 v_30;
  v_30.x = _World2Object[0].z;
  v_30.y = _World2Object[1].z;
  v_30.z = _World2Object[2].z;
  v_30.w = _World2Object[3].z;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = normalize(((
    (v_28.xyz * _glesNormal.x)
   + 
    (v_29.xyz * _glesNormal.y)
  ) + (v_30.xyz * _glesNormal.z)));
  mediump vec3 tmpvar_32;
  mediump vec4 normal_33;
  normal_33 = tmpvar_31;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_32 = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  tmpvar_3 = tmpvar_32;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD2 = o_25;
  xlv_TEXCOORD3 = tmpvar_2;
  xlv_TEXCOORD4 = tmpvar_3;
}



#endif
#ifdef FRAGMENT

uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_5;
  x_5 = (tmpvar_4.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_7 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_7.w;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7.xyz + xlv_TEXCOORD4);
  light_3.xyz = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
  light_3.xyz = (light_3.xyz + pow ((
    (unity_DynamicLightmap_HDR.x * tmpvar_9.w)
   * tmpvar_9.xyz), unity_DynamicLightmap_HDR.yyy));
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4.xyz * light_3.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = (tmpvar_4.w * xlv_COLOR0.w);
  c_2.xyz = c_10.xyz;
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldBinormal_2;
  lowp vec3 worldTangent_3;
  lowp vec3 worldNormal_4;
  highp vec4 tmpvar_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  highp vec4 pos_9;
  pos_9 = _glesVertex;
  highp vec2 offset_10;
  offset_10 = _glesTANGENT.xy;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_12;
  tmpvar_12 = dot (tmpvar_11, tmpvar_11);
  if ((tmpvar_12 > _WaveAndDistance.w)) {
    offset_10 = vec2(0.0, 0.0);
  };
  pos_9.xyz = (_glesVertex.xyz + (offset_10.x * _CameraRight));
  pos_9.xyz = (pos_9.xyz + (offset_10.y * _CameraUp));
  highp vec4 vertex_13;
  vertex_13.yw = pos_9.yw;
  lowp vec4 color_14;
  color_14.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_15;
  highp vec3 waveMove_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = ((fract(
    (((pos_9.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_9.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * tmpvar_17);
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_18);
  highp vec4 tmpvar_21;
  tmpvar_21 = (((tmpvar_17 + 
    (tmpvar_19 * -0.1616162)
  ) + (tmpvar_20 * 0.0083333)) + ((tmpvar_20 * tmpvar_18) * -0.00019841));
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * tmpvar_21);
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * _glesTANGENT.y);
  waveMove_16.y = 0.0;
  waveMove_16.x = dot (tmpvar_24, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_16.z = dot (tmpvar_24, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_13.xz = (pos_9.xz - (waveMove_16.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_25;
  tmpvar_25 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_23, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_15 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (vertex_13.xyz - _CameraPosition.xyz);
  highp float tmpvar_27;
  tmpvar_27 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_26, tmpvar_26))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_14.w = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28.xyz = ((2.0 * waveColor_15) * _glesColor.xyz);
  tmpvar_28.w = color_14.w;
  highp vec4 tmpvar_29;
  tmpvar_29 = (glstate_matrix_mvp * vertex_13);
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * vertex_13).xyz;
  highp vec4 v_31;
  v_31.x = _World2Object[0].x;
  v_31.y = _World2Object[1].x;
  v_31.z = _World2Object[2].x;
  v_31.w = _World2Object[3].x;
  highp vec4 v_32;
  v_32.x = _World2Object[0].y;
  v_32.y = _World2Object[1].y;
  v_32.z = _World2Object[2].y;
  v_32.w = _World2Object[3].y;
  highp vec4 v_33;
  v_33.x = _World2Object[0].z;
  v_33.y = _World2Object[1].z;
  v_33.z = _World2Object[2].z;
  v_33.w = _World2Object[3].z;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(((
    (v_31.xyz * _glesNormal.x)
   + 
    (v_32.xyz * _glesNormal.y)
  ) + (v_33.xyz * _glesNormal.z)));
  worldNormal_4 = tmpvar_34;
  highp mat3 tmpvar_35;
  tmpvar_35[0] = _Object2World[0].xyz;
  tmpvar_35[1] = _Object2World[1].xyz;
  tmpvar_35[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_36;
  tmpvar_36 = normalize((tmpvar_35 * _glesTANGENT.xyz));
  worldTangent_3 = tmpvar_36;
  lowp vec3 tmpvar_37;
  tmpvar_37 = ((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx));
  highp vec3 tmpvar_38;
  tmpvar_38 = (tmpvar_37 * _glesTANGENT.w);
  worldBinormal_2 = tmpvar_38;
  highp vec4 tmpvar_39;
  tmpvar_39.x = worldTangent_3.x;
  tmpvar_39.y = worldBinormal_2.x;
  tmpvar_39.z = worldNormal_4.x;
  tmpvar_39.w = tmpvar_30.x;
  highp vec3 tmpvar_40;
  tmpvar_40 = tmpvar_39.xyz;
  tmpvar_6 = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41.x = worldTangent_3.y;
  tmpvar_41.y = worldBinormal_2.y;
  tmpvar_41.z = worldNormal_4.y;
  tmpvar_41.w = tmpvar_30.y;
  highp vec3 tmpvar_42;
  tmpvar_42 = tmpvar_41.xyz;
  tmpvar_7 = tmpvar_42;
  highp vec4 tmpvar_43;
  tmpvar_43.x = worldTangent_3.z;
  tmpvar_43.y = worldBinormal_2.z;
  tmpvar_43.z = worldNormal_4.z;
  tmpvar_43.w = tmpvar_30.z;
  highp vec3 tmpvar_44;
  tmpvar_44 = tmpvar_43.xyz;
  tmpvar_8 = tmpvar_44;
  highp vec4 o_45;
  highp vec4 tmpvar_46;
  tmpvar_46 = (tmpvar_29 * 0.5);
  highp vec2 tmpvar_47;
  tmpvar_47.x = tmpvar_46.x;
  tmpvar_47.y = (tmpvar_46.y * _ProjectionParams.x);
  o_45.xy = (tmpvar_47 + tmpvar_46.w);
  o_45.zw = tmpvar_29.zw;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_29;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_30;
  xlv_COLOR0 = tmpvar_28;
  xlv_TEXCOORD2 = o_45;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_6;
  x_6 = (tmpvar_5.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_LightmapInd, xlv_TEXCOORD3.xy);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (2.0 * tmpvar_8.xyz);
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_4;
  lowp vec3 y_12;
  y_12 = (tmpvar_9.xyz - 0.5);
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = ((tmpvar_10 * (
    dot (normalWorld_11, y_12)
   + 0.5)) / tmpvar_9.w);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (-(log2(
    max (light_3, vec4(0.001, 0.001, 0.001, 0.001))
  )) + tmpvar_13);
  light_3 = tmpvar_14;
  lowp vec4 c_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_5.xyz * tmpvar_14.xyz);
  c_15.xyz = tmpvar_16;
  c_15.w = (tmpvar_5.w * xlv_COLOR0.w);
  c_2.xyz = c_15.xyz;
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldBinormal_2;
  lowp vec3 worldTangent_3;
  lowp vec3 worldNormal_4;
  highp vec4 tmpvar_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  highp vec4 pos_9;
  pos_9 = _glesVertex;
  highp vec2 offset_10;
  offset_10 = _glesTANGENT.xy;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_12;
  tmpvar_12 = dot (tmpvar_11, tmpvar_11);
  if ((tmpvar_12 > _WaveAndDistance.w)) {
    offset_10 = vec2(0.0, 0.0);
  };
  pos_9.xyz = (_glesVertex.xyz + (offset_10.x * _CameraRight));
  pos_9.xyz = (pos_9.xyz + (offset_10.y * _CameraUp));
  highp vec4 vertex_13;
  vertex_13.yw = pos_9.yw;
  lowp vec4 color_14;
  color_14.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_15;
  highp vec3 waveMove_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = ((fract(
    (((pos_9.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_9.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * tmpvar_17);
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_18);
  highp vec4 tmpvar_21;
  tmpvar_21 = (((tmpvar_17 + 
    (tmpvar_19 * -0.1616162)
  ) + (tmpvar_20 * 0.0083333)) + ((tmpvar_20 * tmpvar_18) * -0.00019841));
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * tmpvar_21);
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * _glesTANGENT.y);
  waveMove_16.y = 0.0;
  waveMove_16.x = dot (tmpvar_24, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_16.z = dot (tmpvar_24, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_13.xz = (pos_9.xz - (waveMove_16.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_25;
  tmpvar_25 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_23, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_15 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (vertex_13.xyz - _CameraPosition.xyz);
  highp float tmpvar_27;
  tmpvar_27 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_26, tmpvar_26))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_14.w = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28.xyz = ((2.0 * waveColor_15) * _glesColor.xyz);
  tmpvar_28.w = color_14.w;
  highp vec4 tmpvar_29;
  tmpvar_29 = (glstate_matrix_mvp * vertex_13);
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * vertex_13).xyz;
  highp vec4 v_31;
  v_31.x = _World2Object[0].x;
  v_31.y = _World2Object[1].x;
  v_31.z = _World2Object[2].x;
  v_31.w = _World2Object[3].x;
  highp vec4 v_32;
  v_32.x = _World2Object[0].y;
  v_32.y = _World2Object[1].y;
  v_32.z = _World2Object[2].y;
  v_32.w = _World2Object[3].y;
  highp vec4 v_33;
  v_33.x = _World2Object[0].z;
  v_33.y = _World2Object[1].z;
  v_33.z = _World2Object[2].z;
  v_33.w = _World2Object[3].z;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(((
    (v_31.xyz * _glesNormal.x)
   + 
    (v_32.xyz * _glesNormal.y)
  ) + (v_33.xyz * _glesNormal.z)));
  worldNormal_4 = tmpvar_34;
  highp mat3 tmpvar_35;
  tmpvar_35[0] = _Object2World[0].xyz;
  tmpvar_35[1] = _Object2World[1].xyz;
  tmpvar_35[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_36;
  tmpvar_36 = normalize((tmpvar_35 * _glesTANGENT.xyz));
  worldTangent_3 = tmpvar_36;
  lowp vec3 tmpvar_37;
  tmpvar_37 = ((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx));
  highp vec3 tmpvar_38;
  tmpvar_38 = (tmpvar_37 * _glesTANGENT.w);
  worldBinormal_2 = tmpvar_38;
  highp vec4 tmpvar_39;
  tmpvar_39.x = worldTangent_3.x;
  tmpvar_39.y = worldBinormal_2.x;
  tmpvar_39.z = worldNormal_4.x;
  tmpvar_39.w = tmpvar_30.x;
  highp vec3 tmpvar_40;
  tmpvar_40 = tmpvar_39.xyz;
  tmpvar_6 = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41.x = worldTangent_3.y;
  tmpvar_41.y = worldBinormal_2.y;
  tmpvar_41.z = worldNormal_4.y;
  tmpvar_41.w = tmpvar_30.y;
  highp vec3 tmpvar_42;
  tmpvar_42 = tmpvar_41.xyz;
  tmpvar_7 = tmpvar_42;
  highp vec4 tmpvar_43;
  tmpvar_43.x = worldTangent_3.z;
  tmpvar_43.y = worldBinormal_2.z;
  tmpvar_43.z = worldNormal_4.z;
  tmpvar_43.w = tmpvar_30.z;
  highp vec3 tmpvar_44;
  tmpvar_44 = tmpvar_43.xyz;
  tmpvar_8 = tmpvar_44;
  highp vec4 o_45;
  highp vec4 tmpvar_46;
  tmpvar_46 = (tmpvar_29 * 0.5);
  highp vec2 tmpvar_47;
  tmpvar_47.x = tmpvar_46.x;
  tmpvar_47.y = (tmpvar_46.y * _ProjectionParams.x);
  o_45.xy = (tmpvar_47 + tmpvar_46.w);
  o_45.zw = tmpvar_29.zw;
  tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_29;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_30;
  xlv_COLOR0 = tmpvar_28;
  xlv_TEXCOORD2 = o_45;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_6;
  x_6 = (tmpvar_5.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_LightmapInd, xlv_TEXCOORD3.xy);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (2.0 * tmpvar_8.xyz);
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_4;
  lowp vec3 y_12;
  y_12 = (tmpvar_9.xyz - 0.5);
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = ((tmpvar_10 * (
    dot (normalWorld_11, y_12)
   + 0.5)) / tmpvar_9.w);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (-(log2(
    max (light_3, vec4(0.001, 0.001, 0.001, 0.001))
  )) + tmpvar_13);
  light_3.w = tmpvar_14.w;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
  light_3.xyz = (tmpvar_14.xyz + pow ((
    (unity_DynamicLightmap_HDR.x * tmpvar_15.w)
   * tmpvar_15.xyz), unity_DynamicLightmap_HDR.yyy));
  lowp vec4 c_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = (tmpvar_5.xyz * light_3.xyz);
  c_16.xyz = tmpvar_17;
  c_16.w = (tmpvar_5.w * xlv_COLOR0.w);
  c_2.xyz = c_16.xyz;
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 o_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * 0.5);
  highp vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (tmpvar_26.y * _ProjectionParams.x);
  o_25.xy = (tmpvar_27 + tmpvar_26.w);
  o_25.zw = tmpvar_24.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp vec4 v_28;
  v_28.x = _World2Object[0].x;
  v_28.y = _World2Object[1].x;
  v_28.z = _World2Object[2].x;
  v_28.w = _World2Object[3].x;
  highp vec4 v_29;
  v_29.x = _World2Object[0].y;
  v_29.y = _World2Object[1].y;
  v_29.z = _World2Object[2].y;
  v_29.w = _World2Object[3].y;
  highp vec4 v_30;
  v_30.x = _World2Object[0].z;
  v_30.y = _World2Object[1].z;
  v_30.z = _World2Object[2].z;
  v_30.w = _World2Object[3].z;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = normalize(((
    (v_28.xyz * _glesNormal.x)
   + 
    (v_29.xyz * _glesNormal.y)
  ) + (v_30.xyz * _glesNormal.z)));
  mediump vec3 tmpvar_32;
  mediump vec4 normal_33;
  normal_33 = tmpvar_31;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_32 = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  tmpvar_3 = tmpvar_32;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD2 = o_25;
  xlv_TEXCOORD3 = tmpvar_2;
  xlv_TEXCOORD4 = tmpvar_3;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_5;
  x_5 = (tmpvar_4.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_7 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_7.w;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7.xyz + xlv_TEXCOORD4);
  light_3.xyz = tmpvar_8;
  lowp vec4 c_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_4.xyz * light_3.xyz);
  c_9.xyz = tmpvar_10;
  c_9.w = (tmpvar_4.w * xlv_COLOR0.w);
  c_2.xyz = c_9.xyz;
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 o_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * 0.5);
  highp vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (tmpvar_26.y * _ProjectionParams.x);
  o_25.xy = (tmpvar_27 + tmpvar_26.w);
  o_25.zw = tmpvar_24.zw;
  tmpvar_2.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp vec4 v_28;
  v_28.x = _World2Object[0].x;
  v_28.y = _World2Object[1].x;
  v_28.z = _World2Object[2].x;
  v_28.w = _World2Object[3].x;
  highp vec4 v_29;
  v_29.x = _World2Object[0].y;
  v_29.y = _World2Object[1].y;
  v_29.z = _World2Object[2].y;
  v_29.w = _World2Object[3].y;
  highp vec4 v_30;
  v_30.x = _World2Object[0].z;
  v_30.y = _World2Object[1].z;
  v_30.z = _World2Object[2].z;
  v_30.w = _World2Object[3].z;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = normalize(((
    (v_28.xyz * _glesNormal.x)
   + 
    (v_29.xyz * _glesNormal.y)
  ) + (v_30.xyz * _glesNormal.z)));
  mediump vec3 tmpvar_32;
  mediump vec4 normal_33;
  normal_33 = tmpvar_31;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_32 = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  tmpvar_3 = tmpvar_32;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD2 = o_25;
  xlv_TEXCOORD3 = tmpvar_2;
  xlv_TEXCOORD4 = tmpvar_3;
}



#endif
#ifdef FRAGMENT

uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_5;
  x_5 = (tmpvar_4.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_7 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_7.w;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7.xyz + xlv_TEXCOORD4);
  light_3.xyz = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
  light_3.xyz = (light_3.xyz + pow ((
    (unity_DynamicLightmap_HDR.x * tmpvar_9.w)
   * tmpvar_9.xyz), unity_DynamicLightmap_HDR.yyy));
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4.xyz * light_3.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = (tmpvar_4.w * xlv_COLOR0.w);
  c_2.xyz = c_10.xyz;
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 o_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * 0.5);
  highp vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (tmpvar_26.y * _ProjectionParams.x);
  o_25.xy = (tmpvar_27 + tmpvar_26.w);
  o_25.zw = tmpvar_24.zw;
  tmpvar_2.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp vec4 v_28;
  v_28.x = _World2Object[0].x;
  v_28.y = _World2Object[1].x;
  v_28.z = _World2Object[2].x;
  v_28.w = _World2Object[3].x;
  highp vec4 v_29;
  v_29.x = _World2Object[0].y;
  v_29.y = _World2Object[1].y;
  v_29.z = _World2Object[2].y;
  v_29.w = _World2Object[3].y;
  highp vec4 v_30;
  v_30.x = _World2Object[0].z;
  v_30.y = _World2Object[1].z;
  v_30.z = _World2Object[2].z;
  v_30.w = _World2Object[3].z;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = normalize(((
    (v_28.xyz * _glesNormal.x)
   + 
    (v_29.xyz * _glesNormal.y)
  ) + (v_30.xyz * _glesNormal.z)));
  mediump vec3 tmpvar_32;
  mediump vec4 normal_33;
  normal_33 = tmpvar_31;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_32 = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  tmpvar_3 = tmpvar_32;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD2 = o_25;
  xlv_TEXCOORD3 = tmpvar_2;
  xlv_TEXCOORD4 = tmpvar_3;
}



#endif
#ifdef FRAGMENT

uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_5;
  x_5 = (tmpvar_4.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_7 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_7.w;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7.xyz + xlv_TEXCOORD4);
  light_3.xyz = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
  light_3.xyz = (light_3.xyz + pow ((
    (unity_DynamicLightmap_HDR.x * tmpvar_9.w)
   * tmpvar_9.xyz), unity_DynamicLightmap_HDR.yyy));
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4.xyz * light_3.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = (tmpvar_4.w * xlv_COLOR0.w);
  c_2.xyz = c_10.xyz;
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldBinormal_2;
  lowp vec3 worldTangent_3;
  lowp vec3 worldNormal_4;
  highp vec4 tmpvar_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  highp vec4 pos_9;
  pos_9 = _glesVertex;
  highp vec2 offset_10;
  offset_10 = _glesTANGENT.xy;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_12;
  tmpvar_12 = dot (tmpvar_11, tmpvar_11);
  if ((tmpvar_12 > _WaveAndDistance.w)) {
    offset_10 = vec2(0.0, 0.0);
  };
  pos_9.xyz = (_glesVertex.xyz + (offset_10.x * _CameraRight));
  pos_9.xyz = (pos_9.xyz + (offset_10.y * _CameraUp));
  highp vec4 vertex_13;
  vertex_13.yw = pos_9.yw;
  lowp vec4 color_14;
  color_14.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_15;
  highp vec3 waveMove_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = ((fract(
    (((pos_9.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_9.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * tmpvar_17);
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_18);
  highp vec4 tmpvar_21;
  tmpvar_21 = (((tmpvar_17 + 
    (tmpvar_19 * -0.1616162)
  ) + (tmpvar_20 * 0.0083333)) + ((tmpvar_20 * tmpvar_18) * -0.00019841));
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * tmpvar_21);
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * _glesTANGENT.y);
  waveMove_16.y = 0.0;
  waveMove_16.x = dot (tmpvar_24, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_16.z = dot (tmpvar_24, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_13.xz = (pos_9.xz - (waveMove_16.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_25;
  tmpvar_25 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_23, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_15 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (vertex_13.xyz - _CameraPosition.xyz);
  highp float tmpvar_27;
  tmpvar_27 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_26, tmpvar_26))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_14.w = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28.xyz = ((2.0 * waveColor_15) * _glesColor.xyz);
  tmpvar_28.w = color_14.w;
  highp vec4 tmpvar_29;
  tmpvar_29 = (glstate_matrix_mvp * vertex_13);
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * vertex_13).xyz;
  highp vec4 v_31;
  v_31.x = _World2Object[0].x;
  v_31.y = _World2Object[1].x;
  v_31.z = _World2Object[2].x;
  v_31.w = _World2Object[3].x;
  highp vec4 v_32;
  v_32.x = _World2Object[0].y;
  v_32.y = _World2Object[1].y;
  v_32.z = _World2Object[2].y;
  v_32.w = _World2Object[3].y;
  highp vec4 v_33;
  v_33.x = _World2Object[0].z;
  v_33.y = _World2Object[1].z;
  v_33.z = _World2Object[2].z;
  v_33.w = _World2Object[3].z;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(((
    (v_31.xyz * _glesNormal.x)
   + 
    (v_32.xyz * _glesNormal.y)
  ) + (v_33.xyz * _glesNormal.z)));
  worldNormal_4 = tmpvar_34;
  highp mat3 tmpvar_35;
  tmpvar_35[0] = _Object2World[0].xyz;
  tmpvar_35[1] = _Object2World[1].xyz;
  tmpvar_35[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_36;
  tmpvar_36 = normalize((tmpvar_35 * _glesTANGENT.xyz));
  worldTangent_3 = tmpvar_36;
  lowp vec3 tmpvar_37;
  tmpvar_37 = ((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx));
  highp vec3 tmpvar_38;
  tmpvar_38 = (tmpvar_37 * _glesTANGENT.w);
  worldBinormal_2 = tmpvar_38;
  highp vec4 tmpvar_39;
  tmpvar_39.x = worldTangent_3.x;
  tmpvar_39.y = worldBinormal_2.x;
  tmpvar_39.z = worldNormal_4.x;
  tmpvar_39.w = tmpvar_30.x;
  highp vec3 tmpvar_40;
  tmpvar_40 = tmpvar_39.xyz;
  tmpvar_6 = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41.x = worldTangent_3.y;
  tmpvar_41.y = worldBinormal_2.y;
  tmpvar_41.z = worldNormal_4.y;
  tmpvar_41.w = tmpvar_30.y;
  highp vec3 tmpvar_42;
  tmpvar_42 = tmpvar_41.xyz;
  tmpvar_7 = tmpvar_42;
  highp vec4 tmpvar_43;
  tmpvar_43.x = worldTangent_3.z;
  tmpvar_43.y = worldBinormal_2.z;
  tmpvar_43.z = worldNormal_4.z;
  tmpvar_43.w = tmpvar_30.z;
  highp vec3 tmpvar_44;
  tmpvar_44 = tmpvar_43.xyz;
  tmpvar_8 = tmpvar_44;
  highp vec4 o_45;
  highp vec4 tmpvar_46;
  tmpvar_46 = (tmpvar_29 * 0.5);
  highp vec2 tmpvar_47;
  tmpvar_47.x = tmpvar_46.x;
  tmpvar_47.y = (tmpvar_46.y * _ProjectionParams.x);
  o_45.xy = (tmpvar_47 + tmpvar_46.w);
  o_45.zw = tmpvar_29.zw;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_29;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_30;
  xlv_COLOR0 = tmpvar_28;
  xlv_TEXCOORD2 = o_45;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_6;
  x_6 = (tmpvar_5.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_LightmapInd, xlv_TEXCOORD3.xy);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (2.0 * tmpvar_8.xyz);
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_4;
  lowp vec3 y_12;
  y_12 = (tmpvar_9.xyz - 0.5);
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = ((tmpvar_10 * (
    dot (normalWorld_11, y_12)
   + 0.5)) / tmpvar_9.w);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_13);
  light_3 = tmpvar_14;
  lowp vec4 c_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_5.xyz * tmpvar_14.xyz);
  c_15.xyz = tmpvar_16;
  c_15.w = (tmpvar_5.w * xlv_COLOR0.w);
  c_2.xyz = c_15.xyz;
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldBinormal_2;
  lowp vec3 worldTangent_3;
  lowp vec3 worldNormal_4;
  highp vec4 tmpvar_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  highp vec4 pos_9;
  pos_9 = _glesVertex;
  highp vec2 offset_10;
  offset_10 = _glesTANGENT.xy;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_12;
  tmpvar_12 = dot (tmpvar_11, tmpvar_11);
  if ((tmpvar_12 > _WaveAndDistance.w)) {
    offset_10 = vec2(0.0, 0.0);
  };
  pos_9.xyz = (_glesVertex.xyz + (offset_10.x * _CameraRight));
  pos_9.xyz = (pos_9.xyz + (offset_10.y * _CameraUp));
  highp vec4 vertex_13;
  vertex_13.yw = pos_9.yw;
  lowp vec4 color_14;
  color_14.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_15;
  highp vec3 waveMove_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = ((fract(
    (((pos_9.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_9.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * tmpvar_17);
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_18);
  highp vec4 tmpvar_21;
  tmpvar_21 = (((tmpvar_17 + 
    (tmpvar_19 * -0.1616162)
  ) + (tmpvar_20 * 0.0083333)) + ((tmpvar_20 * tmpvar_18) * -0.00019841));
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * tmpvar_21);
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * _glesTANGENT.y);
  waveMove_16.y = 0.0;
  waveMove_16.x = dot (tmpvar_24, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_16.z = dot (tmpvar_24, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_13.xz = (pos_9.xz - (waveMove_16.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_25;
  tmpvar_25 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_23, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_15 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (vertex_13.xyz - _CameraPosition.xyz);
  highp float tmpvar_27;
  tmpvar_27 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_26, tmpvar_26))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_14.w = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28.xyz = ((2.0 * waveColor_15) * _glesColor.xyz);
  tmpvar_28.w = color_14.w;
  highp vec4 tmpvar_29;
  tmpvar_29 = (glstate_matrix_mvp * vertex_13);
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * vertex_13).xyz;
  highp vec4 v_31;
  v_31.x = _World2Object[0].x;
  v_31.y = _World2Object[1].x;
  v_31.z = _World2Object[2].x;
  v_31.w = _World2Object[3].x;
  highp vec4 v_32;
  v_32.x = _World2Object[0].y;
  v_32.y = _World2Object[1].y;
  v_32.z = _World2Object[2].y;
  v_32.w = _World2Object[3].y;
  highp vec4 v_33;
  v_33.x = _World2Object[0].z;
  v_33.y = _World2Object[1].z;
  v_33.z = _World2Object[2].z;
  v_33.w = _World2Object[3].z;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(((
    (v_31.xyz * _glesNormal.x)
   + 
    (v_32.xyz * _glesNormal.y)
  ) + (v_33.xyz * _glesNormal.z)));
  worldNormal_4 = tmpvar_34;
  highp mat3 tmpvar_35;
  tmpvar_35[0] = _Object2World[0].xyz;
  tmpvar_35[1] = _Object2World[1].xyz;
  tmpvar_35[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_36;
  tmpvar_36 = normalize((tmpvar_35 * _glesTANGENT.xyz));
  worldTangent_3 = tmpvar_36;
  lowp vec3 tmpvar_37;
  tmpvar_37 = ((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx));
  highp vec3 tmpvar_38;
  tmpvar_38 = (tmpvar_37 * _glesTANGENT.w);
  worldBinormal_2 = tmpvar_38;
  highp vec4 tmpvar_39;
  tmpvar_39.x = worldTangent_3.x;
  tmpvar_39.y = worldBinormal_2.x;
  tmpvar_39.z = worldNormal_4.x;
  tmpvar_39.w = tmpvar_30.x;
  highp vec3 tmpvar_40;
  tmpvar_40 = tmpvar_39.xyz;
  tmpvar_6 = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41.x = worldTangent_3.y;
  tmpvar_41.y = worldBinormal_2.y;
  tmpvar_41.z = worldNormal_4.y;
  tmpvar_41.w = tmpvar_30.y;
  highp vec3 tmpvar_42;
  tmpvar_42 = tmpvar_41.xyz;
  tmpvar_7 = tmpvar_42;
  highp vec4 tmpvar_43;
  tmpvar_43.x = worldTangent_3.z;
  tmpvar_43.y = worldBinormal_2.z;
  tmpvar_43.z = worldNormal_4.z;
  tmpvar_43.w = tmpvar_30.z;
  highp vec3 tmpvar_44;
  tmpvar_44 = tmpvar_43.xyz;
  tmpvar_8 = tmpvar_44;
  highp vec4 o_45;
  highp vec4 tmpvar_46;
  tmpvar_46 = (tmpvar_29 * 0.5);
  highp vec2 tmpvar_47;
  tmpvar_47.x = tmpvar_46.x;
  tmpvar_47.y = (tmpvar_46.y * _ProjectionParams.x);
  o_45.xy = (tmpvar_47 + tmpvar_46.w);
  o_45.zw = tmpvar_29.zw;
  tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_29;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_30;
  xlv_COLOR0 = tmpvar_28;
  xlv_TEXCOORD2 = o_45;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_6;
  x_6 = (tmpvar_5.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_LightmapInd, xlv_TEXCOORD3.xy);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (2.0 * tmpvar_8.xyz);
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_4;
  lowp vec3 y_12;
  y_12 = (tmpvar_9.xyz - 0.5);
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = ((tmpvar_10 * (
    dot (normalWorld_11, y_12)
   + 0.5)) / tmpvar_9.w);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_13);
  light_3.w = tmpvar_14.w;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
  light_3.xyz = (tmpvar_14.xyz + pow ((
    (unity_DynamicLightmap_HDR.x * tmpvar_15.w)
   * tmpvar_15.xyz), unity_DynamicLightmap_HDR.yyy));
  lowp vec4 c_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = (tmpvar_5.xyz * light_3.xyz);
  c_16.xyz = tmpvar_17;
  c_16.w = (tmpvar_5.w * xlv_COLOR0.w);
  c_2.xyz = c_16.xyz;
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 o_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * 0.5);
  highp vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (tmpvar_26.y * _ProjectionParams.x);
  o_25.xy = (tmpvar_27 + tmpvar_26.w);
  o_25.zw = tmpvar_24.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp vec4 v_28;
  v_28.x = _World2Object[0].x;
  v_28.y = _World2Object[1].x;
  v_28.z = _World2Object[2].x;
  v_28.w = _World2Object[3].x;
  highp vec4 v_29;
  v_29.x = _World2Object[0].y;
  v_29.y = _World2Object[1].y;
  v_29.z = _World2Object[2].y;
  v_29.w = _World2Object[3].y;
  highp vec4 v_30;
  v_30.x = _World2Object[0].z;
  v_30.y = _World2Object[1].z;
  v_30.z = _World2Object[2].z;
  v_30.w = _World2Object[3].z;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = normalize(((
    (v_28.xyz * _glesNormal.x)
   + 
    (v_29.xyz * _glesNormal.y)
  ) + (v_30.xyz * _glesNormal.z)));
  mediump vec3 tmpvar_32;
  mediump vec4 normal_33;
  normal_33 = tmpvar_31;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_32 = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  tmpvar_3 = tmpvar_32;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD2 = o_25;
  xlv_TEXCOORD3 = tmpvar_2;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_24.z)));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_5;
  x_5 = (tmpvar_4.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_7 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_7.w;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7.xyz + xlv_TEXCOORD4);
  light_3.xyz = tmpvar_8;
  lowp vec4 c_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_4.xyz * light_3.xyz);
  c_9.xyz = tmpvar_10;
  c_9.w = (tmpvar_4.w * xlv_COLOR0.w);
  c_2 = c_9;
  highp float tmpvar_11;
  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 o_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * 0.5);
  highp vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (tmpvar_26.y * _ProjectionParams.x);
  o_25.xy = (tmpvar_27 + tmpvar_26.w);
  o_25.zw = tmpvar_24.zw;
  tmpvar_2.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp vec4 v_28;
  v_28.x = _World2Object[0].x;
  v_28.y = _World2Object[1].x;
  v_28.z = _World2Object[2].x;
  v_28.w = _World2Object[3].x;
  highp vec4 v_29;
  v_29.x = _World2Object[0].y;
  v_29.y = _World2Object[1].y;
  v_29.z = _World2Object[2].y;
  v_29.w = _World2Object[3].y;
  highp vec4 v_30;
  v_30.x = _World2Object[0].z;
  v_30.y = _World2Object[1].z;
  v_30.z = _World2Object[2].z;
  v_30.w = _World2Object[3].z;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = normalize(((
    (v_28.xyz * _glesNormal.x)
   + 
    (v_29.xyz * _glesNormal.y)
  ) + (v_30.xyz * _glesNormal.z)));
  mediump vec3 tmpvar_32;
  mediump vec4 normal_33;
  normal_33 = tmpvar_31;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_32 = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  tmpvar_3 = tmpvar_32;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD2 = o_25;
  xlv_TEXCOORD3 = tmpvar_2;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_24.z)));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_5;
  x_5 = (tmpvar_4.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_7 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_7.w;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7.xyz + xlv_TEXCOORD4);
  light_3.xyz = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
  light_3.xyz = (light_3.xyz + pow ((
    (unity_DynamicLightmap_HDR.x * tmpvar_9.w)
   * tmpvar_9.xyz), unity_DynamicLightmap_HDR.yyy));
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4.xyz * light_3.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = (tmpvar_4.w * xlv_COLOR0.w);
  c_2 = c_10;
  highp float tmpvar_12;
  tmpvar_12 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_12));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 o_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * 0.5);
  highp vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (tmpvar_26.y * _ProjectionParams.x);
  o_25.xy = (tmpvar_27 + tmpvar_26.w);
  o_25.zw = tmpvar_24.zw;
  tmpvar_2.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp vec4 v_28;
  v_28.x = _World2Object[0].x;
  v_28.y = _World2Object[1].x;
  v_28.z = _World2Object[2].x;
  v_28.w = _World2Object[3].x;
  highp vec4 v_29;
  v_29.x = _World2Object[0].y;
  v_29.y = _World2Object[1].y;
  v_29.z = _World2Object[2].y;
  v_29.w = _World2Object[3].y;
  highp vec4 v_30;
  v_30.x = _World2Object[0].z;
  v_30.y = _World2Object[1].z;
  v_30.z = _World2Object[2].z;
  v_30.w = _World2Object[3].z;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = normalize(((
    (v_28.xyz * _glesNormal.x)
   + 
    (v_29.xyz * _glesNormal.y)
  ) + (v_30.xyz * _glesNormal.z)));
  mediump vec3 tmpvar_32;
  mediump vec4 normal_33;
  normal_33 = tmpvar_31;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_32 = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  tmpvar_3 = tmpvar_32;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD2 = o_25;
  xlv_TEXCOORD3 = tmpvar_2;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_24.z)));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_5;
  x_5 = (tmpvar_4.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_7 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_7.w;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7.xyz + xlv_TEXCOORD4);
  light_3.xyz = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
  light_3.xyz = (light_3.xyz + pow ((
    (unity_DynamicLightmap_HDR.x * tmpvar_9.w)
   * tmpvar_9.xyz), unity_DynamicLightmap_HDR.yyy));
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4.xyz * light_3.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = (tmpvar_4.w * xlv_COLOR0.w);
  c_2 = c_10;
  highp float tmpvar_12;
  tmpvar_12 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_12));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD5;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldBinormal_2;
  lowp vec3 worldTangent_3;
  lowp vec3 worldNormal_4;
  highp vec4 tmpvar_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  highp vec4 pos_9;
  pos_9 = _glesVertex;
  highp vec2 offset_10;
  offset_10 = _glesTANGENT.xy;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_12;
  tmpvar_12 = dot (tmpvar_11, tmpvar_11);
  if ((tmpvar_12 > _WaveAndDistance.w)) {
    offset_10 = vec2(0.0, 0.0);
  };
  pos_9.xyz = (_glesVertex.xyz + (offset_10.x * _CameraRight));
  pos_9.xyz = (pos_9.xyz + (offset_10.y * _CameraUp));
  highp vec4 vertex_13;
  vertex_13.yw = pos_9.yw;
  lowp vec4 color_14;
  color_14.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_15;
  highp vec3 waveMove_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = ((fract(
    (((pos_9.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_9.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * tmpvar_17);
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_18);
  highp vec4 tmpvar_21;
  tmpvar_21 = (((tmpvar_17 + 
    (tmpvar_19 * -0.1616162)
  ) + (tmpvar_20 * 0.0083333)) + ((tmpvar_20 * tmpvar_18) * -0.00019841));
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * tmpvar_21);
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * _glesTANGENT.y);
  waveMove_16.y = 0.0;
  waveMove_16.x = dot (tmpvar_24, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_16.z = dot (tmpvar_24, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_13.xz = (pos_9.xz - (waveMove_16.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_25;
  tmpvar_25 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_23, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_15 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (vertex_13.xyz - _CameraPosition.xyz);
  highp float tmpvar_27;
  tmpvar_27 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_26, tmpvar_26))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_14.w = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28.xyz = ((2.0 * waveColor_15) * _glesColor.xyz);
  tmpvar_28.w = color_14.w;
  highp vec4 tmpvar_29;
  tmpvar_29 = (glstate_matrix_mvp * vertex_13);
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * vertex_13).xyz;
  highp vec4 v_31;
  v_31.x = _World2Object[0].x;
  v_31.y = _World2Object[1].x;
  v_31.z = _World2Object[2].x;
  v_31.w = _World2Object[3].x;
  highp vec4 v_32;
  v_32.x = _World2Object[0].y;
  v_32.y = _World2Object[1].y;
  v_32.z = _World2Object[2].y;
  v_32.w = _World2Object[3].y;
  highp vec4 v_33;
  v_33.x = _World2Object[0].z;
  v_33.y = _World2Object[1].z;
  v_33.z = _World2Object[2].z;
  v_33.w = _World2Object[3].z;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(((
    (v_31.xyz * _glesNormal.x)
   + 
    (v_32.xyz * _glesNormal.y)
  ) + (v_33.xyz * _glesNormal.z)));
  worldNormal_4 = tmpvar_34;
  highp mat3 tmpvar_35;
  tmpvar_35[0] = _Object2World[0].xyz;
  tmpvar_35[1] = _Object2World[1].xyz;
  tmpvar_35[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_36;
  tmpvar_36 = normalize((tmpvar_35 * _glesTANGENT.xyz));
  worldTangent_3 = tmpvar_36;
  lowp vec3 tmpvar_37;
  tmpvar_37 = ((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx));
  highp vec3 tmpvar_38;
  tmpvar_38 = (tmpvar_37 * _glesTANGENT.w);
  worldBinormal_2 = tmpvar_38;
  highp vec4 tmpvar_39;
  tmpvar_39.x = worldTangent_3.x;
  tmpvar_39.y = worldBinormal_2.x;
  tmpvar_39.z = worldNormal_4.x;
  tmpvar_39.w = tmpvar_30.x;
  highp vec3 tmpvar_40;
  tmpvar_40 = tmpvar_39.xyz;
  tmpvar_6 = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41.x = worldTangent_3.y;
  tmpvar_41.y = worldBinormal_2.y;
  tmpvar_41.z = worldNormal_4.y;
  tmpvar_41.w = tmpvar_30.y;
  highp vec3 tmpvar_42;
  tmpvar_42 = tmpvar_41.xyz;
  tmpvar_7 = tmpvar_42;
  highp vec4 tmpvar_43;
  tmpvar_43.x = worldTangent_3.z;
  tmpvar_43.y = worldBinormal_2.z;
  tmpvar_43.z = worldNormal_4.z;
  tmpvar_43.w = tmpvar_30.z;
  highp vec3 tmpvar_44;
  tmpvar_44 = tmpvar_43.xyz;
  tmpvar_8 = tmpvar_44;
  highp vec4 o_45;
  highp vec4 tmpvar_46;
  tmpvar_46 = (tmpvar_29 * 0.5);
  highp vec2 tmpvar_47;
  tmpvar_47.x = tmpvar_46.x;
  tmpvar_47.y = (tmpvar_46.y * _ProjectionParams.x);
  o_45.xy = (tmpvar_47 + tmpvar_46.w);
  o_45.zw = tmpvar_29.zw;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_29;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_30;
  xlv_COLOR0 = tmpvar_28;
  xlv_TEXCOORD2 = o_45;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_29.z)));
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_6;
  x_6 = (tmpvar_5.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_LightmapInd, xlv_TEXCOORD3.xy);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (2.0 * tmpvar_8.xyz);
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_4;
  lowp vec3 y_12;
  y_12 = (tmpvar_9.xyz - 0.5);
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = ((tmpvar_10 * (
    dot (normalWorld_11, y_12)
   + 0.5)) / tmpvar_9.w);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (-(log2(
    max (light_3, vec4(0.001, 0.001, 0.001, 0.001))
  )) + tmpvar_13);
  light_3 = tmpvar_14;
  lowp vec4 c_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_5.xyz * tmpvar_14.xyz);
  c_15.xyz = tmpvar_16;
  c_15.w = (tmpvar_5.w * xlv_COLOR0.w);
  c_2 = c_15;
  highp float tmpvar_17;
  tmpvar_17 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_17));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD5;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldBinormal_2;
  lowp vec3 worldTangent_3;
  lowp vec3 worldNormal_4;
  highp vec4 tmpvar_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  highp vec4 pos_9;
  pos_9 = _glesVertex;
  highp vec2 offset_10;
  offset_10 = _glesTANGENT.xy;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_12;
  tmpvar_12 = dot (tmpvar_11, tmpvar_11);
  if ((tmpvar_12 > _WaveAndDistance.w)) {
    offset_10 = vec2(0.0, 0.0);
  };
  pos_9.xyz = (_glesVertex.xyz + (offset_10.x * _CameraRight));
  pos_9.xyz = (pos_9.xyz + (offset_10.y * _CameraUp));
  highp vec4 vertex_13;
  vertex_13.yw = pos_9.yw;
  lowp vec4 color_14;
  color_14.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_15;
  highp vec3 waveMove_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = ((fract(
    (((pos_9.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_9.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * tmpvar_17);
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_18);
  highp vec4 tmpvar_21;
  tmpvar_21 = (((tmpvar_17 + 
    (tmpvar_19 * -0.1616162)
  ) + (tmpvar_20 * 0.0083333)) + ((tmpvar_20 * tmpvar_18) * -0.00019841));
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * tmpvar_21);
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * _glesTANGENT.y);
  waveMove_16.y = 0.0;
  waveMove_16.x = dot (tmpvar_24, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_16.z = dot (tmpvar_24, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_13.xz = (pos_9.xz - (waveMove_16.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_25;
  tmpvar_25 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_23, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_15 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (vertex_13.xyz - _CameraPosition.xyz);
  highp float tmpvar_27;
  tmpvar_27 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_26, tmpvar_26))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_14.w = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28.xyz = ((2.0 * waveColor_15) * _glesColor.xyz);
  tmpvar_28.w = color_14.w;
  highp vec4 tmpvar_29;
  tmpvar_29 = (glstate_matrix_mvp * vertex_13);
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * vertex_13).xyz;
  highp vec4 v_31;
  v_31.x = _World2Object[0].x;
  v_31.y = _World2Object[1].x;
  v_31.z = _World2Object[2].x;
  v_31.w = _World2Object[3].x;
  highp vec4 v_32;
  v_32.x = _World2Object[0].y;
  v_32.y = _World2Object[1].y;
  v_32.z = _World2Object[2].y;
  v_32.w = _World2Object[3].y;
  highp vec4 v_33;
  v_33.x = _World2Object[0].z;
  v_33.y = _World2Object[1].z;
  v_33.z = _World2Object[2].z;
  v_33.w = _World2Object[3].z;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(((
    (v_31.xyz * _glesNormal.x)
   + 
    (v_32.xyz * _glesNormal.y)
  ) + (v_33.xyz * _glesNormal.z)));
  worldNormal_4 = tmpvar_34;
  highp mat3 tmpvar_35;
  tmpvar_35[0] = _Object2World[0].xyz;
  tmpvar_35[1] = _Object2World[1].xyz;
  tmpvar_35[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_36;
  tmpvar_36 = normalize((tmpvar_35 * _glesTANGENT.xyz));
  worldTangent_3 = tmpvar_36;
  lowp vec3 tmpvar_37;
  tmpvar_37 = ((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx));
  highp vec3 tmpvar_38;
  tmpvar_38 = (tmpvar_37 * _glesTANGENT.w);
  worldBinormal_2 = tmpvar_38;
  highp vec4 tmpvar_39;
  tmpvar_39.x = worldTangent_3.x;
  tmpvar_39.y = worldBinormal_2.x;
  tmpvar_39.z = worldNormal_4.x;
  tmpvar_39.w = tmpvar_30.x;
  highp vec3 tmpvar_40;
  tmpvar_40 = tmpvar_39.xyz;
  tmpvar_6 = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41.x = worldTangent_3.y;
  tmpvar_41.y = worldBinormal_2.y;
  tmpvar_41.z = worldNormal_4.y;
  tmpvar_41.w = tmpvar_30.y;
  highp vec3 tmpvar_42;
  tmpvar_42 = tmpvar_41.xyz;
  tmpvar_7 = tmpvar_42;
  highp vec4 tmpvar_43;
  tmpvar_43.x = worldTangent_3.z;
  tmpvar_43.y = worldBinormal_2.z;
  tmpvar_43.z = worldNormal_4.z;
  tmpvar_43.w = tmpvar_30.z;
  highp vec3 tmpvar_44;
  tmpvar_44 = tmpvar_43.xyz;
  tmpvar_8 = tmpvar_44;
  highp vec4 o_45;
  highp vec4 tmpvar_46;
  tmpvar_46 = (tmpvar_29 * 0.5);
  highp vec2 tmpvar_47;
  tmpvar_47.x = tmpvar_46.x;
  tmpvar_47.y = (tmpvar_46.y * _ProjectionParams.x);
  o_45.xy = (tmpvar_47 + tmpvar_46.w);
  o_45.zw = tmpvar_29.zw;
  tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_29;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_30;
  xlv_COLOR0 = tmpvar_28;
  xlv_TEXCOORD2 = o_45;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_29.z)));
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_6;
  x_6 = (tmpvar_5.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_LightmapInd, xlv_TEXCOORD3.xy);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (2.0 * tmpvar_8.xyz);
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_4;
  lowp vec3 y_12;
  y_12 = (tmpvar_9.xyz - 0.5);
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = ((tmpvar_10 * (
    dot (normalWorld_11, y_12)
   + 0.5)) / tmpvar_9.w);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (-(log2(
    max (light_3, vec4(0.001, 0.001, 0.001, 0.001))
  )) + tmpvar_13);
  light_3.w = tmpvar_14.w;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
  light_3.xyz = (tmpvar_14.xyz + pow ((
    (unity_DynamicLightmap_HDR.x * tmpvar_15.w)
   * tmpvar_15.xyz), unity_DynamicLightmap_HDR.yyy));
  lowp vec4 c_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = (tmpvar_5.xyz * light_3.xyz);
  c_16.xyz = tmpvar_17;
  c_16.w = (tmpvar_5.w * xlv_COLOR0.w);
  c_2 = c_16;
  highp float tmpvar_18;
  tmpvar_18 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_18));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 o_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * 0.5);
  highp vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (tmpvar_26.y * _ProjectionParams.x);
  o_25.xy = (tmpvar_27 + tmpvar_26.w);
  o_25.zw = tmpvar_24.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp vec4 v_28;
  v_28.x = _World2Object[0].x;
  v_28.y = _World2Object[1].x;
  v_28.z = _World2Object[2].x;
  v_28.w = _World2Object[3].x;
  highp vec4 v_29;
  v_29.x = _World2Object[0].y;
  v_29.y = _World2Object[1].y;
  v_29.z = _World2Object[2].y;
  v_29.w = _World2Object[3].y;
  highp vec4 v_30;
  v_30.x = _World2Object[0].z;
  v_30.y = _World2Object[1].z;
  v_30.z = _World2Object[2].z;
  v_30.w = _World2Object[3].z;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = normalize(((
    (v_28.xyz * _glesNormal.x)
   + 
    (v_29.xyz * _glesNormal.y)
  ) + (v_30.xyz * _glesNormal.z)));
  mediump vec3 tmpvar_32;
  mediump vec4 normal_33;
  normal_33 = tmpvar_31;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_32 = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  tmpvar_3 = tmpvar_32;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD2 = o_25;
  xlv_TEXCOORD3 = tmpvar_2;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_24.z)));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_5;
  x_5 = (tmpvar_4.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_7 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_7.w;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7.xyz + xlv_TEXCOORD4);
  light_3.xyz = tmpvar_8;
  lowp vec4 c_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_4.xyz * light_3.xyz);
  c_9.xyz = tmpvar_10;
  c_9.w = (tmpvar_4.w * xlv_COLOR0.w);
  c_2 = c_9;
  highp float tmpvar_11;
  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "UNITY_HDR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 o_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * 0.5);
  highp vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (tmpvar_26.y * _ProjectionParams.x);
  o_25.xy = (tmpvar_27 + tmpvar_26.w);
  o_25.zw = tmpvar_24.zw;
  tmpvar_2.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp vec4 v_28;
  v_28.x = _World2Object[0].x;
  v_28.y = _World2Object[1].x;
  v_28.z = _World2Object[2].x;
  v_28.w = _World2Object[3].x;
  highp vec4 v_29;
  v_29.x = _World2Object[0].y;
  v_29.y = _World2Object[1].y;
  v_29.z = _World2Object[2].y;
  v_29.w = _World2Object[3].y;
  highp vec4 v_30;
  v_30.x = _World2Object[0].z;
  v_30.y = _World2Object[1].z;
  v_30.z = _World2Object[2].z;
  v_30.w = _World2Object[3].z;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = normalize(((
    (v_28.xyz * _glesNormal.x)
   + 
    (v_29.xyz * _glesNormal.y)
  ) + (v_30.xyz * _glesNormal.z)));
  mediump vec3 tmpvar_32;
  mediump vec4 normal_33;
  normal_33 = tmpvar_31;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_32 = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  tmpvar_3 = tmpvar_32;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD2 = o_25;
  xlv_TEXCOORD3 = tmpvar_2;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_24.z)));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_5;
  x_5 = (tmpvar_4.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_7 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_7.w;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7.xyz + xlv_TEXCOORD4);
  light_3.xyz = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
  light_3.xyz = (light_3.xyz + pow ((
    (unity_DynamicLightmap_HDR.x * tmpvar_9.w)
   * tmpvar_9.xyz), unity_DynamicLightmap_HDR.yyy));
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4.xyz * light_3.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = (tmpvar_4.w * xlv_COLOR0.w);
  c_2 = c_10;
  highp float tmpvar_12;
  tmpvar_12 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_12));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "UNITY_HDR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 pos_4;
  pos_4 = _glesVertex;
  highp vec2 offset_5;
  offset_5 = _glesTANGENT.xy;
  highp vec3 tmpvar_6;
  tmpvar_6 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, tmpvar_6);
  if ((tmpvar_7 > _WaveAndDistance.w)) {
    offset_5 = vec2(0.0, 0.0);
  };
  pos_4.xyz = (_glesVertex.xyz + (offset_5.x * _CameraRight));
  pos_4.xyz = (pos_4.xyz + (offset_5.y * _CameraUp));
  highp vec4 vertex_8;
  vertex_8.yw = pos_4.yw;
  lowp vec4 color_9;
  color_9.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_10;
  highp vec3 waveMove_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = ((fract(
    (((pos_4.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_4.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_12);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_13);
  highp vec4 tmpvar_16;
  tmpvar_16 = (((tmpvar_12 + 
    (tmpvar_14 * -0.1616162)
  ) + (tmpvar_15 * 0.0083333)) + ((tmpvar_15 * tmpvar_13) * -0.00019841));
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.y);
  waveMove_11.y = 0.0;
  waveMove_11.x = dot (tmpvar_19, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_11.z = dot (tmpvar_19, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_8.xz = (pos_4.xz - (waveMove_11.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_20;
  tmpvar_20 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_18, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_10 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (vertex_8.xyz - _CameraPosition.xyz);
  highp float tmpvar_22;
  tmpvar_22 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_21, tmpvar_21))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_9.w = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.xyz = ((2.0 * waveColor_10) * _glesColor.xyz);
  tmpvar_23.w = color_9.w;
  highp vec4 tmpvar_24;
  tmpvar_24 = (glstate_matrix_mvp * vertex_8);
  highp vec4 o_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * 0.5);
  highp vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (tmpvar_26.y * _ProjectionParams.x);
  o_25.xy = (tmpvar_27 + tmpvar_26.w);
  o_25.zw = tmpvar_24.zw;
  tmpvar_2.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp vec4 v_28;
  v_28.x = _World2Object[0].x;
  v_28.y = _World2Object[1].x;
  v_28.z = _World2Object[2].x;
  v_28.w = _World2Object[3].x;
  highp vec4 v_29;
  v_29.x = _World2Object[0].y;
  v_29.y = _World2Object[1].y;
  v_29.z = _World2Object[2].y;
  v_29.w = _World2Object[3].y;
  highp vec4 v_30;
  v_30.x = _World2Object[0].z;
  v_30.y = _World2Object[1].z;
  v_30.z = _World2Object[2].z;
  v_30.w = _World2Object[3].z;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = normalize(((
    (v_28.xyz * _glesNormal.x)
   + 
    (v_29.xyz * _glesNormal.y)
  ) + (v_30.xyz * _glesNormal.z)));
  mediump vec3 tmpvar_32;
  mediump vec4 normal_33;
  normal_33 = tmpvar_31;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_32 = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  tmpvar_3 = tmpvar_32;
  gl_Position = tmpvar_24;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_8).xyz;
  xlv_COLOR0 = tmpvar_23;
  xlv_TEXCOORD2 = o_25;
  xlv_TEXCOORD3 = tmpvar_2;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_24.z)));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_5;
  x_5 = (tmpvar_4.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_7 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_7.w;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7.xyz + xlv_TEXCOORD4);
  light_3.xyz = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
  light_3.xyz = (light_3.xyz + pow ((
    (unity_DynamicLightmap_HDR.x * tmpvar_9.w)
   * tmpvar_9.xyz), unity_DynamicLightmap_HDR.yyy));
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4.xyz * light_3.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = (tmpvar_4.w * xlv_COLOR0.w);
  c_2 = c_10;
  highp float tmpvar_12;
  tmpvar_12 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_12));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD5;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldBinormal_2;
  lowp vec3 worldTangent_3;
  lowp vec3 worldNormal_4;
  highp vec4 tmpvar_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  highp vec4 pos_9;
  pos_9 = _glesVertex;
  highp vec2 offset_10;
  offset_10 = _glesTANGENT.xy;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_12;
  tmpvar_12 = dot (tmpvar_11, tmpvar_11);
  if ((tmpvar_12 > _WaveAndDistance.w)) {
    offset_10 = vec2(0.0, 0.0);
  };
  pos_9.xyz = (_glesVertex.xyz + (offset_10.x * _CameraRight));
  pos_9.xyz = (pos_9.xyz + (offset_10.y * _CameraUp));
  highp vec4 vertex_13;
  vertex_13.yw = pos_9.yw;
  lowp vec4 color_14;
  color_14.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_15;
  highp vec3 waveMove_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = ((fract(
    (((pos_9.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_9.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * tmpvar_17);
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_18);
  highp vec4 tmpvar_21;
  tmpvar_21 = (((tmpvar_17 + 
    (tmpvar_19 * -0.1616162)
  ) + (tmpvar_20 * 0.0083333)) + ((tmpvar_20 * tmpvar_18) * -0.00019841));
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * tmpvar_21);
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * _glesTANGENT.y);
  waveMove_16.y = 0.0;
  waveMove_16.x = dot (tmpvar_24, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_16.z = dot (tmpvar_24, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_13.xz = (pos_9.xz - (waveMove_16.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_25;
  tmpvar_25 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_23, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_15 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (vertex_13.xyz - _CameraPosition.xyz);
  highp float tmpvar_27;
  tmpvar_27 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_26, tmpvar_26))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_14.w = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28.xyz = ((2.0 * waveColor_15) * _glesColor.xyz);
  tmpvar_28.w = color_14.w;
  highp vec4 tmpvar_29;
  tmpvar_29 = (glstate_matrix_mvp * vertex_13);
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * vertex_13).xyz;
  highp vec4 v_31;
  v_31.x = _World2Object[0].x;
  v_31.y = _World2Object[1].x;
  v_31.z = _World2Object[2].x;
  v_31.w = _World2Object[3].x;
  highp vec4 v_32;
  v_32.x = _World2Object[0].y;
  v_32.y = _World2Object[1].y;
  v_32.z = _World2Object[2].y;
  v_32.w = _World2Object[3].y;
  highp vec4 v_33;
  v_33.x = _World2Object[0].z;
  v_33.y = _World2Object[1].z;
  v_33.z = _World2Object[2].z;
  v_33.w = _World2Object[3].z;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(((
    (v_31.xyz * _glesNormal.x)
   + 
    (v_32.xyz * _glesNormal.y)
  ) + (v_33.xyz * _glesNormal.z)));
  worldNormal_4 = tmpvar_34;
  highp mat3 tmpvar_35;
  tmpvar_35[0] = _Object2World[0].xyz;
  tmpvar_35[1] = _Object2World[1].xyz;
  tmpvar_35[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_36;
  tmpvar_36 = normalize((tmpvar_35 * _glesTANGENT.xyz));
  worldTangent_3 = tmpvar_36;
  lowp vec3 tmpvar_37;
  tmpvar_37 = ((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx));
  highp vec3 tmpvar_38;
  tmpvar_38 = (tmpvar_37 * _glesTANGENT.w);
  worldBinormal_2 = tmpvar_38;
  highp vec4 tmpvar_39;
  tmpvar_39.x = worldTangent_3.x;
  tmpvar_39.y = worldBinormal_2.x;
  tmpvar_39.z = worldNormal_4.x;
  tmpvar_39.w = tmpvar_30.x;
  highp vec3 tmpvar_40;
  tmpvar_40 = tmpvar_39.xyz;
  tmpvar_6 = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41.x = worldTangent_3.y;
  tmpvar_41.y = worldBinormal_2.y;
  tmpvar_41.z = worldNormal_4.y;
  tmpvar_41.w = tmpvar_30.y;
  highp vec3 tmpvar_42;
  tmpvar_42 = tmpvar_41.xyz;
  tmpvar_7 = tmpvar_42;
  highp vec4 tmpvar_43;
  tmpvar_43.x = worldTangent_3.z;
  tmpvar_43.y = worldBinormal_2.z;
  tmpvar_43.z = worldNormal_4.z;
  tmpvar_43.w = tmpvar_30.z;
  highp vec3 tmpvar_44;
  tmpvar_44 = tmpvar_43.xyz;
  tmpvar_8 = tmpvar_44;
  highp vec4 o_45;
  highp vec4 tmpvar_46;
  tmpvar_46 = (tmpvar_29 * 0.5);
  highp vec2 tmpvar_47;
  tmpvar_47.x = tmpvar_46.x;
  tmpvar_47.y = (tmpvar_46.y * _ProjectionParams.x);
  o_45.xy = (tmpvar_47 + tmpvar_46.w);
  o_45.zw = tmpvar_29.zw;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_29;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_30;
  xlv_COLOR0 = tmpvar_28;
  xlv_TEXCOORD2 = o_45;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_29.z)));
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_6;
  x_6 = (tmpvar_5.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_LightmapInd, xlv_TEXCOORD3.xy);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (2.0 * tmpvar_8.xyz);
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_4;
  lowp vec3 y_12;
  y_12 = (tmpvar_9.xyz - 0.5);
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = ((tmpvar_10 * (
    dot (normalWorld_11, y_12)
   + 0.5)) / tmpvar_9.w);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_13);
  light_3 = tmpvar_14;
  lowp vec4 c_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_5.xyz * tmpvar_14.xyz);
  c_15.xyz = tmpvar_16;
  c_15.w = (tmpvar_5.w * xlv_COLOR0.w);
  c_2 = c_15;
  highp float tmpvar_17;
  tmpvar_17 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_17));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "UNITY_HDR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD5;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  lowp vec3 worldBinormal_2;
  lowp vec3 worldTangent_3;
  lowp vec3 worldNormal_4;
  highp vec4 tmpvar_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  highp vec4 pos_9;
  pos_9 = _glesVertex;
  highp vec2 offset_10;
  offset_10 = _glesTANGENT.xy;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_12;
  tmpvar_12 = dot (tmpvar_11, tmpvar_11);
  if ((tmpvar_12 > _WaveAndDistance.w)) {
    offset_10 = vec2(0.0, 0.0);
  };
  pos_9.xyz = (_glesVertex.xyz + (offset_10.x * _CameraRight));
  pos_9.xyz = (pos_9.xyz + (offset_10.y * _CameraUp));
  highp vec4 vertex_13;
  vertex_13.yw = pos_9.yw;
  lowp vec4 color_14;
  color_14.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_15;
  highp vec3 waveMove_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = ((fract(
    (((pos_9.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_9.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * tmpvar_17);
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_18);
  highp vec4 tmpvar_21;
  tmpvar_21 = (((tmpvar_17 + 
    (tmpvar_19 * -0.1616162)
  ) + (tmpvar_20 * 0.0083333)) + ((tmpvar_20 * tmpvar_18) * -0.00019841));
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * tmpvar_21);
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * _glesTANGENT.y);
  waveMove_16.y = 0.0;
  waveMove_16.x = dot (tmpvar_24, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_16.z = dot (tmpvar_24, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_13.xz = (pos_9.xz - (waveMove_16.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_25;
  tmpvar_25 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_23, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_15 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (vertex_13.xyz - _CameraPosition.xyz);
  highp float tmpvar_27;
  tmpvar_27 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_26, tmpvar_26))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_14.w = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28.xyz = ((2.0 * waveColor_15) * _glesColor.xyz);
  tmpvar_28.w = color_14.w;
  highp vec4 tmpvar_29;
  tmpvar_29 = (glstate_matrix_mvp * vertex_13);
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * vertex_13).xyz;
  highp vec4 v_31;
  v_31.x = _World2Object[0].x;
  v_31.y = _World2Object[1].x;
  v_31.z = _World2Object[2].x;
  v_31.w = _World2Object[3].x;
  highp vec4 v_32;
  v_32.x = _World2Object[0].y;
  v_32.y = _World2Object[1].y;
  v_32.z = _World2Object[2].y;
  v_32.w = _World2Object[3].y;
  highp vec4 v_33;
  v_33.x = _World2Object[0].z;
  v_33.y = _World2Object[1].z;
  v_33.z = _World2Object[2].z;
  v_33.w = _World2Object[3].z;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(((
    (v_31.xyz * _glesNormal.x)
   + 
    (v_32.xyz * _glesNormal.y)
  ) + (v_33.xyz * _glesNormal.z)));
  worldNormal_4 = tmpvar_34;
  highp mat3 tmpvar_35;
  tmpvar_35[0] = _Object2World[0].xyz;
  tmpvar_35[1] = _Object2World[1].xyz;
  tmpvar_35[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_36;
  tmpvar_36 = normalize((tmpvar_35 * _glesTANGENT.xyz));
  worldTangent_3 = tmpvar_36;
  lowp vec3 tmpvar_37;
  tmpvar_37 = ((worldNormal_4.yzx * worldTangent_3.zxy) - (worldNormal_4.zxy * worldTangent_3.yzx));
  highp vec3 tmpvar_38;
  tmpvar_38 = (tmpvar_37 * _glesTANGENT.w);
  worldBinormal_2 = tmpvar_38;
  highp vec4 tmpvar_39;
  tmpvar_39.x = worldTangent_3.x;
  tmpvar_39.y = worldBinormal_2.x;
  tmpvar_39.z = worldNormal_4.x;
  tmpvar_39.w = tmpvar_30.x;
  highp vec3 tmpvar_40;
  tmpvar_40 = tmpvar_39.xyz;
  tmpvar_6 = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41.x = worldTangent_3.y;
  tmpvar_41.y = worldBinormal_2.y;
  tmpvar_41.z = worldNormal_4.y;
  tmpvar_41.w = tmpvar_30.y;
  highp vec3 tmpvar_42;
  tmpvar_42 = tmpvar_41.xyz;
  tmpvar_7 = tmpvar_42;
  highp vec4 tmpvar_43;
  tmpvar_43.x = worldTangent_3.z;
  tmpvar_43.y = worldBinormal_2.z;
  tmpvar_43.z = worldNormal_4.z;
  tmpvar_43.w = tmpvar_30.z;
  highp vec3 tmpvar_44;
  tmpvar_44 = tmpvar_43.xyz;
  tmpvar_8 = tmpvar_44;
  highp vec4 o_45;
  highp vec4 tmpvar_46;
  tmpvar_46 = (tmpvar_29 * 0.5);
  highp vec2 tmpvar_47;
  tmpvar_47.x = tmpvar_46.x;
  tmpvar_47.y = (tmpvar_46.y * _ProjectionParams.x);
  o_45.xy = (tmpvar_47 + tmpvar_46.w);
  o_45.zw = tmpvar_29.zw;
  tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_29;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_30;
  xlv_COLOR0 = tmpvar_28;
  xlv_TEXCOORD2 = o_45;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = exp2(-((unity_FogParams.y * tmpvar_29.z)));
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp float x_6;
  x_6 = (tmpvar_5.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD3.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_LightmapInd, xlv_TEXCOORD3.xy);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (2.0 * tmpvar_8.xyz);
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_4;
  lowp vec3 y_12;
  y_12 = (tmpvar_9.xyz - 0.5);
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = ((tmpvar_10 * (
    dot (normalWorld_11, y_12)
   + 0.5)) / tmpvar_9.w);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_13);
  light_3.w = tmpvar_14.w;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
  light_3.xyz = (tmpvar_14.xyz + pow ((
    (unity_DynamicLightmap_HDR.x * tmpvar_15.w)
   * tmpvar_15.xyz), unity_DynamicLightmap_HDR.yyy));
  lowp vec4 c_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = (tmpvar_5.xyz * light_3.xyz);
  c_16.xyz = tmpvar_17;
  c_16.w = (tmpvar_5.w * xlv_COLOR0.w);
  c_2 = c_16;
  highp float tmpvar_18;
  tmpvar_18 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_18));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "UNITY_HDR_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "UNITY_HDR_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "UNITY_HDR_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "UNITY_HDR_ON" }
"!!GLES"
}
}
 }
 Pass {
  Name "SHADOWCASTER"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="GrassBillboard" }
  Cull Off
  GpuProgramID 390899
Program "vp" {
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_LightShadowBias;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 unity_MatrixVP;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec2 tmpvar_2;
  highp vec4 pos_3;
  pos_3 = _glesVertex;
  highp vec2 offset_4;
  offset_4 = _glesTANGENT.xy;
  highp vec3 tmpvar_5;
  tmpvar_5 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_6;
  tmpvar_6 = dot (tmpvar_5, tmpvar_5);
  if ((tmpvar_6 > _WaveAndDistance.w)) {
    offset_4 = vec2(0.0, 0.0);
  };
  pos_3.xyz = (_glesVertex.xyz + (offset_4.x * _CameraRight));
  pos_3.xyz = (pos_3.xyz + (offset_4.y * _CameraUp));
  highp vec4 vertex_7;
  vertex_7.yw = pos_3.yw;
  lowp vec4 color_8;
  color_8.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_9;
  highp vec3 waveMove_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = ((fract(
    (((pos_3.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_3.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * tmpvar_11);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_11);
  highp vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * tmpvar_12);
  highp vec4 tmpvar_15;
  tmpvar_15 = (((tmpvar_11 + 
    (tmpvar_13 * -0.1616162)
  ) + (tmpvar_14 * 0.0083333)) + ((tmpvar_14 * tmpvar_12) * -0.00019841));
  highp vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_15 * tmpvar_15);
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * tmpvar_16);
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * _glesTANGENT.y);
  waveMove_10.y = 0.0;
  waveMove_10.x = dot (tmpvar_18, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_10.z = dot (tmpvar_18, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_7.xz = (pos_3.xz - (waveMove_10.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_19;
  tmpvar_19 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_17, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_9 = tmpvar_19;
  highp vec3 tmpvar_20;
  tmpvar_20 = (vertex_7.xyz - _CameraPosition.xyz);
  highp float tmpvar_21;
  tmpvar_21 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_20, tmpvar_20))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_8.w = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22.xyz = ((2.0 * waveColor_9) * _glesColor.xyz);
  tmpvar_22.w = color_8.w;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec3 tmpvar_23;
  tmpvar_23 = (_Object2World * vertex_7).xyz;
  highp vec3 vertex_24;
  vertex_24 = vertex_7.xyz;
  highp vec4 clipPos_25;
  if ((unity_LightShadowBias.z != 0.0)) {
    highp vec4 tmpvar_26;
    tmpvar_26.w = 1.0;
    tmpvar_26.xyz = vertex_24;
    highp vec3 tmpvar_27;
    tmpvar_27 = (_Object2World * tmpvar_26).xyz;
    highp vec4 v_28;
    v_28.x = _World2Object[0].x;
    v_28.y = _World2Object[1].x;
    v_28.z = _World2Object[2].x;
    v_28.w = _World2Object[3].x;
    highp vec4 v_29;
    v_29.x = _World2Object[0].y;
    v_29.y = _World2Object[1].y;
    v_29.z = _World2Object[2].y;
    v_29.w = _World2Object[3].y;
    highp vec4 v_30;
    v_30.x = _World2Object[0].z;
    v_30.y = _World2Object[1].z;
    v_30.z = _World2Object[2].z;
    v_30.w = _World2Object[3].z;
    highp vec3 tmpvar_31;
    tmpvar_31 = normalize(((
      (v_28.xyz * _glesNormal.x)
     + 
      (v_29.xyz * _glesNormal.y)
    ) + (v_30.xyz * _glesNormal.z)));
    highp float tmpvar_32;
    tmpvar_32 = dot (tmpvar_31, normalize((_WorldSpaceLightPos0.xyz - 
      (tmpvar_27 * _WorldSpaceLightPos0.w)
    )));
    highp vec4 tmpvar_33;
    tmpvar_33.w = 1.0;
    tmpvar_33.xyz = (tmpvar_27 - (tmpvar_31 * (unity_LightShadowBias.z * 
      sqrt((1.0 - (tmpvar_32 * tmpvar_32)))
    )));
    clipPos_25 = (unity_MatrixVP * tmpvar_33);
  } else {
    highp vec4 tmpvar_34;
    tmpvar_34.w = 1.0;
    tmpvar_34.xyz = vertex_24;
    clipPos_25 = (glstate_matrix_mvp * tmpvar_34);
  };
  highp vec4 clipPos_35;
  clipPos_35.xyw = clipPos_25.xyw;
  clipPos_35.z = (clipPos_25.z + clamp ((unity_LightShadowBias.x / clipPos_25.w), 0.0, 1.0));
  clipPos_35.z = mix (clipPos_35.z, max (clipPos_35.z, -(clipPos_25.w)), unity_LightShadowBias.y);
  gl_Position = clipPos_35;
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_23;
  xlv_COLOR0 = tmpvar_22;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec2 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp float x_1;
  x_1 = ((texture2D (_MainTex, xlv_TEXCOORD1) * xlv_COLOR0).w - _Cutoff);
  if ((x_1 < 0.0)) {
    discard;
  };
  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
}



#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 pos_2;
  pos_2 = _glesVertex;
  highp vec2 offset_3;
  offset_3 = _glesTANGENT.xy;
  highp vec3 tmpvar_4;
  tmpvar_4 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_5;
  tmpvar_5 = dot (tmpvar_4, tmpvar_4);
  if ((tmpvar_5 > _WaveAndDistance.w)) {
    offset_3 = vec2(0.0, 0.0);
  };
  pos_2.xyz = (_glesVertex.xyz + (offset_3.x * _CameraRight));
  pos_2.xyz = (pos_2.xyz + (offset_3.y * _CameraUp));
  highp vec4 vertex_6;
  vertex_6.yw = pos_2.yw;
  lowp vec4 color_7;
  color_7.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_8;
  highp vec3 waveMove_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = ((fract(
    (((pos_2.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_2.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * tmpvar_10);
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * tmpvar_10);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_11);
  highp vec4 tmpvar_14;
  tmpvar_14 = (((tmpvar_10 + 
    (tmpvar_12 * -0.1616162)
  ) + (tmpvar_13 * 0.0083333)) + ((tmpvar_13 * tmpvar_11) * -0.00019841));
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_14);
  highp vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_15 * tmpvar_15);
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * _glesTANGENT.y);
  waveMove_9.y = 0.0;
  waveMove_9.x = dot (tmpvar_17, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_9.z = dot (tmpvar_17, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_6.xz = (pos_2.xz - (waveMove_9.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_18;
  tmpvar_18 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_16, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_8 = tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = (vertex_6.xyz - _CameraPosition.xyz);
  highp float tmpvar_20;
  tmpvar_20 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_19, tmpvar_19))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_7.w = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21.xyz = ((2.0 * waveColor_8) * _glesColor.xyz);
  tmpvar_21.w = color_7.w;
  xlv_TEXCOORD0 = ((_Object2World * vertex_6).xyz - _LightPositionRange.xyz);
  gl_Position = (glstate_matrix_mvp * vertex_6);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD2 = (_Object2World * vertex_6).xyz;
  xlv_COLOR0 = tmpvar_21;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _LightPositionRange;
uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp vec4 tmpvar_1;
  lowp float x_2;
  x_2 = ((texture2D (_MainTex, xlv_TEXCOORD1) * xlv_COLOR0).w - _Cutoff);
  if ((x_2 < 0.0)) {
    discard;
  };
  highp vec4 tmpvar_3;
  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
    (sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) * _LightPositionRange.w)
  , 0.999)));
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
  tmpvar_1 = tmpvar_4;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" }
"!!GLES"
}
}
 }
 Pass {
  Name "META"
  Tags { "LIGHTMODE"="Meta" "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="GrassBillboard" }
  Cull Off
  GpuProgramID 415208
Program "vp" {
SubProgram "gles " {
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform lowp vec4 _WavingTint;
uniform highp vec4 _WaveAndDistance;
uniform highp vec4 _CameraPosition;
uniform highp vec3 _CameraRight;
uniform highp vec3 _CameraUp;
uniform bvec4 unity_MetaVertexControl;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = _glesColor;
  highp vec4 pos_2;
  pos_2 = _glesVertex;
  highp vec2 offset_3;
  offset_3 = _glesTANGENT.xy;
  highp vec3 tmpvar_4;
  tmpvar_4 = (_glesVertex.xyz - _CameraPosition.xyz);
  highp float tmpvar_5;
  tmpvar_5 = dot (tmpvar_4, tmpvar_4);
  if ((tmpvar_5 > _WaveAndDistance.w)) {
    offset_3 = vec2(0.0, 0.0);
  };
  pos_2.xyz = (_glesVertex.xyz + (offset_3.x * _CameraRight));
  pos_2.xyz = (pos_2.xyz + (offset_3.y * _CameraUp));
  highp vec4 vertex_6;
  vertex_6.yw = pos_2.yw;
  lowp vec4 color_7;
  color_7.xyz = tmpvar_1.xyz;
  lowp vec3 waveColor_8;
  highp vec3 waveMove_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = ((fract(
    (((pos_2.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (pos_2.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))
  ) * 6.408849) - 3.141593);
  highp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * tmpvar_10);
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * tmpvar_10);
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * tmpvar_11);
  highp vec4 tmpvar_14;
  tmpvar_14 = (((tmpvar_10 + 
    (tmpvar_12 * -0.1616162)
  ) + (tmpvar_13 * 0.0083333)) + ((tmpvar_13 * tmpvar_11) * -0.00019841));
  highp vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * tmpvar_14);
  highp vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_15 * tmpvar_15);
  highp vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_16 * _glesTANGENT.y);
  waveMove_9.y = 0.0;
  waveMove_9.x = dot (tmpvar_17, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove_9.z = dot (tmpvar_17, vec4(0.006, 0.02, -0.02, 0.1));
  vertex_6.xz = (pos_2.xz - (waveMove_9.xz * _WaveAndDistance.z));
  highp vec3 tmpvar_18;
  tmpvar_18 = mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_16, vec4(0.6741998, 0.6741998, 0.2696799, 0.13484)) * 0.7)));
  waveColor_8 = tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = (vertex_6.xyz - _CameraPosition.xyz);
  highp float tmpvar_20;
  tmpvar_20 = clamp (((2.0 * 
    (_WaveAndDistance.w - dot (tmpvar_19, tmpvar_19))
  ) * _CameraPosition.w), 0.0, 1.0);
  color_7.w = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21.xyz = ((2.0 * waveColor_8) * _glesColor.xyz);
  tmpvar_21.w = color_7.w;
  highp vec4 vertex_22;
  vertex_22 = vertex_6;
  if (unity_MetaVertexControl.x) {
    vertex_22.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_23;
    if ((vertex_6.z > 0.0)) {
      tmpvar_23 = 0.0001;
    } else {
      tmpvar_23 = 0.0;
    };
    vertex_22.z = tmpvar_23;
  };
  if (unity_MetaVertexControl.y) {
    vertex_22.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_24;
    if ((vertex_22.z > 0.0)) {
      tmpvar_24 = 0.0001;
    } else {
      tmpvar_24 = 0.0;
    };
    vertex_22.z = tmpvar_24;
  };
  gl_Position = (glstate_matrix_mvp * vertex_22);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = (_Object2World * vertex_6).xyz;
  xlv_COLOR0 = tmpvar_21;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp float _Cutoff;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec2 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR0);
  lowp vec3 tmpvar_4;
  tmpvar_4 = tmpvar_3.xyz;
  lowp float x_5;
  x_5 = (tmpvar_3.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  tmpvar_2 = tmpvar_4;
  mediump vec4 res_6;
  res_6 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_7;
    tmpvar_7.w = 1.0;
    tmpvar_7.xyz = tmpvar_2;
    res_6.w = tmpvar_7.w;
    highp vec3 tmpvar_8;
    tmpvar_8 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_6.xyz = tmpvar_8;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_9;
    if (bool(unity_UseLinearSpace)) {
      emission_9 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_9 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_10;
    highp vec4 rgbm_11;
    highp vec4 tmpvar_12;
    tmpvar_12.w = 1.0;
    tmpvar_12.xyz = (emission_9 * 0.01030928);
    rgbm_11.xyz = tmpvar_12.xyz;
    rgbm_11.w = max (max (tmpvar_12.x, tmpvar_12.y), max (tmpvar_12.z, 0.02));
    rgbm_11.w = (ceil((rgbm_11.w * 255.0)) / 255.0);
    rgbm_11.w = max (rgbm_11.w, 0.02);
    rgbm_11.xyz = (tmpvar_12.xyz / rgbm_11.w);
    tmpvar_10 = rgbm_11;
    res_6 = tmpvar_10;
  };
  tmpvar_1 = res_6;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
"!!GLES"
}
}
 }
}
Fallback Off
}                 AddPass Ѧ Shader "Hidden/TerrainEngine/Splatmap/Diffuse-AddPass" {
Properties {
[HideInInspector]  _Control ("Control (RGBA)", 2D) = "black" { }
[HideInInspector]  _Splat3 ("Layer 3 (A)", 2D) = "white" { }
[HideInInspector]  _Splat2 ("Layer 2 (B)", 2D) = "white" { }
[HideInInspector]  _Splat1 ("Layer 1 (G)", 2D) = "white" { }
[HideInInspector]  _Splat0 ("Layer 0 (R)", 2D) = "white" { }
[HideInInspector]  _Normal3 ("Normal 3 (A)", 2D) = "bump" { }
[HideInInspector]  _Normal2 ("Normal 2 (B)", 2D) = "bump" { }
[HideInInspector]  _Normal1 ("Normal 1 (G)", 2D) = "bump" { }
[HideInInspector]  _Normal0 ("Normal 0 (R)", 2D) = "bump" { }
}
SubShader { 
 Tags { "QUEUE"="Geometry-99" "IGNOREPROJECTOR"="true" "RenderType"="Opaque" "SplatCount"="4" }
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "QUEUE"="Geometry-99" "IGNOREPROJECTOR"="true" "RenderType"="Opaque" "SplatCount"="4" }
  ZWrite Off
  Blend One One
  GpuProgramID 41143
Program "vp" {
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_6;
  v_6.x = _World2Object[0].x;
  v_6.y = _World2Object[1].x;
  v_6.z = _World2Object[2].x;
  v_6.w = _World2Object[3].x;
  highp vec4 v_7;
  v_7.x = _World2Object[0].y;
  v_7.y = _World2Object[1].y;
  v_7.z = _World2Object[2].y;
  v_7.w = _World2Object[3].y;
  highp vec4 v_8;
  v_8.x = _World2Object[0].z;
  v_8.y = _World2Object[1].z;
  v_8.z = _World2Object[2].z;
  v_8.w = _World2Object[3].z;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize(((
    (v_6.xyz * _glesNormal.x)
   + 
    (v_7.xyz * _glesNormal.y)
  ) + (v_8.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_9;
  tmpvar_4 = worldNormal_1;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = worldNormal_1;
  mediump vec4 normal_11;
  normal_11 = tmpvar_10;
  mediump vec3 x2_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = (normal_11.xyzz * normal_11.yzzx);
  x2_12.x = dot (unity_SHBr, tmpvar_13);
  x2_12.y = dot (unity_SHBg, tmpvar_13);
  x2_12.z = dot (unity_SHBb, tmpvar_13);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD5 = (x2_12 + (unity_SHC.xyz * (
    (normal_11.x * normal_11.x)
   - 
    (normal_11.y * normal_11.y)
  )));
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_22;
  normalWorld_22 = tmpvar_4;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normalWorld_22;
  mediump vec3 x1_24;
  x1_24.x = dot (unity_SHAr, tmpvar_23);
  x1_24.y = dot (unity_SHAg, tmpvar_23);
  x1_24.z = dot (unity_SHAb, tmpvar_23);
  lowp vec4 c_25;
  lowp vec4 c_26;
  lowp float diff_27;
  mediump float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_27 = tmpvar_28;
  mediump vec3 tmpvar_29;
  tmpvar_29 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_27);
  c_26.xyz = tmpvar_29;
  c_26.w = tmpvar_7;
  c_25.w = c_26.w;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (c_26.xyz + (mixedDiffuse_9.xyz * (xlv_TEXCOORD5 + x1_24)));
  c_25.xyz = tmpvar_30;
  lowp vec4 color_31;
  color_31.xyz = (c_25.xyz * tmpvar_7);
  color_31.w = 1.0;
  c_3.xyz = color_31.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_6;
  v_6.x = _World2Object[0].x;
  v_6.y = _World2Object[1].x;
  v_6.z = _World2Object[2].x;
  v_6.w = _World2Object[3].x;
  highp vec4 v_7;
  v_7.x = _World2Object[0].y;
  v_7.y = _World2Object[1].y;
  v_7.z = _World2Object[2].y;
  v_7.w = _World2Object[3].y;
  highp vec4 v_8;
  v_8.x = _World2Object[0].z;
  v_8.y = _World2Object[1].z;
  v_8.z = _World2Object[2].z;
  v_8.w = _World2Object[3].z;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize(((
    (v_6.xyz * _glesNormal.x)
   + 
    (v_7.xyz * _glesNormal.y)
  ) + (v_8.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_9;
  tmpvar_4 = worldNormal_1;
  tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 c_23;
  lowp vec4 c_24;
  lowp float diff_25;
  mediump float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_25 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_25);
  c_24.xyz = tmpvar_27;
  c_24.w = tmpvar_7;
  c_23.w = c_24.w;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (c_24.xyz + (mixedDiffuse_9.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_22.w) * tmpvar_22.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_23.xyz = tmpvar_28;
  lowp vec4 color_29;
  color_29.xyz = (c_23.xyz * tmpvar_7);
  color_29.w = 1.0;
  c_3.xyz = color_29.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_6;
  v_6.x = _World2Object[0].x;
  v_6.y = _World2Object[1].x;
  v_6.z = _World2Object[2].x;
  v_6.w = _World2Object[3].x;
  highp vec4 v_7;
  v_7.x = _World2Object[0].y;
  v_7.y = _World2Object[1].y;
  v_7.z = _World2Object[2].y;
  v_7.w = _World2Object[3].y;
  highp vec4 v_8;
  v_8.x = _World2Object[0].z;
  v_8.y = _World2Object[1].z;
  v_8.z = _World2Object[2].z;
  v_8.w = _World2Object[3].z;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize(((
    (v_6.xyz * _glesNormal.x)
   + 
    (v_7.xyz * _glesNormal.y)
  ) + (v_8.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_9;
  tmpvar_4 = worldNormal_1;
  tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_22;
  normalWorld_22 = tmpvar_4;
  mediump vec4 realtimeDirTex_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
  realtimeDirTex_23 = tmpvar_25;
  lowp vec4 dirTex_26;
  dirTex_26 = realtimeDirTex_23;
  lowp vec3 y_27;
  y_27 = (dirTex_26.xyz - 0.5);
  lowp vec4 c_28;
  lowp vec4 c_29;
  lowp float diff_30;
  mediump float tmpvar_31;
  tmpvar_31 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_30 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_30);
  c_29.xyz = tmpvar_32;
  c_29.w = tmpvar_7;
  c_28.w = c_29.w;
  mediump vec3 tmpvar_33;
  tmpvar_33 = (c_29.xyz + (mixedDiffuse_9.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_24.w) * tmpvar_24.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_22, y_27) + 0.5))
   / dirTex_26.w)));
  c_28.xyz = tmpvar_33;
  lowp vec4 color_34;
  color_34.xyz = (c_28.xyz * tmpvar_7);
  color_34.w = 1.0;
  c_3.xyz = color_34.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
varying lowp vec3 xlv_TEXCOORD9;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  highp vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  highp vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * _glesNormal.x)
   + 
    (v_13.xyz * _glesNormal.y)
  ) + (v_14.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_15;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesTANGENT.xyz));
  worldTangent_2 = tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.w);
  worldBinormal_1 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.x;
  tmpvar_20.y = worldBinormal_1.x;
  tmpvar_20.z = worldNormal_3.x;
  tmpvar_20.w = tmpvar_11.x;
  highp vec3 tmpvar_21;
  tmpvar_21 = tmpvar_20.xyz;
  tmpvar_8 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.xyz;
  tmpvar_9 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.z;
  tmpvar_24.y = worldBinormal_1.z;
  tmpvar_24.z = worldNormal_3.z;
  tmpvar_24.w = tmpvar_11.z;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.xyz;
  tmpvar_10 = tmpvar_25;
  tmpvar_6 = worldNormal_3;
  tmpvar_7.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_11;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
  xlv_TEXCOORD8 = tmpvar_9;
  xlv_TEXCOORD9 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp float tmpvar_3;
  mediump vec4 splat_control_4;
  lowp vec4 mixedDiffuse_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_4 = tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = dot (splat_control_4, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_8;
  tmpvar_8 = (splat_control_4 / (tmpvar_7 + 0.001));
  splat_control_4 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = (tmpvar_8.x * tmpvar_9);
  mixedDiffuse_5 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_12;
  tmpvar_12 = (mixedDiffuse_5 + (tmpvar_8.y * tmpvar_11));
  mixedDiffuse_5 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (mixedDiffuse_5 + (tmpvar_8.z * tmpvar_13));
  mixedDiffuse_5 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_5 + (tmpvar_8.w * tmpvar_15));
  mixedDiffuse_5 = tmpvar_16;
  tmpvar_3 = tmpvar_7;
  mediump vec3 normalWorld_17;
  normalWorld_17 = tmpvar_2;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (unity_Lightmap, xlv_TEXCOORD5.xy);
  mediump vec3 tmpvar_19;
  tmpvar_19 = (2.0 * tmpvar_18.xyz);
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (unity_LightmapInd, xlv_TEXCOORD5.xy);
  lowp vec3 y_21;
  y_21 = (tmpvar_20.xyz - 0.5);
  lowp vec4 c_22;
  lowp vec4 c_23;
  c_23.xyz = vec3(0.0, 0.0, 0.0);
  c_23.w = tmpvar_3;
  c_22.w = c_23.w;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (mixedDiffuse_5.xyz * ((tmpvar_19 * 
    (dot (normalWorld_17, y_21) + 0.5)
  ) / tmpvar_20.w));
  c_22.xyz = tmpvar_24;
  lowp vec4 color_25;
  color_25.xyz = (c_22.xyz * tmpvar_3);
  color_25.w = 1.0;
  c_1.xyz = color_25.xyz;
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
varying lowp vec3 xlv_TEXCOORD9;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  highp vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  highp vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * _glesNormal.x)
   + 
    (v_13.xyz * _glesNormal.y)
  ) + (v_14.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_15;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesTANGENT.xyz));
  worldTangent_2 = tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * _glesTANGENT.w);
  worldBinormal_1 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.x;
  tmpvar_20.y = worldBinormal_1.x;
  tmpvar_20.z = worldNormal_3.x;
  tmpvar_20.w = tmpvar_11.x;
  highp vec3 tmpvar_21;
  tmpvar_21 = tmpvar_20.xyz;
  tmpvar_8 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.xyz;
  tmpvar_9 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.z;
  tmpvar_24.y = worldBinormal_1.z;
  tmpvar_24.z = worldNormal_3.z;
  tmpvar_24.w = tmpvar_11.z;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.xyz;
  tmpvar_10 = tmpvar_25;
  tmpvar_6 = worldNormal_3;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_7.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_11;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
  xlv_TEXCOORD8 = tmpvar_9;
  xlv_TEXCOORD9 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp float tmpvar_3;
  mediump vec4 splat_control_4;
  lowp vec4 mixedDiffuse_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_4 = tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = dot (splat_control_4, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_8;
  tmpvar_8 = (splat_control_4 / (tmpvar_7 + 0.001));
  splat_control_4 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = (tmpvar_8.x * tmpvar_9);
  mixedDiffuse_5 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_12;
  tmpvar_12 = (mixedDiffuse_5 + (tmpvar_8.y * tmpvar_11));
  mixedDiffuse_5 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (mixedDiffuse_5 + (tmpvar_8.z * tmpvar_13));
  mixedDiffuse_5 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_5 + (tmpvar_8.w * tmpvar_15));
  mixedDiffuse_5 = tmpvar_16;
  tmpvar_3 = tmpvar_7;
  mediump vec3 normalWorld_17;
  normalWorld_17 = tmpvar_2;
  mediump vec4 realtimeDirTex_18;
  mediump vec3 tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (unity_Lightmap, xlv_TEXCOORD5.xy);
  mediump vec3 tmpvar_21;
  tmpvar_21 = (2.0 * tmpvar_20.xyz);
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_LightmapInd, xlv_TEXCOORD5.xy);
  lowp vec3 y_23;
  y_23 = (tmpvar_22.xyz - 0.5);
  tmpvar_19 = ((tmpvar_21 * (
    dot (normalWorld_17, y_23)
   + 0.5)) / tmpvar_22.w);
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD5.zw);
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD5.zw);
  realtimeDirTex_18 = tmpvar_25;
  lowp vec4 dirTex_26;
  dirTex_26 = realtimeDirTex_18;
  lowp vec3 y_27;
  y_27 = (dirTex_26.xyz - 0.5);
  tmpvar_19 = (tmpvar_19 + ((
    pow (((unity_DynamicLightmap_HDR.x * tmpvar_24.w) * tmpvar_24.xyz), unity_DynamicLightmap_HDR.yyy)
   * 
    (dot (normalWorld_17, y_27) + 0.5)
  ) / dirTex_26.w));
  lowp vec4 c_28;
  lowp vec4 c_29;
  c_29.xyz = vec3(0.0, 0.0, 0.0);
  c_29.w = tmpvar_3;
  c_28.w = c_29.w;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (mixedDiffuse_5.xyz * tmpvar_19);
  c_28.xyz = tmpvar_30;
  lowp vec4 color_31;
  color_31.xyz = (c_28.xyz * tmpvar_3);
  color_31.w = 1.0;
  c_1.xyz = color_31.xyz;
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  lowp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = worldNormal_1;
  mediump vec4 normal_12;
  normal_12 = tmpvar_11;
  mediump vec3 x2_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_12.xyzz * normal_12.yzzx);
  x2_13.x = dot (unity_SHBr, tmpvar_14);
  x2_13.y = dot (unity_SHBg, tmpvar_14);
  x2_13.z = dot (unity_SHBb, tmpvar_14);
  highp vec4 tmpvar_15;
  highp vec4 cse_16;
  cse_16 = (_Object2World * _glesVertex);
  tmpvar_15 = (unity_World2Shadow[0] * cse_16);
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_16.xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD5 = (x2_13 + (unity_SHC.xyz * (
    (normal_12.x * normal_12.x)
   - 
    (normal_12.y * normal_12.y)
  )));
  xlv_TEXCOORD6 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float tmpvar_22;
  mediump float dist_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (float((dist_23 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_22 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_26;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_22;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_5;
  mediump vec3 tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x1_30;
  x1_30.x = dot (unity_SHAr, tmpvar_29);
  x1_30.y = dot (unity_SHAg, tmpvar_29);
  x1_30.z = dot (unity_SHAb, tmpvar_29);
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_31;
  lowp vec4 c_32;
  lowp float diff_33;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_33 = tmpvar_34;
  mediump vec3 tmpvar_35;
  tmpvar_35 = ((mixedDiffuse_10.xyz * tmpvar_28) * diff_33);
  c_32.xyz = tmpvar_35;
  c_32.w = tmpvar_8;
  c_31.w = c_32.w;
  mediump vec3 tmpvar_36;
  tmpvar_36 = (c_32.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD5 + x1_30)));
  c_31.xyz = tmpvar_36;
  lowp vec4 color_37;
  color_37.xyz = (c_31.xyz * tmpvar_8);
  color_37.w = 1.0;
  c_4.xyz = color_37.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = (unity_World2Shadow[0] * cse_12);
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_12.xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float tmpvar_22;
  mediump float dist_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (float((dist_23 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_22 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_26;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_22;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  tmpvar_2 = tmpvar_27;
  lowp vec4 c_29;
  lowp vec4 c_30;
  lowp float diff_31;
  mediump float tmpvar_32;
  tmpvar_32 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_31 = tmpvar_32;
  mediump vec3 tmpvar_33;
  tmpvar_33 = ((mixedDiffuse_10.xyz * tmpvar_27) * diff_31);
  c_30.xyz = tmpvar_33;
  c_30.w = tmpvar_8;
  c_29.w = c_30.w;
  mediump vec3 tmpvar_34;
  tmpvar_34 = (c_30.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_28.w) * tmpvar_28.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_29.xyz = tmpvar_34;
  lowp vec4 color_35;
  color_35.xyz = (c_29.xyz * tmpvar_8);
  color_35.w = 1.0;
  c_4.xyz = color_35.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = (unity_World2Shadow[0] * cse_12);
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_12.xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float tmpvar_22;
  mediump float dist_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (float((dist_23 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_22 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_26;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_22;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_5;
  mediump vec4 realtimeDirTex_28;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
  realtimeDirTex_28 = tmpvar_31;
  lowp vec4 dirTex_32;
  dirTex_32 = realtimeDirTex_28;
  lowp vec3 y_33;
  y_33 = (dirTex_32.xyz - 0.5);
  tmpvar_2 = tmpvar_29;
  lowp vec4 c_34;
  lowp vec4 c_35;
  lowp float diff_36;
  mediump float tmpvar_37;
  tmpvar_37 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_36 = tmpvar_37;
  mediump vec3 tmpvar_38;
  tmpvar_38 = ((mixedDiffuse_10.xyz * tmpvar_29) * diff_36);
  c_35.xyz = tmpvar_38;
  c_35.w = tmpvar_8;
  c_34.w = c_35.w;
  mediump vec3 tmpvar_39;
  tmpvar_39 = (c_35.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_30.w) * tmpvar_30.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_27, y_33) + 0.5))
   / dirTex_32.w)));
  c_34.xyz = tmpvar_39;
  lowp vec4 color_40;
  color_40.xyz = (c_34.xyz * tmpvar_8);
  color_40.w = 1.0;
  c_4.xyz = color_40.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
varying lowp vec3 xlv_TEXCOORD9;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * _glesNormal.x)
   + 
    (v_15.xyz * _glesNormal.y)
  ) + (v_16.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize((tmpvar_18 * _glesTANGENT.xyz));
  worldTangent_2 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * _glesTANGENT.w);
  worldBinormal_1 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.x;
  tmpvar_22.y = worldBinormal_1.x;
  tmpvar_22.z = worldNormal_3.x;
  tmpvar_22.w = tmpvar_12.x;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.xyz;
  tmpvar_9 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.y;
  tmpvar_24.y = worldBinormal_1.y;
  tmpvar_24.z = worldNormal_3.y;
  tmpvar_24.w = tmpvar_12.y;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.xyz;
  tmpvar_10 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.x = worldTangent_2.z;
  tmpvar_26.y = worldBinormal_1.z;
  tmpvar_26.z = worldNormal_3.z;
  tmpvar_26.w = tmpvar_12.z;
  highp vec3 tmpvar_27;
  tmpvar_27 = tmpvar_26.xyz;
  tmpvar_11 = tmpvar_27;
  tmpvar_6 = worldNormal_3;
  tmpvar_7.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_World2Shadow[0] * cse_13);
  tmpvar_8 = tmpvar_28;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_12;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
  xlv_TEXCOORD7 = tmpvar_9;
  xlv_TEXCOORD8 = tmpvar_10;
  xlv_TEXCOORD9 = tmpvar_11;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_5 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_9;
  tmpvar_9 = (splat_control_5 / (tmpvar_8 + 0.001));
  splat_control_5 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_9.x * tmpvar_10);
  mixedDiffuse_6 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_13;
  tmpvar_13 = (mixedDiffuse_6 + (tmpvar_9.y * tmpvar_12));
  mixedDiffuse_6 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (mixedDiffuse_6 + (tmpvar_9.z * tmpvar_14));
  mixedDiffuse_6 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_6 + (tmpvar_9.w * tmpvar_16));
  mixedDiffuse_6 = tmpvar_17;
  tmpvar_4 = tmpvar_8;
  lowp float tmpvar_18;
  mediump float dist_19;
  lowp float tmpvar_20;
  tmpvar_20 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_19 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (float((dist_19 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_18 = tmpvar_21;
  tmpvar_1 = tmpvar_18;
  mediump vec3 normalWorld_22;
  normalWorld_22 = tmpvar_3;
  mediump vec3 tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD5.xy);
  mediump vec3 tmpvar_25;
  tmpvar_25 = (2.0 * tmpvar_24.xyz);
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (unity_LightmapInd, xlv_TEXCOORD5.xy);
  lowp vec3 y_27;
  y_27 = (tmpvar_26.xyz - 0.5);
  tmpvar_23 = ((tmpvar_25 * (
    dot (normalWorld_22, y_27)
   + 0.5)) / tmpvar_26.w);
  tmpvar_23 = max (min (tmpvar_23, (tmpvar_24.xyz * tmpvar_1)), (tmpvar_23 * tmpvar_1));
  lowp vec4 c_28;
  lowp vec4 c_29;
  c_29.xyz = vec3(0.0, 0.0, 0.0);
  c_29.w = tmpvar_4;
  c_28.w = c_29.w;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (mixedDiffuse_6.xyz * tmpvar_23);
  c_28.xyz = tmpvar_30;
  lowp vec4 color_31;
  color_31.xyz = (c_28.xyz * tmpvar_4);
  color_31.w = 1.0;
  c_2.xyz = color_31.xyz;
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
varying lowp vec3 xlv_TEXCOORD9;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * _glesNormal.x)
   + 
    (v_15.xyz * _glesNormal.y)
  ) + (v_16.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize((tmpvar_18 * _glesTANGENT.xyz));
  worldTangent_2 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * _glesTANGENT.w);
  worldBinormal_1 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.x;
  tmpvar_22.y = worldBinormal_1.x;
  tmpvar_22.z = worldNormal_3.x;
  tmpvar_22.w = tmpvar_12.x;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.xyz;
  tmpvar_9 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.y;
  tmpvar_24.y = worldBinormal_1.y;
  tmpvar_24.z = worldNormal_3.y;
  tmpvar_24.w = tmpvar_12.y;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.xyz;
  tmpvar_10 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.x = worldTangent_2.z;
  tmpvar_26.y = worldBinormal_1.z;
  tmpvar_26.z = worldNormal_3.z;
  tmpvar_26.w = tmpvar_12.z;
  highp vec3 tmpvar_27;
  tmpvar_27 = tmpvar_26.xyz;
  tmpvar_11 = tmpvar_27;
  tmpvar_6 = worldNormal_3;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_7.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_World2Shadow[0] * cse_13);
  tmpvar_8 = tmpvar_28;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_12;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
  xlv_TEXCOORD7 = tmpvar_9;
  xlv_TEXCOORD8 = tmpvar_10;
  xlv_TEXCOORD9 = tmpvar_11;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_5 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_9;
  tmpvar_9 = (splat_control_5 / (tmpvar_8 + 0.001));
  splat_control_5 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_9.x * tmpvar_10);
  mixedDiffuse_6 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_13;
  tmpvar_13 = (mixedDiffuse_6 + (tmpvar_9.y * tmpvar_12));
  mixedDiffuse_6 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (mixedDiffuse_6 + (tmpvar_9.z * tmpvar_14));
  mixedDiffuse_6 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_6 + (tmpvar_9.w * tmpvar_16));
  mixedDiffuse_6 = tmpvar_17;
  tmpvar_4 = tmpvar_8;
  lowp float tmpvar_18;
  mediump float dist_19;
  lowp float tmpvar_20;
  tmpvar_20 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_19 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (float((dist_19 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_18 = tmpvar_21;
  tmpvar_1 = tmpvar_18;
  mediump vec3 normalWorld_22;
  normalWorld_22 = tmpvar_3;
  mediump vec4 realtimeDirTex_23;
  mediump vec3 tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (unity_Lightmap, xlv_TEXCOORD5.xy);
  mediump vec3 tmpvar_26;
  tmpvar_26 = (2.0 * tmpvar_25.xyz);
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (unity_LightmapInd, xlv_TEXCOORD5.xy);
  lowp vec3 y_28;
  y_28 = (tmpvar_27.xyz - 0.5);
  tmpvar_24 = ((tmpvar_26 * (
    dot (normalWorld_22, y_28)
   + 0.5)) / tmpvar_27.w);
  tmpvar_24 = max (min (tmpvar_24, (tmpvar_25.xyz * tmpvar_1)), (tmpvar_24 * tmpvar_1));
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD5.zw);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD5.zw);
  realtimeDirTex_23 = tmpvar_30;
  lowp vec4 dirTex_31;
  dirTex_31 = realtimeDirTex_23;
  lowp vec3 y_32;
  y_32 = (dirTex_31.xyz - 0.5);
  tmpvar_24 = (tmpvar_24 + ((
    pow (((unity_DynamicLightmap_HDR.x * tmpvar_29.w) * tmpvar_29.xyz), unity_DynamicLightmap_HDR.yyy)
   * 
    (dot (normalWorld_22, y_32) + 0.5)
  ) / dirTex_31.w));
  lowp vec4 c_33;
  lowp vec4 c_34;
  c_34.xyz = vec3(0.0, 0.0, 0.0);
  c_34.w = tmpvar_4;
  c_33.w = c_34.w;
  mediump vec3 tmpvar_35;
  tmpvar_35 = (mixedDiffuse_6.xyz * tmpvar_24);
  c_33.xyz = tmpvar_35;
  lowp vec4 color_36;
  color_36.xyz = (c_33.xyz * tmpvar_4);
  color_36.w = 1.0;
  c_2.xyz = color_36.xyz;
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_7;
  tmpvar_7 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_8;
  v_8.x = _World2Object[0].x;
  v_8.y = _World2Object[1].x;
  v_8.z = _World2Object[2].x;
  v_8.w = _World2Object[3].x;
  highp vec4 v_9;
  v_9.x = _World2Object[0].y;
  v_9.y = _World2Object[1].y;
  v_9.z = _World2Object[2].y;
  v_9.w = _World2Object[3].y;
  highp vec4 v_10;
  v_10.x = _World2Object[0].z;
  v_10.y = _World2Object[1].z;
  v_10.z = _World2Object[2].z;
  v_10.w = _World2Object[3].z;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize(((
    (v_8.xyz * _glesNormal.x)
   + 
    (v_9.xyz * _glesNormal.y)
  ) + (v_10.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_11;
  tmpvar_4 = worldNormal_1;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = worldNormal_1;
  mediump vec3 tmpvar_13;
  mediump vec4 normal_14;
  normal_14 = tmpvar_12;
  mediump vec3 x2_15;
  mediump vec4 tmpvar_16;
  tmpvar_16 = (normal_14.xyzz * normal_14.yzzx);
  x2_15.x = dot (unity_SHBr, tmpvar_16);
  x2_15.y = dot (unity_SHBg, tmpvar_16);
  x2_15.z = dot (unity_SHBb, tmpvar_16);
  tmpvar_13 = (x2_15 + (unity_SHC.xyz * (
    (normal_14.x * normal_14.x)
   - 
    (normal_14.y * normal_14.y)
  )));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 normal_22;
  normal_22 = worldNormal_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - tmpvar_7.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - tmpvar_7.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - tmpvar_7.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * normal_22.x) + (tmpvar_24 * normal_22.y)) + (tmpvar_25 * normal_22.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_13 + ((
    ((lightColor0_17 * tmpvar_27.x) + (lightColor1_18 * tmpvar_27.y))
   + 
    (lightColor2_19 * tmpvar_27.z)
  ) + (lightColor3_20 * tmpvar_27.w)));
  tmpvar_5 = tmpvar_28;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD5 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_22;
  normalWorld_22 = tmpvar_4;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normalWorld_22;
  mediump vec3 x1_24;
  x1_24.x = dot (unity_SHAr, tmpvar_23);
  x1_24.y = dot (unity_SHAg, tmpvar_23);
  x1_24.z = dot (unity_SHAb, tmpvar_23);
  lowp vec4 c_25;
  lowp vec4 c_26;
  lowp float diff_27;
  mediump float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_27 = tmpvar_28;
  mediump vec3 tmpvar_29;
  tmpvar_29 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_27);
  c_26.xyz = tmpvar_29;
  c_26.w = tmpvar_7;
  c_25.w = c_26.w;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (c_26.xyz + (mixedDiffuse_9.xyz * (xlv_TEXCOORD5 + x1_24)));
  c_25.xyz = tmpvar_30;
  lowp vec4 color_31;
  color_31.xyz = (c_25.xyz * tmpvar_7);
  color_31.w = 1.0;
  c_3.xyz = color_31.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_6;
  v_6.x = _World2Object[0].x;
  v_6.y = _World2Object[1].x;
  v_6.z = _World2Object[2].x;
  v_6.w = _World2Object[3].x;
  highp vec4 v_7;
  v_7.x = _World2Object[0].y;
  v_7.y = _World2Object[1].y;
  v_7.z = _World2Object[2].y;
  v_7.w = _World2Object[3].y;
  highp vec4 v_8;
  v_8.x = _World2Object[0].z;
  v_8.y = _World2Object[1].z;
  v_8.z = _World2Object[2].z;
  v_8.w = _World2Object[3].z;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize(((
    (v_6.xyz * _glesNormal.x)
   + 
    (v_7.xyz * _glesNormal.y)
  ) + (v_8.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_9;
  tmpvar_4 = worldNormal_1;
  tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 c_23;
  lowp vec4 c_24;
  lowp float diff_25;
  mediump float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_25 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_25);
  c_24.xyz = tmpvar_27;
  c_24.w = tmpvar_7;
  c_23.w = c_24.w;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (c_24.xyz + (mixedDiffuse_9.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_22.w) * tmpvar_22.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_23.xyz = tmpvar_28;
  lowp vec4 color_29;
  color_29.xyz = (c_23.xyz * tmpvar_7);
  color_29.w = 1.0;
  c_3.xyz = color_29.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_6;
  v_6.x = _World2Object[0].x;
  v_6.y = _World2Object[1].x;
  v_6.z = _World2Object[2].x;
  v_6.w = _World2Object[3].x;
  highp vec4 v_7;
  v_7.x = _World2Object[0].y;
  v_7.y = _World2Object[1].y;
  v_7.z = _World2Object[2].y;
  v_7.w = _World2Object[3].y;
  highp vec4 v_8;
  v_8.x = _World2Object[0].z;
  v_8.y = _World2Object[1].z;
  v_8.z = _World2Object[2].z;
  v_8.w = _World2Object[3].z;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize(((
    (v_6.xyz * _glesNormal.x)
   + 
    (v_7.xyz * _glesNormal.y)
  ) + (v_8.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_9;
  tmpvar_4 = worldNormal_1;
  tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_22;
  normalWorld_22 = tmpvar_4;
  mediump vec4 realtimeDirTex_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
  realtimeDirTex_23 = tmpvar_25;
  lowp vec4 dirTex_26;
  dirTex_26 = realtimeDirTex_23;
  lowp vec3 y_27;
  y_27 = (dirTex_26.xyz - 0.5);
  lowp vec4 c_28;
  lowp vec4 c_29;
  lowp float diff_30;
  mediump float tmpvar_31;
  tmpvar_31 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_30 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_30);
  c_29.xyz = tmpvar_32;
  c_29.w = tmpvar_7;
  c_28.w = c_29.w;
  mediump vec3 tmpvar_33;
  tmpvar_33 = (c_29.xyz + (mixedDiffuse_9.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_24.w) * tmpvar_24.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_22, y_27) + 0.5))
   / dirTex_26.w)));
  c_28.xyz = tmpvar_33;
  lowp vec4 color_34;
  color_34.xyz = (c_28.xyz * tmpvar_7);
  color_34.w = 1.0;
  c_3.xyz = color_34.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 cse_8;
  cse_8 = (_Object2World * _glesVertex);
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_12;
  tmpvar_4 = worldNormal_1;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = worldNormal_1;
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  mediump vec3 x2_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = (normal_15.xyzz * normal_15.yzzx);
  x2_16.x = dot (unity_SHBr, tmpvar_17);
  x2_16.y = dot (unity_SHBg, tmpvar_17);
  x2_16.z = dot (unity_SHBb, tmpvar_17);
  tmpvar_14 = (x2_16 + (unity_SHC.xyz * (
    (normal_15.x * normal_15.x)
   - 
    (normal_15.y * normal_15.y)
  )));
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 normal_23;
  normal_23 = worldNormal_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - cse_8.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - cse_8.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - cse_8.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * normal_23.x) + (tmpvar_25 * normal_23.y)) + (tmpvar_26 * normal_23.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_14 + ((
    ((lightColor0_18 * tmpvar_28.x) + (lightColor1_19 * tmpvar_28.y))
   + 
    (lightColor2_20 * tmpvar_28.z)
  ) + (lightColor3_21 * tmpvar_28.w)));
  tmpvar_5 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_8);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_8.xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD5 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float tmpvar_22;
  mediump float dist_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (float((dist_23 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_22 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_26;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_22;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_5;
  mediump vec3 tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x1_30;
  x1_30.x = dot (unity_SHAr, tmpvar_29);
  x1_30.y = dot (unity_SHAg, tmpvar_29);
  x1_30.z = dot (unity_SHAb, tmpvar_29);
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_31;
  lowp vec4 c_32;
  lowp float diff_33;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_33 = tmpvar_34;
  mediump vec3 tmpvar_35;
  tmpvar_35 = ((mixedDiffuse_10.xyz * tmpvar_28) * diff_33);
  c_32.xyz = tmpvar_35;
  c_32.w = tmpvar_8;
  c_31.w = c_32.w;
  mediump vec3 tmpvar_36;
  tmpvar_36 = (c_32.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD5 + x1_30)));
  c_31.xyz = tmpvar_36;
  lowp vec4 color_37;
  color_37.xyz = (c_31.xyz * tmpvar_8);
  color_37.w = 1.0;
  c_4.xyz = color_37.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = (unity_World2Shadow[0] * cse_12);
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_12.xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float tmpvar_22;
  mediump float dist_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (float((dist_23 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_22 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_26;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_22;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  tmpvar_2 = tmpvar_27;
  lowp vec4 c_29;
  lowp vec4 c_30;
  lowp float diff_31;
  mediump float tmpvar_32;
  tmpvar_32 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_31 = tmpvar_32;
  mediump vec3 tmpvar_33;
  tmpvar_33 = ((mixedDiffuse_10.xyz * tmpvar_27) * diff_31);
  c_30.xyz = tmpvar_33;
  c_30.w = tmpvar_8;
  c_29.w = c_30.w;
  mediump vec3 tmpvar_34;
  tmpvar_34 = (c_30.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_28.w) * tmpvar_28.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_29.xyz = tmpvar_34;
  lowp vec4 color_35;
  color_35.xyz = (c_29.xyz * tmpvar_8);
  color_35.w = 1.0;
  c_4.xyz = color_35.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = (unity_World2Shadow[0] * cse_12);
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_12.xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float tmpvar_22;
  mediump float dist_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (float((dist_23 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_22 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_26;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_22;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_5;
  mediump vec4 realtimeDirTex_28;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
  realtimeDirTex_28 = tmpvar_31;
  lowp vec4 dirTex_32;
  dirTex_32 = realtimeDirTex_28;
  lowp vec3 y_33;
  y_33 = (dirTex_32.xyz - 0.5);
  tmpvar_2 = tmpvar_29;
  lowp vec4 c_34;
  lowp vec4 c_35;
  lowp float diff_36;
  mediump float tmpvar_37;
  tmpvar_37 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_36 = tmpvar_37;
  mediump vec3 tmpvar_38;
  tmpvar_38 = ((mixedDiffuse_10.xyz * tmpvar_29) * diff_36);
  c_35.xyz = tmpvar_38;
  c_35.w = tmpvar_8;
  c_34.w = c_35.w;
  mediump vec3 tmpvar_39;
  tmpvar_39 = (c_35.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_30.w) * tmpvar_30.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_27, y_33) + 0.5))
   / dirTex_32.w)));
  c_34.xyz = tmpvar_39;
  lowp vec4 color_40;
  color_40.xyz = (c_34.xyz * tmpvar_8);
  color_40.w = 1.0;
  c_4.xyz = color_40.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  lowp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = worldNormal_1;
  mediump vec4 normal_12;
  normal_12 = tmpvar_11;
  mediump vec3 x2_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_12.xyzz * normal_12.yzzx);
  x2_13.x = dot (unity_SHBr, tmpvar_14);
  x2_13.y = dot (unity_SHBg, tmpvar_14);
  x2_13.z = dot (unity_SHBb, tmpvar_14);
  highp vec4 tmpvar_15;
  highp vec4 cse_16;
  cse_16 = (_Object2World * _glesVertex);
  tmpvar_15 = (unity_World2Shadow[0] * cse_16);
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_16.xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD5 = (x2_13 + (unity_SHC.xyz * (
    (normal_12.x * normal_12.x)
   - 
    (normal_12.y * normal_12.y)
  )));
  xlv_TEXCOORD6 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float shadow_22;
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_24;
  tmpvar_24 = (_LightShadowData.x + (tmpvar_23 * (1.0 - _LightShadowData.x)));
  shadow_22 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_25;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_22;
  mediump vec3 normalWorld_26;
  normalWorld_26 = tmpvar_5;
  mediump vec3 tmpvar_27;
  mediump vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = normalWorld_26;
  mediump vec3 x1_29;
  x1_29.x = dot (unity_SHAr, tmpvar_28);
  x1_29.y = dot (unity_SHAg, tmpvar_28);
  x1_29.z = dot (unity_SHAb, tmpvar_28);
  tmpvar_27 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_27;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_32 = tmpvar_33;
  mediump vec3 tmpvar_34;
  tmpvar_34 = ((mixedDiffuse_10.xyz * tmpvar_27) * diff_32);
  c_31.xyz = tmpvar_34;
  c_31.w = tmpvar_8;
  c_30.w = c_31.w;
  mediump vec3 tmpvar_35;
  tmpvar_35 = (c_31.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD5 + x1_29)));
  c_30.xyz = tmpvar_35;
  lowp vec4 color_36;
  color_36.xyz = (c_30.xyz * tmpvar_8);
  color_36.w = 1.0;
  c_4.xyz = color_36.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = (unity_World2Shadow[0] * cse_12);
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_12.xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float shadow_22;
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_24;
  tmpvar_24 = (_LightShadowData.x + (tmpvar_23 * (1.0 - _LightShadowData.x)));
  shadow_22 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_25;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_22;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_28;
  lowp vec4 c_29;
  lowp float diff_30;
  mediump float tmpvar_31;
  tmpvar_31 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_30 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((mixedDiffuse_10.xyz * tmpvar_26) * diff_30);
  c_29.xyz = tmpvar_32;
  c_29.w = tmpvar_8;
  c_28.w = c_29.w;
  mediump vec3 tmpvar_33;
  tmpvar_33 = (c_29.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_27.w) * tmpvar_27.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_28.xyz = tmpvar_33;
  lowp vec4 color_34;
  color_34.xyz = (c_28.xyz * tmpvar_8);
  color_34.w = 1.0;
  c_4.xyz = color_34.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = (unity_World2Shadow[0] * cse_12);
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_12.xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float shadow_22;
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_24;
  tmpvar_24 = (_LightShadowData.x + (tmpvar_23 * (1.0 - _LightShadowData.x)));
  shadow_22 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_25;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_22;
  mediump vec3 normalWorld_26;
  normalWorld_26 = tmpvar_5;
  mediump vec4 realtimeDirTex_27;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
  realtimeDirTex_27 = tmpvar_30;
  lowp vec4 dirTex_31;
  dirTex_31 = realtimeDirTex_27;
  lowp vec3 y_32;
  y_32 = (dirTex_31.xyz - 0.5);
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  mediump vec3 tmpvar_37;
  tmpvar_37 = ((mixedDiffuse_10.xyz * tmpvar_28) * diff_35);
  c_34.xyz = tmpvar_37;
  c_34.w = tmpvar_8;
  c_33.w = c_34.w;
  mediump vec3 tmpvar_38;
  tmpvar_38 = (c_34.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_29.w) * tmpvar_29.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_26, y_32) + 0.5))
   / dirTex_31.w)));
  c_33.xyz = tmpvar_38;
  lowp vec4 color_39;
  color_39.xyz = (c_33.xyz * tmpvar_8);
  color_39.w = 1.0;
  c_4.xyz = color_39.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
varying lowp vec3 xlv_TEXCOORD9;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * _glesNormal.x)
   + 
    (v_15.xyz * _glesNormal.y)
  ) + (v_16.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize((tmpvar_18 * _glesTANGENT.xyz));
  worldTangent_2 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * _glesTANGENT.w);
  worldBinormal_1 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.x;
  tmpvar_22.y = worldBinormal_1.x;
  tmpvar_22.z = worldNormal_3.x;
  tmpvar_22.w = tmpvar_12.x;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.xyz;
  tmpvar_9 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.y;
  tmpvar_24.y = worldBinormal_1.y;
  tmpvar_24.z = worldNormal_3.y;
  tmpvar_24.w = tmpvar_12.y;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.xyz;
  tmpvar_10 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.x = worldTangent_2.z;
  tmpvar_26.y = worldBinormal_1.z;
  tmpvar_26.z = worldNormal_3.z;
  tmpvar_26.w = tmpvar_12.z;
  highp vec3 tmpvar_27;
  tmpvar_27 = tmpvar_26.xyz;
  tmpvar_11 = tmpvar_27;
  tmpvar_6 = worldNormal_3;
  tmpvar_7.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_World2Shadow[0] * cse_13);
  tmpvar_8 = tmpvar_28;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_12;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
  xlv_TEXCOORD7 = tmpvar_9;
  xlv_TEXCOORD8 = tmpvar_10;
  xlv_TEXCOORD9 = tmpvar_11;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_5 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_9;
  tmpvar_9 = (splat_control_5 / (tmpvar_8 + 0.001));
  splat_control_5 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_9.x * tmpvar_10);
  mixedDiffuse_6 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_13;
  tmpvar_13 = (mixedDiffuse_6 + (tmpvar_9.y * tmpvar_12));
  mixedDiffuse_6 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (mixedDiffuse_6 + (tmpvar_9.z * tmpvar_14));
  mixedDiffuse_6 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_6 + (tmpvar_9.w * tmpvar_16));
  mixedDiffuse_6 = tmpvar_17;
  tmpvar_4 = tmpvar_8;
  lowp float shadow_18;
  lowp float tmpvar_19;
  tmpvar_19 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_18 = tmpvar_20;
  tmpvar_1 = shadow_18;
  mediump vec3 normalWorld_21;
  normalWorld_21 = tmpvar_3;
  mediump vec3 tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (unity_Lightmap, xlv_TEXCOORD5.xy);
  mediump vec3 tmpvar_24;
  tmpvar_24 = (2.0 * tmpvar_23.xyz);
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (unity_LightmapInd, xlv_TEXCOORD5.xy);
  lowp vec3 y_26;
  y_26 = (tmpvar_25.xyz - 0.5);
  tmpvar_22 = ((tmpvar_24 * (
    dot (normalWorld_21, y_26)
   + 0.5)) / tmpvar_25.w);
  tmpvar_22 = max (min (tmpvar_22, (tmpvar_23.xyz * tmpvar_1)), (tmpvar_22 * tmpvar_1));
  lowp vec4 c_27;
  lowp vec4 c_28;
  c_28.xyz = vec3(0.0, 0.0, 0.0);
  c_28.w = tmpvar_4;
  c_27.w = c_28.w;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (mixedDiffuse_6.xyz * tmpvar_22);
  c_27.xyz = tmpvar_29;
  lowp vec4 color_30;
  color_30.xyz = (c_27.xyz * tmpvar_4);
  color_30.w = 1.0;
  c_2.xyz = color_30.xyz;
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
varying lowp vec3 xlv_TEXCOORD9;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * _glesNormal.x)
   + 
    (v_15.xyz * _glesNormal.y)
  ) + (v_16.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize((tmpvar_18 * _glesTANGENT.xyz));
  worldTangent_2 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * _glesTANGENT.w);
  worldBinormal_1 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.x;
  tmpvar_22.y = worldBinormal_1.x;
  tmpvar_22.z = worldNormal_3.x;
  tmpvar_22.w = tmpvar_12.x;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.xyz;
  tmpvar_9 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.y;
  tmpvar_24.y = worldBinormal_1.y;
  tmpvar_24.z = worldNormal_3.y;
  tmpvar_24.w = tmpvar_12.y;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.xyz;
  tmpvar_10 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.x = worldTangent_2.z;
  tmpvar_26.y = worldBinormal_1.z;
  tmpvar_26.z = worldNormal_3.z;
  tmpvar_26.w = tmpvar_12.z;
  highp vec3 tmpvar_27;
  tmpvar_27 = tmpvar_26.xyz;
  tmpvar_11 = tmpvar_27;
  tmpvar_6 = worldNormal_3;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_7.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_World2Shadow[0] * cse_13);
  tmpvar_8 = tmpvar_28;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_12;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
  xlv_TEXCOORD7 = tmpvar_9;
  xlv_TEXCOORD8 = tmpvar_10;
  xlv_TEXCOORD9 = tmpvar_11;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_5 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_9;
  tmpvar_9 = (splat_control_5 / (tmpvar_8 + 0.001));
  splat_control_5 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_9.x * tmpvar_10);
  mixedDiffuse_6 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_13;
  tmpvar_13 = (mixedDiffuse_6 + (tmpvar_9.y * tmpvar_12));
  mixedDiffuse_6 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (mixedDiffuse_6 + (tmpvar_9.z * tmpvar_14));
  mixedDiffuse_6 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_6 + (tmpvar_9.w * tmpvar_16));
  mixedDiffuse_6 = tmpvar_17;
  tmpvar_4 = tmpvar_8;
  lowp float shadow_18;
  lowp float tmpvar_19;
  tmpvar_19 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_18 = tmpvar_20;
  tmpvar_1 = shadow_18;
  mediump vec3 normalWorld_21;
  normalWorld_21 = tmpvar_3;
  mediump vec4 realtimeDirTex_22;
  mediump vec3 tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD5.xy);
  mediump vec3 tmpvar_25;
  tmpvar_25 = (2.0 * tmpvar_24.xyz);
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (unity_LightmapInd, xlv_TEXCOORD5.xy);
  lowp vec3 y_27;
  y_27 = (tmpvar_26.xyz - 0.5);
  tmpvar_23 = ((tmpvar_25 * (
    dot (normalWorld_21, y_27)
   + 0.5)) / tmpvar_26.w);
  tmpvar_23 = max (min (tmpvar_23, (tmpvar_24.xyz * tmpvar_1)), (tmpvar_23 * tmpvar_1));
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD5.zw);
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD5.zw);
  realtimeDirTex_22 = tmpvar_29;
  lowp vec4 dirTex_30;
  dirTex_30 = realtimeDirTex_22;
  lowp vec3 y_31;
  y_31 = (dirTex_30.xyz - 0.5);
  tmpvar_23 = (tmpvar_23 + ((
    pow (((unity_DynamicLightmap_HDR.x * tmpvar_28.w) * tmpvar_28.xyz), unity_DynamicLightmap_HDR.yyy)
   * 
    (dot (normalWorld_21, y_31) + 0.5)
  ) / dirTex_30.w));
  lowp vec4 c_32;
  lowp vec4 c_33;
  c_33.xyz = vec3(0.0, 0.0, 0.0);
  c_33.w = tmpvar_4;
  c_32.w = c_33.w;
  mediump vec3 tmpvar_34;
  tmpvar_34 = (mixedDiffuse_6.xyz * tmpvar_23);
  c_32.xyz = tmpvar_34;
  lowp vec4 color_35;
  color_35.xyz = (c_32.xyz * tmpvar_4);
  color_35.w = 1.0;
  c_2.xyz = color_35.xyz;
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 cse_8;
  cse_8 = (_Object2World * _glesVertex);
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_12;
  tmpvar_4 = worldNormal_1;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = worldNormal_1;
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  mediump vec3 x2_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = (normal_15.xyzz * normal_15.yzzx);
  x2_16.x = dot (unity_SHBr, tmpvar_17);
  x2_16.y = dot (unity_SHBg, tmpvar_17);
  x2_16.z = dot (unity_SHBb, tmpvar_17);
  tmpvar_14 = (x2_16 + (unity_SHC.xyz * (
    (normal_15.x * normal_15.x)
   - 
    (normal_15.y * normal_15.y)
  )));
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 normal_23;
  normal_23 = worldNormal_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - cse_8.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - cse_8.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - cse_8.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * normal_23.x) + (tmpvar_25 * normal_23.y)) + (tmpvar_26 * normal_23.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_14 + ((
    ((lightColor0_18 * tmpvar_28.x) + (lightColor1_19 * tmpvar_28.y))
   + 
    (lightColor2_20 * tmpvar_28.z)
  ) + (lightColor3_21 * tmpvar_28.w)));
  tmpvar_5 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_8);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_8.xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD5 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float shadow_22;
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_24;
  tmpvar_24 = (_LightShadowData.x + (tmpvar_23 * (1.0 - _LightShadowData.x)));
  shadow_22 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_25;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_22;
  mediump vec3 normalWorld_26;
  normalWorld_26 = tmpvar_5;
  mediump vec3 tmpvar_27;
  mediump vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = normalWorld_26;
  mediump vec3 x1_29;
  x1_29.x = dot (unity_SHAr, tmpvar_28);
  x1_29.y = dot (unity_SHAg, tmpvar_28);
  x1_29.z = dot (unity_SHAb, tmpvar_28);
  tmpvar_27 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_27;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_32 = tmpvar_33;
  mediump vec3 tmpvar_34;
  tmpvar_34 = ((mixedDiffuse_10.xyz * tmpvar_27) * diff_32);
  c_31.xyz = tmpvar_34;
  c_31.w = tmpvar_8;
  c_30.w = c_31.w;
  mediump vec3 tmpvar_35;
  tmpvar_35 = (c_31.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD5 + x1_29)));
  c_30.xyz = tmpvar_35;
  lowp vec4 color_36;
  color_36.xyz = (c_30.xyz * tmpvar_8);
  color_36.w = 1.0;
  c_4.xyz = color_36.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = (unity_World2Shadow[0] * cse_12);
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_12.xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float shadow_22;
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_24;
  tmpvar_24 = (_LightShadowData.x + (tmpvar_23 * (1.0 - _LightShadowData.x)));
  shadow_22 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_25;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_22;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_28;
  lowp vec4 c_29;
  lowp float diff_30;
  mediump float tmpvar_31;
  tmpvar_31 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_30 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((mixedDiffuse_10.xyz * tmpvar_26) * diff_30);
  c_29.xyz = tmpvar_32;
  c_29.w = tmpvar_8;
  c_28.w = c_29.w;
  mediump vec3 tmpvar_33;
  tmpvar_33 = (c_29.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_27.w) * tmpvar_27.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_28.xyz = tmpvar_33;
  lowp vec4 color_34;
  color_34.xyz = (c_28.xyz * tmpvar_8);
  color_34.w = 1.0;
  c_4.xyz = color_34.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = (unity_World2Shadow[0] * cse_12);
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_12.xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float shadow_22;
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_24;
  tmpvar_24 = (_LightShadowData.x + (tmpvar_23 * (1.0 - _LightShadowData.x)));
  shadow_22 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_25;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_22;
  mediump vec3 normalWorld_26;
  normalWorld_26 = tmpvar_5;
  mediump vec4 realtimeDirTex_27;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
  realtimeDirTex_27 = tmpvar_30;
  lowp vec4 dirTex_31;
  dirTex_31 = realtimeDirTex_27;
  lowp vec3 y_32;
  y_32 = (dirTex_31.xyz - 0.5);
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  mediump vec3 tmpvar_37;
  tmpvar_37 = ((mixedDiffuse_10.xyz * tmpvar_28) * diff_35);
  c_34.xyz = tmpvar_37;
  c_34.w = tmpvar_8;
  c_33.w = c_34.w;
  mediump vec3 tmpvar_38;
  tmpvar_38 = (c_34.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_29.w) * tmpvar_29.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_26, y_32) + 0.5))
   / dirTex_31.w)));
  c_33.xyz = tmpvar_38;
  lowp vec4 color_39;
  color_39.xyz = (c_33.xyz * tmpvar_8);
  color_39.w = 1.0;
  c_4.xyz = color_39.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 cse_7;
  cse_7 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_7.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_8;
  v_8.x = _World2Object[0].x;
  v_8.y = _World2Object[1].x;
  v_8.z = _World2Object[2].x;
  v_8.w = _World2Object[3].x;
  highp vec4 v_9;
  v_9.x = _World2Object[0].y;
  v_9.y = _World2Object[1].y;
  v_9.z = _World2Object[2].y;
  v_9.w = _World2Object[3].y;
  highp vec4 v_10;
  v_10.x = _World2Object[0].z;
  v_10.y = _World2Object[1].z;
  v_10.z = _World2Object[2].z;
  v_10.w = _World2Object[3].z;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize(((
    (v_8.xyz * _glesNormal.x)
   + 
    (v_9.xyz * _glesNormal.y)
  ) + (v_10.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_11;
  tmpvar_4 = worldNormal_1;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = worldNormal_1;
  mediump vec4 normal_13;
  normal_13 = tmpvar_12;
  mediump vec3 x2_14;
  mediump vec4 tmpvar_15;
  tmpvar_15 = (normal_13.xyzz * normal_13.yzzx);
  x2_14.x = dot (unity_SHBr, tmpvar_15);
  x2_14.y = dot (unity_SHBg, tmpvar_15);
  x2_14.z = dot (unity_SHBb, tmpvar_15);
  gl_Position = cse_7;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD5 = (x2_14 + (unity_SHC.xyz * (
    (normal_13.x * normal_13.x)
   - 
    (normal_13.y * normal_13.y)
  )));
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_22;
  normalWorld_22 = tmpvar_4;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normalWorld_22;
  mediump vec3 x1_24;
  x1_24.x = dot (unity_SHAr, tmpvar_23);
  x1_24.y = dot (unity_SHAg, tmpvar_23);
  x1_24.z = dot (unity_SHAb, tmpvar_23);
  lowp vec4 c_25;
  lowp vec4 c_26;
  lowp float diff_27;
  mediump float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_27 = tmpvar_28;
  mediump vec3 tmpvar_29;
  tmpvar_29 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_27);
  c_26.xyz = tmpvar_29;
  c_26.w = tmpvar_7;
  c_25.w = c_26.w;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (c_26.xyz + (mixedDiffuse_9.xyz * (xlv_TEXCOORD5 + x1_24)));
  c_25.xyz = tmpvar_30;
  lowp vec4 color_31;
  color_31.xyz = (c_25.xyz * tmpvar_7);
  color_31.w = 1.0;
  lowp vec4 color_32;
  color_32.w = color_31.w;
  highp float tmpvar_33;
  tmpvar_33 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_32.xyz = mix (vec3(0.0, 0.0, 0.0), color_31.xyz, vec3(tmpvar_33));
  c_3.xyz = color_32.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 cse_7;
  cse_7 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_7.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_8;
  v_8.x = _World2Object[0].x;
  v_8.y = _World2Object[1].x;
  v_8.z = _World2Object[2].x;
  v_8.w = _World2Object[3].x;
  highp vec4 v_9;
  v_9.x = _World2Object[0].y;
  v_9.y = _World2Object[1].y;
  v_9.z = _World2Object[2].y;
  v_9.w = _World2Object[3].y;
  highp vec4 v_10;
  v_10.x = _World2Object[0].z;
  v_10.y = _World2Object[1].z;
  v_10.z = _World2Object[2].z;
  v_10.w = _World2Object[3].z;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize(((
    (v_8.xyz * _glesNormal.x)
   + 
    (v_9.xyz * _glesNormal.y)
  ) + (v_10.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_11;
  tmpvar_4 = worldNormal_1;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = cse_7;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 c_23;
  lowp vec4 c_24;
  lowp float diff_25;
  mediump float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_25 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_25);
  c_24.xyz = tmpvar_27;
  c_24.w = tmpvar_7;
  c_23.w = c_24.w;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (c_24.xyz + (mixedDiffuse_9.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_22.w) * tmpvar_22.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_23.xyz = tmpvar_28;
  lowp vec4 color_29;
  color_29.xyz = (c_23.xyz * tmpvar_7);
  color_29.w = 1.0;
  lowp vec4 color_30;
  color_30.w = color_29.w;
  highp float tmpvar_31;
  tmpvar_31 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_30.xyz = mix (vec3(0.0, 0.0, 0.0), color_29.xyz, vec3(tmpvar_31));
  c_3.xyz = color_30.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 cse_7;
  cse_7 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_7.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_8;
  v_8.x = _World2Object[0].x;
  v_8.y = _World2Object[1].x;
  v_8.z = _World2Object[2].x;
  v_8.w = _World2Object[3].x;
  highp vec4 v_9;
  v_9.x = _World2Object[0].y;
  v_9.y = _World2Object[1].y;
  v_9.z = _World2Object[2].y;
  v_9.w = _World2Object[3].y;
  highp vec4 v_10;
  v_10.x = _World2Object[0].z;
  v_10.y = _World2Object[1].z;
  v_10.z = _World2Object[2].z;
  v_10.w = _World2Object[3].z;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize(((
    (v_8.xyz * _glesNormal.x)
   + 
    (v_9.xyz * _glesNormal.y)
  ) + (v_10.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_11;
  tmpvar_4 = worldNormal_1;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = cse_7;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_22;
  normalWorld_22 = tmpvar_4;
  mediump vec4 realtimeDirTex_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
  realtimeDirTex_23 = tmpvar_25;
  lowp vec4 dirTex_26;
  dirTex_26 = realtimeDirTex_23;
  lowp vec3 y_27;
  y_27 = (dirTex_26.xyz - 0.5);
  lowp vec4 c_28;
  lowp vec4 c_29;
  lowp float diff_30;
  mediump float tmpvar_31;
  tmpvar_31 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_30 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_30);
  c_29.xyz = tmpvar_32;
  c_29.w = tmpvar_7;
  c_28.w = c_29.w;
  mediump vec3 tmpvar_33;
  tmpvar_33 = (c_29.xyz + (mixedDiffuse_9.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_24.w) * tmpvar_24.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_22, y_27) + 0.5))
   / dirTex_26.w)));
  c_28.xyz = tmpvar_33;
  lowp vec4 color_34;
  color_34.xyz = (c_28.xyz * tmpvar_7);
  color_34.w = 1.0;
  lowp vec4 color_35;
  color_35.w = color_34.w;
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_35.xyz = mix (vec3(0.0, 0.0, 0.0), color_34.xyz, vec3(tmpvar_36));
  c_3.xyz = color_35.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
varying lowp vec3 xlv_TEXCOORD9;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  highp vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_7.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_7.z = exp2(-((unity_FogParams.y * cse_12.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_13;
  tmpvar_13 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * _glesNormal.x)
   + 
    (v_15.xyz * _glesNormal.y)
  ) + (v_16.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize((tmpvar_18 * _glesTANGENT.xyz));
  worldTangent_2 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * _glesTANGENT.w);
  worldBinormal_1 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.x;
  tmpvar_22.y = worldBinormal_1.x;
  tmpvar_22.z = worldNormal_3.x;
  tmpvar_22.w = tmpvar_13.x;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.xyz;
  tmpvar_9 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.y;
  tmpvar_24.y = worldBinormal_1.y;
  tmpvar_24.z = worldNormal_3.y;
  tmpvar_24.w = tmpvar_13.y;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.xyz;
  tmpvar_10 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.x = worldTangent_2.z;
  tmpvar_26.y = worldBinormal_1.z;
  tmpvar_26.z = worldNormal_3.z;
  tmpvar_26.w = tmpvar_13.z;
  highp vec3 tmpvar_27;
  tmpvar_27 = tmpvar_26.xyz;
  tmpvar_11 = tmpvar_27;
  tmpvar_6 = worldNormal_3;
  tmpvar_8.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = cse_12;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_13;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD5 = tmpvar_8;
  xlv_TEXCOORD7 = tmpvar_9;
  xlv_TEXCOORD8 = tmpvar_10;
  xlv_TEXCOORD9 = tmpvar_11;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp float tmpvar_3;
  mediump vec4 splat_control_4;
  lowp vec4 mixedDiffuse_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_4 = tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = dot (splat_control_4, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_8;
  tmpvar_8 = (splat_control_4 / (tmpvar_7 + 0.001));
  splat_control_4 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = (tmpvar_8.x * tmpvar_9);
  mixedDiffuse_5 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_12;
  tmpvar_12 = (mixedDiffuse_5 + (tmpvar_8.y * tmpvar_11));
  mixedDiffuse_5 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (mixedDiffuse_5 + (tmpvar_8.z * tmpvar_13));
  mixedDiffuse_5 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_5 + (tmpvar_8.w * tmpvar_15));
  mixedDiffuse_5 = tmpvar_16;
  tmpvar_3 = tmpvar_7;
  mediump vec3 normalWorld_17;
  normalWorld_17 = tmpvar_2;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (unity_Lightmap, xlv_TEXCOORD5.xy);
  mediump vec3 tmpvar_19;
  tmpvar_19 = (2.0 * tmpvar_18.xyz);
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (unity_LightmapInd, xlv_TEXCOORD5.xy);
  lowp vec3 y_21;
  y_21 = (tmpvar_20.xyz - 0.5);
  lowp vec4 c_22;
  lowp vec4 c_23;
  c_23.xyz = vec3(0.0, 0.0, 0.0);
  c_23.w = tmpvar_3;
  c_22.w = c_23.w;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (mixedDiffuse_5.xyz * ((tmpvar_19 * 
    (dot (normalWorld_17, y_21) + 0.5)
  ) / tmpvar_20.w));
  c_22.xyz = tmpvar_24;
  lowp vec4 color_25;
  color_25.xyz = (c_22.xyz * tmpvar_3);
  color_25.w = 1.0;
  lowp vec4 color_26;
  color_26.w = color_25.w;
  highp float tmpvar_27;
  tmpvar_27 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_26.xyz = mix (vec3(0.0, 0.0, 0.0), color_25.xyz, vec3(tmpvar_27));
  c_1.xyz = color_26.xyz;
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
varying lowp vec3 xlv_TEXCOORD9;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  highp vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_7.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_7.z = exp2(-((unity_FogParams.y * cse_12.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_13;
  tmpvar_13 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * _glesNormal.x)
   + 
    (v_15.xyz * _glesNormal.y)
  ) + (v_16.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize((tmpvar_18 * _glesTANGENT.xyz));
  worldTangent_2 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * _glesTANGENT.w);
  worldBinormal_1 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.x;
  tmpvar_22.y = worldBinormal_1.x;
  tmpvar_22.z = worldNormal_3.x;
  tmpvar_22.w = tmpvar_13.x;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.xyz;
  tmpvar_9 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.y;
  tmpvar_24.y = worldBinormal_1.y;
  tmpvar_24.z = worldNormal_3.y;
  tmpvar_24.w = tmpvar_13.y;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.xyz;
  tmpvar_10 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.x = worldTangent_2.z;
  tmpvar_26.y = worldBinormal_1.z;
  tmpvar_26.z = worldNormal_3.z;
  tmpvar_26.w = tmpvar_13.z;
  highp vec3 tmpvar_27;
  tmpvar_27 = tmpvar_26.xyz;
  tmpvar_11 = tmpvar_27;
  tmpvar_6 = worldNormal_3;
  tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_8.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = cse_12;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_13;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD5 = tmpvar_8;
  xlv_TEXCOORD7 = tmpvar_9;
  xlv_TEXCOORD8 = tmpvar_10;
  xlv_TEXCOORD9 = tmpvar_11;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp float tmpvar_3;
  mediump vec4 splat_control_4;
  lowp vec4 mixedDiffuse_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_4 = tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = dot (splat_control_4, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_8;
  tmpvar_8 = (splat_control_4 / (tmpvar_7 + 0.001));
  splat_control_4 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = (tmpvar_8.x * tmpvar_9);
  mixedDiffuse_5 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_12;
  tmpvar_12 = (mixedDiffuse_5 + (tmpvar_8.y * tmpvar_11));
  mixedDiffuse_5 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (mixedDiffuse_5 + (tmpvar_8.z * tmpvar_13));
  mixedDiffuse_5 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_5 + (tmpvar_8.w * tmpvar_15));
  mixedDiffuse_5 = tmpvar_16;
  tmpvar_3 = tmpvar_7;
  mediump vec3 normalWorld_17;
  normalWorld_17 = tmpvar_2;
  mediump vec4 realtimeDirTex_18;
  mediump vec3 tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (unity_Lightmap, xlv_TEXCOORD5.xy);
  mediump vec3 tmpvar_21;
  tmpvar_21 = (2.0 * tmpvar_20.xyz);
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_LightmapInd, xlv_TEXCOORD5.xy);
  lowp vec3 y_23;
  y_23 = (tmpvar_22.xyz - 0.5);
  tmpvar_19 = ((tmpvar_21 * (
    dot (normalWorld_17, y_23)
   + 0.5)) / tmpvar_22.w);
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD5.zw);
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD5.zw);
  realtimeDirTex_18 = tmpvar_25;
  lowp vec4 dirTex_26;
  dirTex_26 = realtimeDirTex_18;
  lowp vec3 y_27;
  y_27 = (dirTex_26.xyz - 0.5);
  tmpvar_19 = (tmpvar_19 + ((
    pow (((unity_DynamicLightmap_HDR.x * tmpvar_24.w) * tmpvar_24.xyz), unity_DynamicLightmap_HDR.yyy)
   * 
    (dot (normalWorld_17, y_27) + 0.5)
  ) / dirTex_26.w));
  lowp vec4 c_28;
  lowp vec4 c_29;
  c_29.xyz = vec3(0.0, 0.0, 0.0);
  c_29.w = tmpvar_3;
  c_28.w = c_29.w;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (mixedDiffuse_5.xyz * tmpvar_19);
  c_28.xyz = tmpvar_30;
  lowp vec4 color_31;
  color_31.xyz = (c_28.xyz * tmpvar_3);
  color_31.w = 1.0;
  lowp vec4 color_32;
  color_32.w = color_31.w;
  highp float tmpvar_33;
  tmpvar_33 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_32.xyz = mix (vec3(0.0, 0.0, 0.0), color_31.xyz, vec3(tmpvar_33));
  c_1.xyz = color_32.xyz;
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 cse_8;
  cse_8 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_8.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_12;
  tmpvar_4 = worldNormal_1;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = worldNormal_1;
  mediump vec4 normal_14;
  normal_14 = tmpvar_13;
  mediump vec3 x2_15;
  mediump vec4 tmpvar_16;
  tmpvar_16 = (normal_14.xyzz * normal_14.yzzx);
  x2_15.x = dot (unity_SHBr, tmpvar_16);
  x2_15.y = dot (unity_SHBg, tmpvar_16);
  x2_15.z = dot (unity_SHBb, tmpvar_16);
  highp vec4 tmpvar_17;
  highp vec4 cse_18;
  cse_18 = (_Object2World * _glesVertex);
  tmpvar_17 = (unity_World2Shadow[0] * cse_18);
  tmpvar_6 = tmpvar_17;
  gl_Position = cse_8;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_18.xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD5 = (x2_15 + (unity_SHC.xyz * (
    (normal_14.x * normal_14.x)
   - 
    (normal_14.y * normal_14.y)
  )));
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float tmpvar_22;
  mediump float dist_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (float((dist_23 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_22 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_26;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_22;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_5;
  mediump vec3 tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x1_30;
  x1_30.x = dot (unity_SHAr, tmpvar_29);
  x1_30.y = dot (unity_SHAg, tmpvar_29);
  x1_30.z = dot (unity_SHAb, tmpvar_29);
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_31;
  lowp vec4 c_32;
  lowp float diff_33;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_33 = tmpvar_34;
  mediump vec3 tmpvar_35;
  tmpvar_35 = ((mixedDiffuse_10.xyz * tmpvar_28) * diff_33);
  c_32.xyz = tmpvar_35;
  c_32.w = tmpvar_8;
  c_31.w = c_32.w;
  mediump vec3 tmpvar_36;
  tmpvar_36 = (c_32.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD5 + x1_30)));
  c_31.xyz = tmpvar_36;
  lowp vec4 color_37;
  color_37.xyz = (c_31.xyz * tmpvar_8);
  color_37.w = 1.0;
  lowp vec4 color_38;
  color_38.w = color_37.w;
  highp float tmpvar_39;
  tmpvar_39 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_38.xyz = mix (vec3(0.0, 0.0, 0.0), color_37.xyz, vec3(tmpvar_39));
  c_4.xyz = color_38.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 cse_8;
  cse_8 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_8.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_12;
  tmpvar_4 = worldNormal_1;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_13;
  gl_Position = cse_8;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_14.xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float tmpvar_22;
  mediump float dist_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (float((dist_23 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_22 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_26;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_22;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  tmpvar_2 = tmpvar_27;
  lowp vec4 c_29;
  lowp vec4 c_30;
  lowp float diff_31;
  mediump float tmpvar_32;
  tmpvar_32 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_31 = tmpvar_32;
  mediump vec3 tmpvar_33;
  tmpvar_33 = ((mixedDiffuse_10.xyz * tmpvar_27) * diff_31);
  c_30.xyz = tmpvar_33;
  c_30.w = tmpvar_8;
  c_29.w = c_30.w;
  mediump vec3 tmpvar_34;
  tmpvar_34 = (c_30.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_28.w) * tmpvar_28.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_29.xyz = tmpvar_34;
  lowp vec4 color_35;
  color_35.xyz = (c_29.xyz * tmpvar_8);
  color_35.w = 1.0;
  lowp vec4 color_36;
  color_36.w = color_35.w;
  highp float tmpvar_37;
  tmpvar_37 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_36.xyz = mix (vec3(0.0, 0.0, 0.0), color_35.xyz, vec3(tmpvar_37));
  c_4.xyz = color_36.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 cse_8;
  cse_8 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_8.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_12;
  tmpvar_4 = worldNormal_1;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_13;
  gl_Position = cse_8;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_14.xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float tmpvar_22;
  mediump float dist_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (float((dist_23 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_22 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_26;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_22;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_5;
  mediump vec4 realtimeDirTex_28;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
  realtimeDirTex_28 = tmpvar_31;
  lowp vec4 dirTex_32;
  dirTex_32 = realtimeDirTex_28;
  lowp vec3 y_33;
  y_33 = (dirTex_32.xyz - 0.5);
  tmpvar_2 = tmpvar_29;
  lowp vec4 c_34;
  lowp vec4 c_35;
  lowp float diff_36;
  mediump float tmpvar_37;
  tmpvar_37 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_36 = tmpvar_37;
  mediump vec3 tmpvar_38;
  tmpvar_38 = ((mixedDiffuse_10.xyz * tmpvar_29) * diff_36);
  c_35.xyz = tmpvar_38;
  c_35.w = tmpvar_8;
  c_34.w = c_35.w;
  mediump vec3 tmpvar_39;
  tmpvar_39 = (c_35.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_30.w) * tmpvar_30.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_27, y_33) + 0.5))
   / dirTex_32.w)));
  c_34.xyz = tmpvar_39;
  lowp vec4 color_40;
  color_40.xyz = (c_34.xyz * tmpvar_8);
  color_40.w = 1.0;
  lowp vec4 color_41;
  color_41.w = color_40.w;
  highp float tmpvar_42;
  tmpvar_42 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_41.xyz = mix (vec3(0.0, 0.0, 0.0), color_40.xyz, vec3(tmpvar_42));
  c_4.xyz = color_41.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
varying lowp vec3 xlv_TEXCOORD9;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  highp vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_7.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_7.z = exp2(-((unity_FogParams.y * cse_13.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * _glesNormal.x)
   + 
    (v_17.xyz * _glesNormal.y)
  ) + (v_18.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
  worldTangent_2 = tmpvar_21;
  lowp vec3 tmpvar_22;
  tmpvar_22 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * _glesTANGENT.w);
  worldBinormal_1 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.x;
  tmpvar_24.y = worldBinormal_1.x;
  tmpvar_24.z = worldNormal_3.x;
  tmpvar_24.w = tmpvar_14.x;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.xyz;
  tmpvar_10 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.x = worldTangent_2.y;
  tmpvar_26.y = worldBinormal_1.y;
  tmpvar_26.z = worldNormal_3.y;
  tmpvar_26.w = tmpvar_14.y;
  highp vec3 tmpvar_27;
  tmpvar_27 = tmpvar_26.xyz;
  tmpvar_11 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.x = worldTangent_2.z;
  tmpvar_28.y = worldBinormal_1.z;
  tmpvar_28.z = worldNormal_3.z;
  tmpvar_28.w = tmpvar_14.z;
  highp vec3 tmpvar_29;
  tmpvar_29 = tmpvar_28.xyz;
  tmpvar_12 = tmpvar_29;
  tmpvar_6 = worldNormal_3;
  tmpvar_8.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_15);
  tmpvar_9 = tmpvar_30;
  gl_Position = cse_13;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_14;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD5 = tmpvar_8;
  xlv_TEXCOORD6 = tmpvar_9;
  xlv_TEXCOORD7 = tmpvar_10;
  xlv_TEXCOORD8 = tmpvar_11;
  xlv_TEXCOORD9 = tmpvar_12;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_5 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_9;
  tmpvar_9 = (splat_control_5 / (tmpvar_8 + 0.001));
  splat_control_5 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_9.x * tmpvar_10);
  mixedDiffuse_6 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_13;
  tmpvar_13 = (mixedDiffuse_6 + (tmpvar_9.y * tmpvar_12));
  mixedDiffuse_6 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (mixedDiffuse_6 + (tmpvar_9.z * tmpvar_14));
  mixedDiffuse_6 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_6 + (tmpvar_9.w * tmpvar_16));
  mixedDiffuse_6 = tmpvar_17;
  tmpvar_4 = tmpvar_8;
  lowp float tmpvar_18;
  mediump float dist_19;
  lowp float tmpvar_20;
  tmpvar_20 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_19 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (float((dist_19 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_18 = tmpvar_21;
  tmpvar_1 = tmpvar_18;
  mediump vec3 normalWorld_22;
  normalWorld_22 = tmpvar_3;
  mediump vec3 tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD5.xy);
  mediump vec3 tmpvar_25;
  tmpvar_25 = (2.0 * tmpvar_24.xyz);
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (unity_LightmapInd, xlv_TEXCOORD5.xy);
  lowp vec3 y_27;
  y_27 = (tmpvar_26.xyz - 0.5);
  tmpvar_23 = ((tmpvar_25 * (
    dot (normalWorld_22, y_27)
   + 0.5)) / tmpvar_26.w);
  tmpvar_23 = max (min (tmpvar_23, (tmpvar_24.xyz * tmpvar_1)), (tmpvar_23 * tmpvar_1));
  lowp vec4 c_28;
  lowp vec4 c_29;
  c_29.xyz = vec3(0.0, 0.0, 0.0);
  c_29.w = tmpvar_4;
  c_28.w = c_29.w;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (mixedDiffuse_6.xyz * tmpvar_23);
  c_28.xyz = tmpvar_30;
  lowp vec4 color_31;
  color_31.xyz = (c_28.xyz * tmpvar_4);
  color_31.w = 1.0;
  lowp vec4 color_32;
  color_32.w = color_31.w;
  highp float tmpvar_33;
  tmpvar_33 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_32.xyz = mix (vec3(0.0, 0.0, 0.0), color_31.xyz, vec3(tmpvar_33));
  c_2.xyz = color_32.xyz;
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
varying lowp vec3 xlv_TEXCOORD9;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  highp vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_7.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_7.z = exp2(-((unity_FogParams.y * cse_13.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * _glesNormal.x)
   + 
    (v_17.xyz * _glesNormal.y)
  ) + (v_18.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
  worldTangent_2 = tmpvar_21;
  lowp vec3 tmpvar_22;
  tmpvar_22 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * _glesTANGENT.w);
  worldBinormal_1 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.x;
  tmpvar_24.y = worldBinormal_1.x;
  tmpvar_24.z = worldNormal_3.x;
  tmpvar_24.w = tmpvar_14.x;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.xyz;
  tmpvar_10 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.x = worldTangent_2.y;
  tmpvar_26.y = worldBinormal_1.y;
  tmpvar_26.z = worldNormal_3.y;
  tmpvar_26.w = tmpvar_14.y;
  highp vec3 tmpvar_27;
  tmpvar_27 = tmpvar_26.xyz;
  tmpvar_11 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.x = worldTangent_2.z;
  tmpvar_28.y = worldBinormal_1.z;
  tmpvar_28.z = worldNormal_3.z;
  tmpvar_28.w = tmpvar_14.z;
  highp vec3 tmpvar_29;
  tmpvar_29 = tmpvar_28.xyz;
  tmpvar_12 = tmpvar_29;
  tmpvar_6 = worldNormal_3;
  tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_8.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_15);
  tmpvar_9 = tmpvar_30;
  gl_Position = cse_13;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_14;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD5 = tmpvar_8;
  xlv_TEXCOORD6 = tmpvar_9;
  xlv_TEXCOORD7 = tmpvar_10;
  xlv_TEXCOORD8 = tmpvar_11;
  xlv_TEXCOORD9 = tmpvar_12;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_5 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_9;
  tmpvar_9 = (splat_control_5 / (tmpvar_8 + 0.001));
  splat_control_5 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_9.x * tmpvar_10);
  mixedDiffuse_6 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_13;
  tmpvar_13 = (mixedDiffuse_6 + (tmpvar_9.y * tmpvar_12));
  mixedDiffuse_6 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (mixedDiffuse_6 + (tmpvar_9.z * tmpvar_14));
  mixedDiffuse_6 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_6 + (tmpvar_9.w * tmpvar_16));
  mixedDiffuse_6 = tmpvar_17;
  tmpvar_4 = tmpvar_8;
  lowp float tmpvar_18;
  mediump float dist_19;
  lowp float tmpvar_20;
  tmpvar_20 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_19 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (float((dist_19 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_18 = tmpvar_21;
  tmpvar_1 = tmpvar_18;
  mediump vec3 normalWorld_22;
  normalWorld_22 = tmpvar_3;
  mediump vec4 realtimeDirTex_23;
  mediump vec3 tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (unity_Lightmap, xlv_TEXCOORD5.xy);
  mediump vec3 tmpvar_26;
  tmpvar_26 = (2.0 * tmpvar_25.xyz);
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (unity_LightmapInd, xlv_TEXCOORD5.xy);
  lowp vec3 y_28;
  y_28 = (tmpvar_27.xyz - 0.5);
  tmpvar_24 = ((tmpvar_26 * (
    dot (normalWorld_22, y_28)
   + 0.5)) / tmpvar_27.w);
  tmpvar_24 = max (min (tmpvar_24, (tmpvar_25.xyz * tmpvar_1)), (tmpvar_24 * tmpvar_1));
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD5.zw);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD5.zw);
  realtimeDirTex_23 = tmpvar_30;
  lowp vec4 dirTex_31;
  dirTex_31 = realtimeDirTex_23;
  lowp vec3 y_32;
  y_32 = (dirTex_31.xyz - 0.5);
  tmpvar_24 = (tmpvar_24 + ((
    pow (((unity_DynamicLightmap_HDR.x * tmpvar_29.w) * tmpvar_29.xyz), unity_DynamicLightmap_HDR.yyy)
   * 
    (dot (normalWorld_22, y_32) + 0.5)
  ) / dirTex_31.w));
  lowp vec4 c_33;
  lowp vec4 c_34;
  c_34.xyz = vec3(0.0, 0.0, 0.0);
  c_34.w = tmpvar_4;
  c_33.w = c_34.w;
  mediump vec3 tmpvar_35;
  tmpvar_35 = (mixedDiffuse_6.xyz * tmpvar_24);
  c_33.xyz = tmpvar_35;
  lowp vec4 color_36;
  color_36.xyz = (c_33.xyz * tmpvar_4);
  color_36.w = 1.0;
  lowp vec4 color_37;
  color_37.w = color_36.w;
  highp float tmpvar_38;
  tmpvar_38 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_37.xyz = mix (vec3(0.0, 0.0, 0.0), color_36.xyz, vec3(tmpvar_38));
  c_2.xyz = color_37.xyz;
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 cse_8;
  cse_8 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_8.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  highp vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  highp vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * _glesNormal.x)
   + 
    (v_11.xyz * _glesNormal.y)
  ) + (v_12.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_13;
  tmpvar_4 = worldNormal_1;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = worldNormal_1;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  mediump vec3 x2_17;
  mediump vec4 tmpvar_18;
  tmpvar_18 = (normal_16.xyzz * normal_16.yzzx);
  x2_17.x = dot (unity_SHBr, tmpvar_18);
  x2_17.y = dot (unity_SHBg, tmpvar_18);
  x2_17.z = dot (unity_SHBb, tmpvar_18);
  tmpvar_15 = (x2_17 + (unity_SHC.xyz * (
    (normal_16.x * normal_16.x)
   - 
    (normal_16.y * normal_16.y)
  )));
  highp vec3 lightColor0_19;
  lightColor0_19 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_20;
  lightColor1_20 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_21;
  lightColor2_21 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_22;
  lightColor3_22 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_23;
  lightAttenSq_23 = unity_4LightAtten0;
  highp vec3 normal_24;
  normal_24 = worldNormal_1;
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_28;
  tmpvar_28 = (((tmpvar_25 * tmpvar_25) + (tmpvar_26 * tmpvar_26)) + (tmpvar_27 * tmpvar_27));
  highp vec4 tmpvar_29;
  tmpvar_29 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_25 * normal_24.x) + (tmpvar_26 * normal_24.y)) + (tmpvar_27 * normal_24.z))
   * 
    inversesqrt(tmpvar_28)
  )) * (1.0/((1.0 + 
    (tmpvar_28 * lightAttenSq_23)
  ))));
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_15 + ((
    ((lightColor0_19 * tmpvar_29.x) + (lightColor1_20 * tmpvar_29.y))
   + 
    (lightColor2_21 * tmpvar_29.z)
  ) + (lightColor3_22 * tmpvar_29.w)));
  tmpvar_6 = tmpvar_30;
  gl_Position = cse_8;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_9;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_22;
  normalWorld_22 = tmpvar_4;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normalWorld_22;
  mediump vec3 x1_24;
  x1_24.x = dot (unity_SHAr, tmpvar_23);
  x1_24.y = dot (unity_SHAg, tmpvar_23);
  x1_24.z = dot (unity_SHAb, tmpvar_23);
  lowp vec4 c_25;
  lowp vec4 c_26;
  lowp float diff_27;
  mediump float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_27 = tmpvar_28;
  mediump vec3 tmpvar_29;
  tmpvar_29 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_27);
  c_26.xyz = tmpvar_29;
  c_26.w = tmpvar_7;
  c_25.w = c_26.w;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (c_26.xyz + (mixedDiffuse_9.xyz * (xlv_TEXCOORD5 + x1_24)));
  c_25.xyz = tmpvar_30;
  lowp vec4 color_31;
  color_31.xyz = (c_25.xyz * tmpvar_7);
  color_31.w = 1.0;
  lowp vec4 color_32;
  color_32.w = color_31.w;
  highp float tmpvar_33;
  tmpvar_33 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_32.xyz = mix (vec3(0.0, 0.0, 0.0), color_31.xyz, vec3(tmpvar_33));
  c_3.xyz = color_32.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 cse_7;
  cse_7 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_7.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_8;
  v_8.x = _World2Object[0].x;
  v_8.y = _World2Object[1].x;
  v_8.z = _World2Object[2].x;
  v_8.w = _World2Object[3].x;
  highp vec4 v_9;
  v_9.x = _World2Object[0].y;
  v_9.y = _World2Object[1].y;
  v_9.z = _World2Object[2].y;
  v_9.w = _World2Object[3].y;
  highp vec4 v_10;
  v_10.x = _World2Object[0].z;
  v_10.y = _World2Object[1].z;
  v_10.z = _World2Object[2].z;
  v_10.w = _World2Object[3].z;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize(((
    (v_8.xyz * _glesNormal.x)
   + 
    (v_9.xyz * _glesNormal.y)
  ) + (v_10.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_11;
  tmpvar_4 = worldNormal_1;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = cse_7;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 c_23;
  lowp vec4 c_24;
  lowp float diff_25;
  mediump float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_25 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_25);
  c_24.xyz = tmpvar_27;
  c_24.w = tmpvar_7;
  c_23.w = c_24.w;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (c_24.xyz + (mixedDiffuse_9.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_22.w) * tmpvar_22.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_23.xyz = tmpvar_28;
  lowp vec4 color_29;
  color_29.xyz = (c_23.xyz * tmpvar_7);
  color_29.w = 1.0;
  lowp vec4 color_30;
  color_30.w = color_29.w;
  highp float tmpvar_31;
  tmpvar_31 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_30.xyz = mix (vec3(0.0, 0.0, 0.0), color_29.xyz, vec3(tmpvar_31));
  c_3.xyz = color_30.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 cse_7;
  cse_7 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_7.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_8;
  v_8.x = _World2Object[0].x;
  v_8.y = _World2Object[1].x;
  v_8.z = _World2Object[2].x;
  v_8.w = _World2Object[3].x;
  highp vec4 v_9;
  v_9.x = _World2Object[0].y;
  v_9.y = _World2Object[1].y;
  v_9.z = _World2Object[2].y;
  v_9.w = _World2Object[3].y;
  highp vec4 v_10;
  v_10.x = _World2Object[0].z;
  v_10.y = _World2Object[1].z;
  v_10.z = _World2Object[2].z;
  v_10.w = _World2Object[3].z;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize(((
    (v_8.xyz * _glesNormal.x)
   + 
    (v_9.xyz * _glesNormal.y)
  ) + (v_10.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_11;
  tmpvar_4 = worldNormal_1;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = cse_7;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_22;
  normalWorld_22 = tmpvar_4;
  mediump vec4 realtimeDirTex_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
  realtimeDirTex_23 = tmpvar_25;
  lowp vec4 dirTex_26;
  dirTex_26 = realtimeDirTex_23;
  lowp vec3 y_27;
  y_27 = (dirTex_26.xyz - 0.5);
  lowp vec4 c_28;
  lowp vec4 c_29;
  lowp float diff_30;
  mediump float tmpvar_31;
  tmpvar_31 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_30 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_30);
  c_29.xyz = tmpvar_32;
  c_29.w = tmpvar_7;
  c_28.w = c_29.w;
  mediump vec3 tmpvar_33;
  tmpvar_33 = (c_29.xyz + (mixedDiffuse_9.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_24.w) * tmpvar_24.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_22, y_27) + 0.5))
   / dirTex_26.w)));
  c_28.xyz = tmpvar_33;
  lowp vec4 color_34;
  color_34.xyz = (c_28.xyz * tmpvar_7);
  color_34.w = 1.0;
  lowp vec4 color_35;
  color_35.w = color_34.w;
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_35.xyz = mix (vec3(0.0, 0.0, 0.0), color_34.xyz, vec3(tmpvar_36));
  c_3.xyz = color_35.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_9.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_14;
  tmpvar_4 = worldNormal_1;
  lowp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = worldNormal_1;
  mediump vec3 tmpvar_16;
  mediump vec4 normal_17;
  normal_17 = tmpvar_15;
  mediump vec3 x2_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_17.xyzz * normal_17.yzzx);
  x2_18.x = dot (unity_SHBr, tmpvar_19);
  x2_18.y = dot (unity_SHBg, tmpvar_19);
  x2_18.z = dot (unity_SHBb, tmpvar_19);
  tmpvar_16 = (x2_18 + (unity_SHC.xyz * (
    (normal_17.x * normal_17.x)
   - 
    (normal_17.y * normal_17.y)
  )));
  highp vec3 lightColor0_20;
  lightColor0_20 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_21;
  lightColor1_21 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_22;
  lightColor2_22 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_23;
  lightColor3_23 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_24;
  lightAttenSq_24 = unity_4LightAtten0;
  highp vec3 normal_25;
  normal_25 = worldNormal_1;
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_10.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_10.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_10.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * normal_25.x) + (tmpvar_27 * normal_25.y)) + (tmpvar_28 * normal_25.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * lightAttenSq_24)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_16 + ((
    ((lightColor0_20 * tmpvar_30.x) + (lightColor1_21 * tmpvar_30.y))
   + 
    (lightColor2_22 * tmpvar_30.z)
  ) + (lightColor3_23 * tmpvar_30.w)));
  tmpvar_6 = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_10);
  tmpvar_7 = tmpvar_32;
  gl_Position = cse_9;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_10.xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float tmpvar_22;
  mediump float dist_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (float((dist_23 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_22 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_26;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_22;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_5;
  mediump vec3 tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x1_30;
  x1_30.x = dot (unity_SHAr, tmpvar_29);
  x1_30.y = dot (unity_SHAg, tmpvar_29);
  x1_30.z = dot (unity_SHAb, tmpvar_29);
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_31;
  lowp vec4 c_32;
  lowp float diff_33;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_33 = tmpvar_34;
  mediump vec3 tmpvar_35;
  tmpvar_35 = ((mixedDiffuse_10.xyz * tmpvar_28) * diff_33);
  c_32.xyz = tmpvar_35;
  c_32.w = tmpvar_8;
  c_31.w = c_32.w;
  mediump vec3 tmpvar_36;
  tmpvar_36 = (c_32.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD5 + x1_30)));
  c_31.xyz = tmpvar_36;
  lowp vec4 color_37;
  color_37.xyz = (c_31.xyz * tmpvar_8);
  color_37.w = 1.0;
  lowp vec4 color_38;
  color_38.w = color_37.w;
  highp float tmpvar_39;
  tmpvar_39 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_38.xyz = mix (vec3(0.0, 0.0, 0.0), color_37.xyz, vec3(tmpvar_39));
  c_4.xyz = color_38.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 cse_8;
  cse_8 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_8.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_12;
  tmpvar_4 = worldNormal_1;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_13;
  gl_Position = cse_8;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_14.xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float tmpvar_22;
  mediump float dist_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (float((dist_23 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_22 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_26;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_22;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  tmpvar_2 = tmpvar_27;
  lowp vec4 c_29;
  lowp vec4 c_30;
  lowp float diff_31;
  mediump float tmpvar_32;
  tmpvar_32 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_31 = tmpvar_32;
  mediump vec3 tmpvar_33;
  tmpvar_33 = ((mixedDiffuse_10.xyz * tmpvar_27) * diff_31);
  c_30.xyz = tmpvar_33;
  c_30.w = tmpvar_8;
  c_29.w = c_30.w;
  mediump vec3 tmpvar_34;
  tmpvar_34 = (c_30.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_28.w) * tmpvar_28.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_29.xyz = tmpvar_34;
  lowp vec4 color_35;
  color_35.xyz = (c_29.xyz * tmpvar_8);
  color_35.w = 1.0;
  lowp vec4 color_36;
  color_36.w = color_35.w;
  highp float tmpvar_37;
  tmpvar_37 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_36.xyz = mix (vec3(0.0, 0.0, 0.0), color_35.xyz, vec3(tmpvar_37));
  c_4.xyz = color_36.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 cse_8;
  cse_8 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_8.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_12;
  tmpvar_4 = worldNormal_1;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_13;
  gl_Position = cse_8;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_14.xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float tmpvar_22;
  mediump float dist_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (float((dist_23 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_22 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_26;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_22;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_5;
  mediump vec4 realtimeDirTex_28;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
  realtimeDirTex_28 = tmpvar_31;
  lowp vec4 dirTex_32;
  dirTex_32 = realtimeDirTex_28;
  lowp vec3 y_33;
  y_33 = (dirTex_32.xyz - 0.5);
  tmpvar_2 = tmpvar_29;
  lowp vec4 c_34;
  lowp vec4 c_35;
  lowp float diff_36;
  mediump float tmpvar_37;
  tmpvar_37 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_36 = tmpvar_37;
  mediump vec3 tmpvar_38;
  tmpvar_38 = ((mixedDiffuse_10.xyz * tmpvar_29) * diff_36);
  c_35.xyz = tmpvar_38;
  c_35.w = tmpvar_8;
  c_34.w = c_35.w;
  mediump vec3 tmpvar_39;
  tmpvar_39 = (c_35.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_30.w) * tmpvar_30.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_27, y_33) + 0.5))
   / dirTex_32.w)));
  c_34.xyz = tmpvar_39;
  lowp vec4 color_40;
  color_40.xyz = (c_34.xyz * tmpvar_8);
  color_40.w = 1.0;
  lowp vec4 color_41;
  color_41.w = color_40.w;
  highp float tmpvar_42;
  tmpvar_42 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_41.xyz = mix (vec3(0.0, 0.0, 0.0), color_40.xyz, vec3(tmpvar_42));
  c_4.xyz = color_41.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 cse_8;
  cse_8 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_8.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_12;
  tmpvar_4 = worldNormal_1;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = worldNormal_1;
  mediump vec4 normal_14;
  normal_14 = tmpvar_13;
  mediump vec3 x2_15;
  mediump vec4 tmpvar_16;
  tmpvar_16 = (normal_14.xyzz * normal_14.yzzx);
  x2_15.x = dot (unity_SHBr, tmpvar_16);
  x2_15.y = dot (unity_SHBg, tmpvar_16);
  x2_15.z = dot (unity_SHBb, tmpvar_16);
  highp vec4 tmpvar_17;
  highp vec4 cse_18;
  cse_18 = (_Object2World * _glesVertex);
  tmpvar_17 = (unity_World2Shadow[0] * cse_18);
  tmpvar_6 = tmpvar_17;
  gl_Position = cse_8;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_18.xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD5 = (x2_15 + (unity_SHC.xyz * (
    (normal_14.x * normal_14.x)
   - 
    (normal_14.y * normal_14.y)
  )));
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float shadow_22;
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_24;
  tmpvar_24 = (_LightShadowData.x + (tmpvar_23 * (1.0 - _LightShadowData.x)));
  shadow_22 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_25;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_22;
  mediump vec3 normalWorld_26;
  normalWorld_26 = tmpvar_5;
  mediump vec3 tmpvar_27;
  mediump vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = normalWorld_26;
  mediump vec3 x1_29;
  x1_29.x = dot (unity_SHAr, tmpvar_28);
  x1_29.y = dot (unity_SHAg, tmpvar_28);
  x1_29.z = dot (unity_SHAb, tmpvar_28);
  tmpvar_27 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_27;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_32 = tmpvar_33;
  mediump vec3 tmpvar_34;
  tmpvar_34 = ((mixedDiffuse_10.xyz * tmpvar_27) * diff_32);
  c_31.xyz = tmpvar_34;
  c_31.w = tmpvar_8;
  c_30.w = c_31.w;
  mediump vec3 tmpvar_35;
  tmpvar_35 = (c_31.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD5 + x1_29)));
  c_30.xyz = tmpvar_35;
  lowp vec4 color_36;
  color_36.xyz = (c_30.xyz * tmpvar_8);
  color_36.w = 1.0;
  lowp vec4 color_37;
  color_37.w = color_36.w;
  highp float tmpvar_38;
  tmpvar_38 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_37.xyz = mix (vec3(0.0, 0.0, 0.0), color_36.xyz, vec3(tmpvar_38));
  c_4.xyz = color_37.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 cse_8;
  cse_8 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_8.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_12;
  tmpvar_4 = worldNormal_1;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_13;
  gl_Position = cse_8;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_14.xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float shadow_22;
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_24;
  tmpvar_24 = (_LightShadowData.x + (tmpvar_23 * (1.0 - _LightShadowData.x)));
  shadow_22 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_25;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_22;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_28;
  lowp vec4 c_29;
  lowp float diff_30;
  mediump float tmpvar_31;
  tmpvar_31 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_30 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((mixedDiffuse_10.xyz * tmpvar_26) * diff_30);
  c_29.xyz = tmpvar_32;
  c_29.w = tmpvar_8;
  c_28.w = c_29.w;
  mediump vec3 tmpvar_33;
  tmpvar_33 = (c_29.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_27.w) * tmpvar_27.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_28.xyz = tmpvar_33;
  lowp vec4 color_34;
  color_34.xyz = (c_28.xyz * tmpvar_8);
  color_34.w = 1.0;
  lowp vec4 color_35;
  color_35.w = color_34.w;
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_35.xyz = mix (vec3(0.0, 0.0, 0.0), color_34.xyz, vec3(tmpvar_36));
  c_4.xyz = color_35.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 cse_8;
  cse_8 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_8.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_12;
  tmpvar_4 = worldNormal_1;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_13;
  gl_Position = cse_8;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_14.xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float shadow_22;
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_24;
  tmpvar_24 = (_LightShadowData.x + (tmpvar_23 * (1.0 - _LightShadowData.x)));
  shadow_22 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_25;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_22;
  mediump vec3 normalWorld_26;
  normalWorld_26 = tmpvar_5;
  mediump vec4 realtimeDirTex_27;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
  realtimeDirTex_27 = tmpvar_30;
  lowp vec4 dirTex_31;
  dirTex_31 = realtimeDirTex_27;
  lowp vec3 y_32;
  y_32 = (dirTex_31.xyz - 0.5);
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  mediump vec3 tmpvar_37;
  tmpvar_37 = ((mixedDiffuse_10.xyz * tmpvar_28) * diff_35);
  c_34.xyz = tmpvar_37;
  c_34.w = tmpvar_8;
  c_33.w = c_34.w;
  mediump vec3 tmpvar_38;
  tmpvar_38 = (c_34.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_29.w) * tmpvar_29.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_26, y_32) + 0.5))
   / dirTex_31.w)));
  c_33.xyz = tmpvar_38;
  lowp vec4 color_39;
  color_39.xyz = (c_33.xyz * tmpvar_8);
  color_39.w = 1.0;
  lowp vec4 color_40;
  color_40.w = color_39.w;
  highp float tmpvar_41;
  tmpvar_41 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_40.xyz = mix (vec3(0.0, 0.0, 0.0), color_39.xyz, vec3(tmpvar_41));
  c_4.xyz = color_40.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
varying lowp vec3 xlv_TEXCOORD9;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  highp vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_7.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_7.z = exp2(-((unity_FogParams.y * cse_13.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * _glesNormal.x)
   + 
    (v_17.xyz * _glesNormal.y)
  ) + (v_18.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
  worldTangent_2 = tmpvar_21;
  lowp vec3 tmpvar_22;
  tmpvar_22 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * _glesTANGENT.w);
  worldBinormal_1 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.x;
  tmpvar_24.y = worldBinormal_1.x;
  tmpvar_24.z = worldNormal_3.x;
  tmpvar_24.w = tmpvar_14.x;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.xyz;
  tmpvar_10 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.x = worldTangent_2.y;
  tmpvar_26.y = worldBinormal_1.y;
  tmpvar_26.z = worldNormal_3.y;
  tmpvar_26.w = tmpvar_14.y;
  highp vec3 tmpvar_27;
  tmpvar_27 = tmpvar_26.xyz;
  tmpvar_11 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.x = worldTangent_2.z;
  tmpvar_28.y = worldBinormal_1.z;
  tmpvar_28.z = worldNormal_3.z;
  tmpvar_28.w = tmpvar_14.z;
  highp vec3 tmpvar_29;
  tmpvar_29 = tmpvar_28.xyz;
  tmpvar_12 = tmpvar_29;
  tmpvar_6 = worldNormal_3;
  tmpvar_8.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_15);
  tmpvar_9 = tmpvar_30;
  gl_Position = cse_13;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_14;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD5 = tmpvar_8;
  xlv_TEXCOORD6 = tmpvar_9;
  xlv_TEXCOORD7 = tmpvar_10;
  xlv_TEXCOORD8 = tmpvar_11;
  xlv_TEXCOORD9 = tmpvar_12;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_5 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_9;
  tmpvar_9 = (splat_control_5 / (tmpvar_8 + 0.001));
  splat_control_5 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_9.x * tmpvar_10);
  mixedDiffuse_6 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_13;
  tmpvar_13 = (mixedDiffuse_6 + (tmpvar_9.y * tmpvar_12));
  mixedDiffuse_6 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (mixedDiffuse_6 + (tmpvar_9.z * tmpvar_14));
  mixedDiffuse_6 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_6 + (tmpvar_9.w * tmpvar_16));
  mixedDiffuse_6 = tmpvar_17;
  tmpvar_4 = tmpvar_8;
  lowp float shadow_18;
  lowp float tmpvar_19;
  tmpvar_19 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_18 = tmpvar_20;
  tmpvar_1 = shadow_18;
  mediump vec3 normalWorld_21;
  normalWorld_21 = tmpvar_3;
  mediump vec3 tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (unity_Lightmap, xlv_TEXCOORD5.xy);
  mediump vec3 tmpvar_24;
  tmpvar_24 = (2.0 * tmpvar_23.xyz);
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (unity_LightmapInd, xlv_TEXCOORD5.xy);
  lowp vec3 y_26;
  y_26 = (tmpvar_25.xyz - 0.5);
  tmpvar_22 = ((tmpvar_24 * (
    dot (normalWorld_21, y_26)
   + 0.5)) / tmpvar_25.w);
  tmpvar_22 = max (min (tmpvar_22, (tmpvar_23.xyz * tmpvar_1)), (tmpvar_22 * tmpvar_1));
  lowp vec4 c_27;
  lowp vec4 c_28;
  c_28.xyz = vec3(0.0, 0.0, 0.0);
  c_28.w = tmpvar_4;
  c_27.w = c_28.w;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (mixedDiffuse_6.xyz * tmpvar_22);
  c_27.xyz = tmpvar_29;
  lowp vec4 color_30;
  color_30.xyz = (c_27.xyz * tmpvar_4);
  color_30.w = 1.0;
  lowp vec4 color_31;
  color_31.w = color_30.w;
  highp float tmpvar_32;
  tmpvar_32 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_31.xyz = mix (vec3(0.0, 0.0, 0.0), color_30.xyz, vec3(tmpvar_32));
  c_2.xyz = color_31.xyz;
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD8;
varying lowp vec3 xlv_TEXCOORD9;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  highp vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_7.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_7.z = exp2(-((unity_FogParams.y * cse_13.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * _glesNormal.x)
   + 
    (v_17.xyz * _glesNormal.y)
  ) + (v_18.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
  worldTangent_2 = tmpvar_21;
  lowp vec3 tmpvar_22;
  tmpvar_22 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * _glesTANGENT.w);
  worldBinormal_1 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.x;
  tmpvar_24.y = worldBinormal_1.x;
  tmpvar_24.z = worldNormal_3.x;
  tmpvar_24.w = tmpvar_14.x;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.xyz;
  tmpvar_10 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.x = worldTangent_2.y;
  tmpvar_26.y = worldBinormal_1.y;
  tmpvar_26.z = worldNormal_3.y;
  tmpvar_26.w = tmpvar_14.y;
  highp vec3 tmpvar_27;
  tmpvar_27 = tmpvar_26.xyz;
  tmpvar_11 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.x = worldTangent_2.z;
  tmpvar_28.y = worldBinormal_1.z;
  tmpvar_28.z = worldNormal_3.z;
  tmpvar_28.w = tmpvar_14.z;
  highp vec3 tmpvar_29;
  tmpvar_29 = tmpvar_28.xyz;
  tmpvar_12 = tmpvar_29;
  tmpvar_6 = worldNormal_3;
  tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_8.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_15);
  tmpvar_9 = tmpvar_30;
  gl_Position = cse_13;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_14;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD5 = tmpvar_8;
  xlv_TEXCOORD6 = tmpvar_9;
  xlv_TEXCOORD7 = tmpvar_10;
  xlv_TEXCOORD8 = tmpvar_11;
  xlv_TEXCOORD9 = tmpvar_12;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_5 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_9;
  tmpvar_9 = (splat_control_5 / (tmpvar_8 + 0.001));
  splat_control_5 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_9.x * tmpvar_10);
  mixedDiffuse_6 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_13;
  tmpvar_13 = (mixedDiffuse_6 + (tmpvar_9.y * tmpvar_12));
  mixedDiffuse_6 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (mixedDiffuse_6 + (tmpvar_9.z * tmpvar_14));
  mixedDiffuse_6 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_6 + (tmpvar_9.w * tmpvar_16));
  mixedDiffuse_6 = tmpvar_17;
  tmpvar_4 = tmpvar_8;
  lowp float shadow_18;
  lowp float tmpvar_19;
  tmpvar_19 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_18 = tmpvar_20;
  tmpvar_1 = shadow_18;
  mediump vec3 normalWorld_21;
  normalWorld_21 = tmpvar_3;
  mediump vec4 realtimeDirTex_22;
  mediump vec3 tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD5.xy);
  mediump vec3 tmpvar_25;
  tmpvar_25 = (2.0 * tmpvar_24.xyz);
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (unity_LightmapInd, xlv_TEXCOORD5.xy);
  lowp vec3 y_27;
  y_27 = (tmpvar_26.xyz - 0.5);
  tmpvar_23 = ((tmpvar_25 * (
    dot (normalWorld_21, y_27)
   + 0.5)) / tmpvar_26.w);
  tmpvar_23 = max (min (tmpvar_23, (tmpvar_24.xyz * tmpvar_1)), (tmpvar_23 * tmpvar_1));
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD5.zw);
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD5.zw);
  realtimeDirTex_22 = tmpvar_29;
  lowp vec4 dirTex_30;
  dirTex_30 = realtimeDirTex_22;
  lowp vec3 y_31;
  y_31 = (dirTex_30.xyz - 0.5);
  tmpvar_23 = (tmpvar_23 + ((
    pow (((unity_DynamicLightmap_HDR.x * tmpvar_28.w) * tmpvar_28.xyz), unity_DynamicLightmap_HDR.yyy)
   * 
    (dot (normalWorld_21, y_31) + 0.5)
  ) / dirTex_30.w));
  lowp vec4 c_32;
  lowp vec4 c_33;
  c_33.xyz = vec3(0.0, 0.0, 0.0);
  c_33.w = tmpvar_4;
  c_32.w = c_33.w;
  mediump vec3 tmpvar_34;
  tmpvar_34 = (mixedDiffuse_6.xyz * tmpvar_23);
  c_32.xyz = tmpvar_34;
  lowp vec4 color_35;
  color_35.xyz = (c_32.xyz * tmpvar_4);
  color_35.w = 1.0;
  lowp vec4 color_36;
  color_36.w = color_35.w;
  highp float tmpvar_37;
  tmpvar_37 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_36.xyz = mix (vec3(0.0, 0.0, 0.0), color_35.xyz, vec3(tmpvar_37));
  c_2.xyz = color_36.xyz;
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_9.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_14;
  tmpvar_4 = worldNormal_1;
  lowp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = worldNormal_1;
  mediump vec3 tmpvar_16;
  mediump vec4 normal_17;
  normal_17 = tmpvar_15;
  mediump vec3 x2_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_17.xyzz * normal_17.yzzx);
  x2_18.x = dot (unity_SHBr, tmpvar_19);
  x2_18.y = dot (unity_SHBg, tmpvar_19);
  x2_18.z = dot (unity_SHBb, tmpvar_19);
  tmpvar_16 = (x2_18 + (unity_SHC.xyz * (
    (normal_17.x * normal_17.x)
   - 
    (normal_17.y * normal_17.y)
  )));
  highp vec3 lightColor0_20;
  lightColor0_20 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_21;
  lightColor1_21 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_22;
  lightColor2_22 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_23;
  lightColor3_23 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_24;
  lightAttenSq_24 = unity_4LightAtten0;
  highp vec3 normal_25;
  normal_25 = worldNormal_1;
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_10.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_10.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_10.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * normal_25.x) + (tmpvar_27 * normal_25.y)) + (tmpvar_28 * normal_25.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * lightAttenSq_24)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_16 + ((
    ((lightColor0_20 * tmpvar_30.x) + (lightColor1_21 * tmpvar_30.y))
   + 
    (lightColor2_22 * tmpvar_30.z)
  ) + (lightColor3_23 * tmpvar_30.w)));
  tmpvar_6 = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_10);
  tmpvar_7 = tmpvar_32;
  gl_Position = cse_9;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_10.xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float shadow_22;
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_24;
  tmpvar_24 = (_LightShadowData.x + (tmpvar_23 * (1.0 - _LightShadowData.x)));
  shadow_22 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_25;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_22;
  mediump vec3 normalWorld_26;
  normalWorld_26 = tmpvar_5;
  mediump vec3 tmpvar_27;
  mediump vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = normalWorld_26;
  mediump vec3 x1_29;
  x1_29.x = dot (unity_SHAr, tmpvar_28);
  x1_29.y = dot (unity_SHAg, tmpvar_28);
  x1_29.z = dot (unity_SHAb, tmpvar_28);
  tmpvar_27 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_27;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_32 = tmpvar_33;
  mediump vec3 tmpvar_34;
  tmpvar_34 = ((mixedDiffuse_10.xyz * tmpvar_27) * diff_32);
  c_31.xyz = tmpvar_34;
  c_31.w = tmpvar_8;
  c_30.w = c_31.w;
  mediump vec3 tmpvar_35;
  tmpvar_35 = (c_31.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD5 + x1_29)));
  c_30.xyz = tmpvar_35;
  lowp vec4 color_36;
  color_36.xyz = (c_30.xyz * tmpvar_8);
  color_36.w = 1.0;
  lowp vec4 color_37;
  color_37.w = color_36.w;
  highp float tmpvar_38;
  tmpvar_38 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_37.xyz = mix (vec3(0.0, 0.0, 0.0), color_36.xyz, vec3(tmpvar_38));
  c_4.xyz = color_37.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 cse_8;
  cse_8 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_8.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_12;
  tmpvar_4 = worldNormal_1;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_13;
  gl_Position = cse_8;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_14.xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float shadow_22;
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_24;
  tmpvar_24 = (_LightShadowData.x + (tmpvar_23 * (1.0 - _LightShadowData.x)));
  shadow_22 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_25;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_22;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_28;
  lowp vec4 c_29;
  lowp float diff_30;
  mediump float tmpvar_31;
  tmpvar_31 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_30 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((mixedDiffuse_10.xyz * tmpvar_26) * diff_30);
  c_29.xyz = tmpvar_32;
  c_29.w = tmpvar_8;
  c_28.w = c_29.w;
  mediump vec3 tmpvar_33;
  tmpvar_33 = (c_29.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_27.w) * tmpvar_27.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_28.xyz = tmpvar_33;
  lowp vec4 color_34;
  color_34.xyz = (c_28.xyz * tmpvar_8);
  color_34.w = 1.0;
  lowp vec4 color_35;
  color_35.w = color_34.w;
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_35.xyz = mix (vec3(0.0, 0.0, 0.0), color_34.xyz, vec3(tmpvar_36));
  c_4.xyz = color_35.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 cse_8;
  cse_8 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_8.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_12;
  tmpvar_4 = worldNormal_1;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_13;
  gl_Position = cse_8;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = cse_14.xyz;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  lowp float shadow_22;
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_24;
  tmpvar_24 = (_LightShadowData.x + (tmpvar_23 * (1.0 - _LightShadowData.x)));
  shadow_22 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_25;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_22;
  mediump vec3 normalWorld_26;
  normalWorld_26 = tmpvar_5;
  mediump vec4 realtimeDirTex_27;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
  realtimeDirTex_27 = tmpvar_30;
  lowp vec4 dirTex_31;
  dirTex_31 = realtimeDirTex_27;
  lowp vec3 y_32;
  y_32 = (dirTex_31.xyz - 0.5);
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  mediump vec3 tmpvar_37;
  tmpvar_37 = ((mixedDiffuse_10.xyz * tmpvar_28) * diff_35);
  c_34.xyz = tmpvar_37;
  c_34.w = tmpvar_8;
  c_33.w = c_34.w;
  mediump vec3 tmpvar_38;
  tmpvar_38 = (c_34.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_29.w) * tmpvar_29.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_26, y_32) + 0.5))
   / dirTex_31.w)));
  c_33.xyz = tmpvar_38;
  lowp vec4 color_39;
  color_39.xyz = (c_33.xyz * tmpvar_8);
  color_39.w = 1.0;
  lowp vec4 color_40;
  color_40.w = color_39.w;
  highp float tmpvar_41;
  tmpvar_41 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_40.xyz = mix (vec3(0.0, 0.0, 0.0), color_39.xyz, vec3(tmpvar_41));
  c_4.xyz = color_40.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_7.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_7.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * tmpvar_7.xyz));
  worldTangent_2 = tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_16;
  tmpvar_16 = -(tmpvar_15);
  worldBinormal_1 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.x = worldTangent_2.x;
  tmpvar_17.y = worldBinormal_1.x;
  tmpvar_17.z = worldNormal_3.x;
  tmpvar_17.w = tmpvar_8.x;
  highp vec4 tmpvar_18;
  tmpvar_18.x = worldTangent_2.y;
  tmpvar_18.y = worldBinormal_1.y;
  tmpvar_18.z = worldNormal_3.y;
  tmpvar_18.w = tmpvar_8.y;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.z;
  tmpvar_19.y = worldBinormal_1.z;
  tmpvar_19.z = worldNormal_3.z;
  tmpvar_19.w = tmpvar_8.z;
  lowp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = worldNormal_3;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_23);
  x2_22.y = dot (unity_SHBg, tmpvar_23);
  x2_22.z = dot (unity_SHBb, tmpvar_23);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_17;
  xlv_TEXCOORD3 = tmpvar_18;
  xlv_TEXCOORD4 = tmpvar_19;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = (x2_22 + (unity_SHC.xyz * (
    (normal_21.x * normal_21.x)
   - 
    (normal_21.y * normal_21.y)
  )));
  xlv_TEXCOORD8 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_30);
  worldN_3.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_30);
  worldN_3.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_30);
  worldN_3.z = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_34;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_35;
  normalWorld_35 = worldN_3;
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = normalWorld_35;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, tmpvar_36);
  x1_37.y = dot (unity_SHAg, tmpvar_36);
  x1_37.z = dot (unity_SHAb, tmpvar_36);
  lowp vec4 c_38;
  lowp vec4 c_39;
  lowp float diff_40;
  mediump float tmpvar_41;
  tmpvar_41 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_40 = tmpvar_41;
  mediump vec3 tmpvar_42;
  tmpvar_42 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_40);
  c_39.xyz = tmpvar_42;
  c_39.w = tmpvar_7;
  c_38.w = c_39.w;
  mediump vec3 tmpvar_43;
  tmpvar_43 = (c_39.xyz + (mixedDiffuse_9.xyz * (xlv_TEXCOORD6 + x1_37)));
  c_38.xyz = tmpvar_43;
  lowp vec4 color_44;
  color_44.xyz = (c_38.xyz * tmpvar_7);
  color_44.w = 1.0;
  c_4.xyz = color_44.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_7.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_7.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * tmpvar_7.xyz));
  worldTangent_2 = tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_16;
  tmpvar_16 = -(tmpvar_15);
  worldBinormal_1 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.x = worldTangent_2.x;
  tmpvar_17.y = worldBinormal_1.x;
  tmpvar_17.z = worldNormal_3.x;
  tmpvar_17.w = tmpvar_8.x;
  highp vec4 tmpvar_18;
  tmpvar_18.x = worldTangent_2.y;
  tmpvar_18.y = worldBinormal_1.y;
  tmpvar_18.z = worldNormal_3.y;
  tmpvar_18.w = tmpvar_8.y;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.z;
  tmpvar_19.y = worldBinormal_1.z;
  tmpvar_19.z = worldNormal_3.z;
  tmpvar_19.w = tmpvar_8.z;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_17;
  xlv_TEXCOORD3 = tmpvar_18;
  xlv_TEXCOORD4 = tmpvar_19;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD8 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_30);
  worldN_3.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_30);
  worldN_3.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_30);
  worldN_3.z = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_34;
  tmpvar_2 = lightDir_5;
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 c_36;
  lowp vec4 c_37;
  lowp float diff_38;
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_38 = tmpvar_39;
  mediump vec3 tmpvar_40;
  tmpvar_40 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_38);
  c_37.xyz = tmpvar_40;
  c_37.w = tmpvar_7;
  c_36.w = c_37.w;
  mediump vec3 tmpvar_41;
  tmpvar_41 = (c_37.xyz + (mixedDiffuse_9.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_35.w) * tmpvar_35.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_36.xyz = tmpvar_41;
  lowp vec4 color_42;
  color_42.xyz = (c_36.xyz * tmpvar_7);
  color_42.w = 1.0;
  c_4.xyz = color_42.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_7.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_7.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * tmpvar_7.xyz));
  worldTangent_2 = tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_16;
  tmpvar_16 = -(tmpvar_15);
  worldBinormal_1 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.x = worldTangent_2.x;
  tmpvar_17.y = worldBinormal_1.x;
  tmpvar_17.z = worldNormal_3.x;
  tmpvar_17.w = tmpvar_8.x;
  highp vec4 tmpvar_18;
  tmpvar_18.x = worldTangent_2.y;
  tmpvar_18.y = worldBinormal_1.y;
  tmpvar_18.z = worldNormal_3.y;
  tmpvar_18.w = tmpvar_8.y;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.z;
  tmpvar_19.y = worldBinormal_1.z;
  tmpvar_19.z = worldNormal_3.z;
  tmpvar_19.w = tmpvar_8.z;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_17;
  xlv_TEXCOORD3 = tmpvar_18;
  xlv_TEXCOORD4 = tmpvar_19;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD8 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_30);
  worldN_3.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_30);
  worldN_3.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_30);
  worldN_3.z = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_34;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_35;
  normalWorld_35 = worldN_3;
  mediump vec4 realtimeDirTex_36;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD8.zw);
  realtimeDirTex_36 = tmpvar_38;
  lowp vec4 dirTex_39;
  dirTex_39 = realtimeDirTex_36;
  lowp vec3 y_40;
  y_40 = (dirTex_39.xyz - 0.5);
  lowp vec4 c_41;
  lowp vec4 c_42;
  lowp float diff_43;
  mediump float tmpvar_44;
  tmpvar_44 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_43 = tmpvar_44;
  mediump vec3 tmpvar_45;
  tmpvar_45 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_43);
  c_42.xyz = tmpvar_45;
  c_42.w = tmpvar_7;
  c_41.w = c_42.w;
  mediump vec3 tmpvar_46;
  tmpvar_46 = (c_42.xyz + (mixedDiffuse_9.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_35, y_40) + 0.5))
   / dirTex_39.w)));
  c_41.xyz = tmpvar_46;
  lowp vec4 color_47;
  color_47.xyz = (c_41.xyz * tmpvar_7);
  color_47.w = 1.0;
  c_4.xyz = color_47.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_7.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_7.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * tmpvar_7.xyz));
  worldTangent_2 = tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_16;
  tmpvar_16 = -(tmpvar_15);
  worldBinormal_1 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.x = worldTangent_2.x;
  tmpvar_17.y = worldBinormal_1.x;
  tmpvar_17.z = worldNormal_3.x;
  tmpvar_17.w = tmpvar_8.x;
  highp vec4 tmpvar_18;
  tmpvar_18.x = worldTangent_2.y;
  tmpvar_18.y = worldBinormal_1.y;
  tmpvar_18.z = worldNormal_3.y;
  tmpvar_18.w = tmpvar_8.y;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.z;
  tmpvar_19.y = worldBinormal_1.z;
  tmpvar_19.z = worldNormal_3.z;
  tmpvar_19.w = tmpvar_8.z;
  tmpvar_6.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_17;
  xlv_TEXCOORD3 = tmpvar_18;
  xlv_TEXCOORD4 = tmpvar_19;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec3 worldN_1;
  lowp vec4 c_2;
  lowp float tmpvar_3;
  mediump vec4 splat_control_4;
  lowp vec4 mixedDiffuse_5;
  lowp vec4 nrm_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_4 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = dot (splat_control_4, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_9;
  tmpvar_9 = (splat_control_4 / (tmpvar_8 + 0.001));
  splat_control_4 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_9.x * tmpvar_10);
  mixedDiffuse_5 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_13;
  tmpvar_13 = (mixedDiffuse_5 + (tmpvar_9.y * tmpvar_12));
  mixedDiffuse_5 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (mixedDiffuse_5 + (tmpvar_9.z * tmpvar_14));
  mixedDiffuse_5 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_5 + (tmpvar_9.w * tmpvar_16));
  mixedDiffuse_5 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_9.x * tmpvar_18);
  nrm_6 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (nrm_6 + (tmpvar_9.y * tmpvar_20));
  nrm_6 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (nrm_6 + (tmpvar_9.z * tmpvar_22));
  nrm_6 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_6 + (tmpvar_9.w * tmpvar_24));
  nrm_6 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = ((nrm_6.xyz * 2.0) - 1.0);
  tmpvar_3 = tmpvar_8;
  highp float tmpvar_27;
  tmpvar_27 = dot (xlv_TEXCOORD2.xyz, tmpvar_26);
  worldN_1.x = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = dot (xlv_TEXCOORD3.xyz, tmpvar_26);
  worldN_1.y = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = dot (xlv_TEXCOORD4.xyz, tmpvar_26);
  worldN_1.z = tmpvar_29;
  mediump vec3 normalWorld_30;
  normalWorld_30 = worldN_1;
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD6.xy);
  mediump vec3 tmpvar_32;
  tmpvar_32 = (2.0 * tmpvar_31.xyz);
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (unity_LightmapInd, xlv_TEXCOORD6.xy);
  lowp vec3 y_34;
  y_34 = (tmpvar_33.xyz - 0.5);
  lowp vec4 c_35;
  lowp vec4 c_36;
  c_36.xyz = vec3(0.0, 0.0, 0.0);
  c_36.w = tmpvar_3;
  c_35.w = c_36.w;
  mediump vec3 tmpvar_37;
  tmpvar_37 = (mixedDiffuse_5.xyz * ((tmpvar_32 * 
    (dot (normalWorld_30, y_34) + 0.5)
  ) / tmpvar_33.w));
  c_35.xyz = tmpvar_37;
  lowp vec4 color_38;
  color_38.xyz = (c_35.xyz * tmpvar_3);
  color_38.w = 1.0;
  c_2.xyz = color_38.xyz;
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_7.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_7.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * tmpvar_7.xyz));
  worldTangent_2 = tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_16;
  tmpvar_16 = -(tmpvar_15);
  worldBinormal_1 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.x = worldTangent_2.x;
  tmpvar_17.y = worldBinormal_1.x;
  tmpvar_17.z = worldNormal_3.x;
  tmpvar_17.w = tmpvar_8.x;
  highp vec4 tmpvar_18;
  tmpvar_18.x = worldTangent_2.y;
  tmpvar_18.y = worldBinormal_1.y;
  tmpvar_18.z = worldNormal_3.y;
  tmpvar_18.w = tmpvar_8.y;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.z;
  tmpvar_19.y = worldBinormal_1.z;
  tmpvar_19.z = worldNormal_3.z;
  tmpvar_19.w = tmpvar_8.z;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_6.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_17;
  xlv_TEXCOORD3 = tmpvar_18;
  xlv_TEXCOORD4 = tmpvar_19;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec3 worldN_1;
  lowp vec4 c_2;
  lowp float tmpvar_3;
  mediump vec4 splat_control_4;
  lowp vec4 mixedDiffuse_5;
  lowp vec4 nrm_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_4 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = dot (splat_control_4, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_9;
  tmpvar_9 = (splat_control_4 / (tmpvar_8 + 0.001));
  splat_control_4 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_9.x * tmpvar_10);
  mixedDiffuse_5 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_13;
  tmpvar_13 = (mixedDiffuse_5 + (tmpvar_9.y * tmpvar_12));
  mixedDiffuse_5 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (mixedDiffuse_5 + (tmpvar_9.z * tmpvar_14));
  mixedDiffuse_5 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_5 + (tmpvar_9.w * tmpvar_16));
  mixedDiffuse_5 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_9.x * tmpvar_18);
  nrm_6 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (nrm_6 + (tmpvar_9.y * tmpvar_20));
  nrm_6 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (nrm_6 + (tmpvar_9.z * tmpvar_22));
  nrm_6 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_6 + (tmpvar_9.w * tmpvar_24));
  nrm_6 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = ((nrm_6.xyz * 2.0) - 1.0);
  tmpvar_3 = tmpvar_8;
  highp float tmpvar_27;
  tmpvar_27 = dot (xlv_TEXCOORD2.xyz, tmpvar_26);
  worldN_1.x = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = dot (xlv_TEXCOORD3.xyz, tmpvar_26);
  worldN_1.y = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = dot (xlv_TEXCOORD4.xyz, tmpvar_26);
  worldN_1.z = tmpvar_29;
  mediump vec3 normalWorld_30;
  normalWorld_30 = worldN_1;
  mediump vec4 realtimeDirTex_31;
  mediump vec3 tmpvar_32;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (unity_Lightmap, xlv_TEXCOORD6.xy);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (2.0 * tmpvar_33.xyz);
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2D (unity_LightmapInd, xlv_TEXCOORD6.xy);
  lowp vec3 y_36;
  y_36 = (tmpvar_35.xyz - 0.5);
  tmpvar_32 = ((tmpvar_34 * (
    dot (normalWorld_30, y_36)
   + 0.5)) / tmpvar_35.w);
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD6.zw);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD6.zw);
  realtimeDirTex_31 = tmpvar_38;
  lowp vec4 dirTex_39;
  dirTex_39 = realtimeDirTex_31;
  lowp vec3 y_40;
  y_40 = (dirTex_39.xyz - 0.5);
  tmpvar_32 = (tmpvar_32 + ((
    pow (((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz), unity_DynamicLightmap_HDR.yyy)
   * 
    (dot (normalWorld_30, y_40) + 0.5)
  ) / dirTex_39.w));
  lowp vec4 c_41;
  lowp vec4 c_42;
  c_42.xyz = vec3(0.0, 0.0, 0.0);
  c_42.w = tmpvar_3;
  c_41.w = c_42.w;
  mediump vec3 tmpvar_43;
  tmpvar_43 = (mixedDiffuse_5.xyz * tmpvar_32);
  c_41.xyz = tmpvar_43;
  lowp vec4 color_44;
  color_44.xyz = (c_41.xyz * tmpvar_3);
  color_44.w = 1.0;
  c_2.xyz = color_44.xyz;
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  lowp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = worldNormal_3;
  mediump vec4 normal_23;
  normal_23 = tmpvar_22;
  mediump vec3 x2_24;
  mediump vec4 tmpvar_25;
  tmpvar_25 = (normal_23.xyzz * normal_23.yzzx);
  x2_24.x = dot (unity_SHBr, tmpvar_25);
  x2_24.y = dot (unity_SHBg, tmpvar_25);
  x2_24.z = dot (unity_SHBb, tmpvar_25);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_World2Shadow[0] * cse_10);
  tmpvar_6 = tmpvar_26;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = (x2_24 + (unity_SHC.xyz * (
    (normal_23.x * normal_23.x)
   - 
    (normal_23.y * normal_23.y)
  )));
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float tmpvar_32;
  mediump float dist_33;
  lowp float tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_33 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (float((dist_33 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_32 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_38;
  lowp vec3 tmpvar_39;
  tmpvar_39 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_39;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_32;
  mediump vec3 normalWorld_40;
  normalWorld_40 = worldN_4;
  mediump vec3 tmpvar_41;
  mediump vec4 tmpvar_42;
  tmpvar_42.w = 1.0;
  tmpvar_42.xyz = normalWorld_40;
  mediump vec3 x1_43;
  x1_43.x = dot (unity_SHAr, tmpvar_42);
  x1_43.y = dot (unity_SHAg, tmpvar_42);
  x1_43.z = dot (unity_SHAb, tmpvar_42);
  tmpvar_41 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_41;
  lowp vec4 c_44;
  lowp vec4 c_45;
  lowp float diff_46;
  mediump float tmpvar_47;
  tmpvar_47 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_46 = tmpvar_47;
  mediump vec3 tmpvar_48;
  tmpvar_48 = ((mixedDiffuse_10.xyz * tmpvar_41) * diff_46);
  c_45.xyz = tmpvar_48;
  c_45.w = tmpvar_8;
  c_44.w = c_45.w;
  mediump vec3 tmpvar_49;
  tmpvar_49 = (c_45.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD6 + x1_43)));
  c_44.xyz = tmpvar_49;
  lowp vec4 color_50;
  color_50.xyz = (c_44.xyz * tmpvar_8);
  color_50.w = 1.0;
  c_5.xyz = color_50.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_World2Shadow[0] * cse_10);
  tmpvar_6 = tmpvar_22;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float tmpvar_32;
  mediump float dist_33;
  lowp float tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_33 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (float((dist_33 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_32 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_38;
  lowp vec3 tmpvar_39;
  tmpvar_39 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_39;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_32;
  mediump vec3 tmpvar_40;
  tmpvar_40 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  tmpvar_2 = tmpvar_40;
  lowp vec4 c_42;
  lowp vec4 c_43;
  lowp float diff_44;
  mediump float tmpvar_45;
  tmpvar_45 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_44 = tmpvar_45;
  mediump vec3 tmpvar_46;
  tmpvar_46 = ((mixedDiffuse_10.xyz * tmpvar_40) * diff_44);
  c_43.xyz = tmpvar_46;
  c_43.w = tmpvar_8;
  c_42.w = c_43.w;
  mediump vec3 tmpvar_47;
  tmpvar_47 = (c_43.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_41.w) * tmpvar_41.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_42.xyz = tmpvar_47;
  lowp vec4 color_48;
  color_48.xyz = (c_42.xyz * tmpvar_8);
  color_48.w = 1.0;
  c_5.xyz = color_48.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_World2Shadow[0] * cse_10);
  tmpvar_6 = tmpvar_22;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float tmpvar_32;
  mediump float dist_33;
  lowp float tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_33 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (float((dist_33 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_32 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_38;
  lowp vec3 tmpvar_39;
  tmpvar_39 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_39;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_32;
  mediump vec3 normalWorld_40;
  normalWorld_40 = worldN_4;
  mediump vec4 realtimeDirTex_41;
  mediump vec3 tmpvar_42;
  tmpvar_42 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_43;
  tmpvar_43 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 tmpvar_44;
  tmpvar_44 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD8.zw);
  realtimeDirTex_41 = tmpvar_44;
  lowp vec4 dirTex_45;
  dirTex_45 = realtimeDirTex_41;
  lowp vec3 y_46;
  y_46 = (dirTex_45.xyz - 0.5);
  tmpvar_2 = tmpvar_42;
  lowp vec4 c_47;
  lowp vec4 c_48;
  lowp float diff_49;
  mediump float tmpvar_50;
  tmpvar_50 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_49 = tmpvar_50;
  mediump vec3 tmpvar_51;
  tmpvar_51 = ((mixedDiffuse_10.xyz * tmpvar_42) * diff_49);
  c_48.xyz = tmpvar_51;
  c_48.w = tmpvar_8;
  c_47.w = c_48.w;
  mediump vec3 tmpvar_52;
  tmpvar_52 = (c_48.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_43.w) * tmpvar_43.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_40, y_46) + 0.5))
   / dirTex_45.w)));
  c_47.xyz = tmpvar_52;
  lowp vec4 color_53;
  color_53.xyz = (c_47.xyz * tmpvar_8);
  color_53.w = 1.0;
  c_5.xyz = color_53.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  tmpvar_6.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_World2Shadow[0] * cse_10);
  tmpvar_7 = tmpvar_22;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  lowp vec3 worldN_2;
  lowp vec4 c_3;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 nrm_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_5 = tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_10;
  tmpvar_10 = (splat_control_5 / (tmpvar_9 + 0.001));
  splat_control_5 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_10.x * tmpvar_11);
  mixedDiffuse_6 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (mixedDiffuse_6 + (tmpvar_10.y * tmpvar_13));
  mixedDiffuse_6 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_6 + (tmpvar_10.z * tmpvar_15));
  mixedDiffuse_6 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_6 + (tmpvar_10.w * tmpvar_17));
  mixedDiffuse_6 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_10.x * tmpvar_19);
  nrm_7 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (nrm_7 + (tmpvar_10.y * tmpvar_21));
  nrm_7 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (nrm_7 + (tmpvar_10.z * tmpvar_23));
  nrm_7 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_7 + (tmpvar_10.w * tmpvar_25));
  nrm_7 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((nrm_7.xyz * 2.0) - 1.0);
  tmpvar_4 = tmpvar_9;
  lowp float tmpvar_28;
  mediump float dist_29;
  lowp float tmpvar_30;
  tmpvar_30 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_29 = tmpvar_30;
  mediump float tmpvar_31;
  tmpvar_31 = max (float((dist_29 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_28 = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD2.xyz, tmpvar_27);
  worldN_2.x = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD3.xyz, tmpvar_27);
  worldN_2.y = tmpvar_33;
  highp float tmpvar_34;
  tmpvar_34 = dot (xlv_TEXCOORD4.xyz, tmpvar_27);
  worldN_2.z = tmpvar_34;
  tmpvar_1 = tmpvar_28;
  mediump vec3 normalWorld_35;
  normalWorld_35 = worldN_2;
  mediump vec3 tmpvar_36;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (unity_Lightmap, xlv_TEXCOORD6.xy);
  mediump vec3 tmpvar_38;
  tmpvar_38 = (2.0 * tmpvar_37.xyz);
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture2D (unity_LightmapInd, xlv_TEXCOORD6.xy);
  lowp vec3 y_40;
  y_40 = (tmpvar_39.xyz - 0.5);
  tmpvar_36 = ((tmpvar_38 * (
    dot (normalWorld_35, y_40)
   + 0.5)) / tmpvar_39.w);
  tmpvar_36 = max (min (tmpvar_36, (tmpvar_37.xyz * tmpvar_1)), (tmpvar_36 * tmpvar_1));
  lowp vec4 c_41;
  lowp vec4 c_42;
  c_42.xyz = vec3(0.0, 0.0, 0.0);
  c_42.w = tmpvar_4;
  c_41.w = c_42.w;
  mediump vec3 tmpvar_43;
  tmpvar_43 = (mixedDiffuse_6.xyz * tmpvar_36);
  c_41.xyz = tmpvar_43;
  lowp vec4 color_44;
  color_44.xyz = (c_41.xyz * tmpvar_4);
  color_44.w = 1.0;
  c_3.xyz = color_44.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_6.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_World2Shadow[0] * cse_10);
  tmpvar_7 = tmpvar_22;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  lowp vec3 worldN_2;
  lowp vec4 c_3;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 nrm_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_5 = tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_10;
  tmpvar_10 = (splat_control_5 / (tmpvar_9 + 0.001));
  splat_control_5 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_10.x * tmpvar_11);
  mixedDiffuse_6 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (mixedDiffuse_6 + (tmpvar_10.y * tmpvar_13));
  mixedDiffuse_6 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_6 + (tmpvar_10.z * tmpvar_15));
  mixedDiffuse_6 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_6 + (tmpvar_10.w * tmpvar_17));
  mixedDiffuse_6 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_10.x * tmpvar_19);
  nrm_7 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (nrm_7 + (tmpvar_10.y * tmpvar_21));
  nrm_7 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (nrm_7 + (tmpvar_10.z * tmpvar_23));
  nrm_7 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_7 + (tmpvar_10.w * tmpvar_25));
  nrm_7 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((nrm_7.xyz * 2.0) - 1.0);
  tmpvar_4 = tmpvar_9;
  lowp float tmpvar_28;
  mediump float dist_29;
  lowp float tmpvar_30;
  tmpvar_30 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_29 = tmpvar_30;
  mediump float tmpvar_31;
  tmpvar_31 = max (float((dist_29 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_28 = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD2.xyz, tmpvar_27);
  worldN_2.x = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD3.xyz, tmpvar_27);
  worldN_2.y = tmpvar_33;
  highp float tmpvar_34;
  tmpvar_34 = dot (xlv_TEXCOORD4.xyz, tmpvar_27);
  worldN_2.z = tmpvar_34;
  tmpvar_1 = tmpvar_28;
  mediump vec3 normalWorld_35;
  normalWorld_35 = worldN_2;
  mediump vec4 realtimeDirTex_36;
  mediump vec3 tmpvar_37;
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_Lightmap, xlv_TEXCOORD6.xy);
  mediump vec3 tmpvar_39;
  tmpvar_39 = (2.0 * tmpvar_38.xyz);
  lowp vec4 tmpvar_40;
  tmpvar_40 = texture2D (unity_LightmapInd, xlv_TEXCOORD6.xy);
  lowp vec3 y_41;
  y_41 = (tmpvar_40.xyz - 0.5);
  tmpvar_37 = ((tmpvar_39 * (
    dot (normalWorld_35, y_41)
   + 0.5)) / tmpvar_40.w);
  tmpvar_37 = max (min (tmpvar_37, (tmpvar_38.xyz * tmpvar_1)), (tmpvar_37 * tmpvar_1));
  lowp vec4 tmpvar_42;
  tmpvar_42 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD6.zw);
  lowp vec4 tmpvar_43;
  tmpvar_43 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD6.zw);
  realtimeDirTex_36 = tmpvar_43;
  lowp vec4 dirTex_44;
  dirTex_44 = realtimeDirTex_36;
  lowp vec3 y_45;
  y_45 = (dirTex_44.xyz - 0.5);
  tmpvar_37 = (tmpvar_37 + ((
    pow (((unity_DynamicLightmap_HDR.x * tmpvar_42.w) * tmpvar_42.xyz), unity_DynamicLightmap_HDR.yyy)
   * 
    (dot (normalWorld_35, y_45) + 0.5)
  ) / dirTex_44.w));
  lowp vec4 c_46;
  lowp vec4 c_47;
  c_47.xyz = vec3(0.0, 0.0, 0.0);
  c_47.w = tmpvar_4;
  c_46.w = c_47.w;
  mediump vec3 tmpvar_48;
  tmpvar_48 = (mixedDiffuse_6.xyz * tmpvar_37);
  c_46.xyz = tmpvar_48;
  lowp vec4 color_49;
  color_49.xyz = (c_46.xyz * tmpvar_4);
  color_49.w = 1.0;
  c_3.xyz = color_49.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  highp vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  highp vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * _glesNormal.x)
   + 
    (v_11.xyz * _glesNormal.y)
  ) + (v_12.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_13;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_17;
  tmpvar_17 = -(tmpvar_16);
  worldBinormal_1 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.x = worldTangent_2.x;
  tmpvar_18.y = worldBinormal_1.x;
  tmpvar_18.z = worldNormal_3.x;
  tmpvar_18.w = tmpvar_9.x;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.y;
  tmpvar_19.y = worldBinormal_1.y;
  tmpvar_19.z = worldNormal_3.y;
  tmpvar_19.w = tmpvar_9.y;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.z;
  tmpvar_20.y = worldBinormal_1.z;
  tmpvar_20.z = worldNormal_3.z;
  tmpvar_20.w = tmpvar_9.z;
  lowp vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xyz = worldNormal_3;
  mediump vec3 tmpvar_22;
  mediump vec4 normal_23;
  normal_23 = tmpvar_21;
  mediump vec3 x2_24;
  mediump vec4 tmpvar_25;
  tmpvar_25 = (normal_23.xyzz * normal_23.yzzx);
  x2_24.x = dot (unity_SHBr, tmpvar_25);
  x2_24.y = dot (unity_SHBg, tmpvar_25);
  x2_24.z = dot (unity_SHBb, tmpvar_25);
  tmpvar_22 = (x2_24 + (unity_SHC.xyz * (
    (normal_23.x * normal_23.x)
   - 
    (normal_23.y * normal_23.y)
  )));
  highp vec3 lightColor0_26;
  lightColor0_26 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_27;
  lightColor1_27 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_28;
  lightColor2_28 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_29;
  lightColor3_29 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_30;
  lightAttenSq_30 = unity_4LightAtten0;
  highp vec3 normal_31;
  normal_31 = worldNormal_3;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_35;
  tmpvar_35 = (((tmpvar_32 * tmpvar_32) + (tmpvar_33 * tmpvar_33)) + (tmpvar_34 * tmpvar_34));
  highp vec4 tmpvar_36;
  tmpvar_36 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_32 * normal_31.x) + (tmpvar_33 * normal_31.y)) + (tmpvar_34 * normal_31.z))
   * 
    inversesqrt(tmpvar_35)
  )) * (1.0/((1.0 + 
    (tmpvar_35 * lightAttenSq_30)
  ))));
  highp vec3 tmpvar_37;
  tmpvar_37 = (tmpvar_22 + ((
    ((lightColor0_26 * tmpvar_36.x) + (lightColor1_27 * tmpvar_36.y))
   + 
    (lightColor2_28 * tmpvar_36.z)
  ) + (lightColor3_29 * tmpvar_36.w)));
  tmpvar_6 = tmpvar_37;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_18;
  xlv_TEXCOORD3 = tmpvar_19;
  xlv_TEXCOORD4 = tmpvar_20;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_30);
  worldN_3.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_30);
  worldN_3.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_30);
  worldN_3.z = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_34;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_35;
  normalWorld_35 = worldN_3;
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = normalWorld_35;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, tmpvar_36);
  x1_37.y = dot (unity_SHAg, tmpvar_36);
  x1_37.z = dot (unity_SHAb, tmpvar_36);
  lowp vec4 c_38;
  lowp vec4 c_39;
  lowp float diff_40;
  mediump float tmpvar_41;
  tmpvar_41 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_40 = tmpvar_41;
  mediump vec3 tmpvar_42;
  tmpvar_42 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_40);
  c_39.xyz = tmpvar_42;
  c_39.w = tmpvar_7;
  c_38.w = c_39.w;
  mediump vec3 tmpvar_43;
  tmpvar_43 = (c_39.xyz + (mixedDiffuse_9.xyz * (xlv_TEXCOORD6 + x1_37)));
  c_38.xyz = tmpvar_43;
  lowp vec4 color_44;
  color_44.xyz = (c_38.xyz * tmpvar_7);
  color_44.w = 1.0;
  c_4.xyz = color_44.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_7.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_7.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * tmpvar_7.xyz));
  worldTangent_2 = tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_16;
  tmpvar_16 = -(tmpvar_15);
  worldBinormal_1 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.x = worldTangent_2.x;
  tmpvar_17.y = worldBinormal_1.x;
  tmpvar_17.z = worldNormal_3.x;
  tmpvar_17.w = tmpvar_8.x;
  highp vec4 tmpvar_18;
  tmpvar_18.x = worldTangent_2.y;
  tmpvar_18.y = worldBinormal_1.y;
  tmpvar_18.z = worldNormal_3.y;
  tmpvar_18.w = tmpvar_8.y;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.z;
  tmpvar_19.y = worldBinormal_1.z;
  tmpvar_19.z = worldNormal_3.z;
  tmpvar_19.w = tmpvar_8.z;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_17;
  xlv_TEXCOORD3 = tmpvar_18;
  xlv_TEXCOORD4 = tmpvar_19;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD8 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_30);
  worldN_3.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_30);
  worldN_3.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_30);
  worldN_3.z = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_34;
  tmpvar_2 = lightDir_5;
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 c_36;
  lowp vec4 c_37;
  lowp float diff_38;
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_38 = tmpvar_39;
  mediump vec3 tmpvar_40;
  tmpvar_40 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_38);
  c_37.xyz = tmpvar_40;
  c_37.w = tmpvar_7;
  c_36.w = c_37.w;
  mediump vec3 tmpvar_41;
  tmpvar_41 = (c_37.xyz + (mixedDiffuse_9.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_35.w) * tmpvar_35.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_36.xyz = tmpvar_41;
  lowp vec4 color_42;
  color_42.xyz = (c_36.xyz * tmpvar_7);
  color_42.w = 1.0;
  c_4.xyz = color_42.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_7.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_7.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_9;
  v_9.x = _World2Object[0].x;
  v_9.y = _World2Object[1].x;
  v_9.z = _World2Object[2].x;
  v_9.w = _World2Object[3].x;
  highp vec4 v_10;
  v_10.x = _World2Object[0].y;
  v_10.y = _World2Object[1].y;
  v_10.z = _World2Object[2].y;
  v_10.w = _World2Object[3].y;
  highp vec4 v_11;
  v_11.x = _World2Object[0].z;
  v_11.y = _World2Object[1].z;
  v_11.z = _World2Object[2].z;
  v_11.w = _World2Object[3].z;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(((
    (v_9.xyz * _glesNormal.x)
   + 
    (v_10.xyz * _glesNormal.y)
  ) + (v_11.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * tmpvar_7.xyz));
  worldTangent_2 = tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_16;
  tmpvar_16 = -(tmpvar_15);
  worldBinormal_1 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.x = worldTangent_2.x;
  tmpvar_17.y = worldBinormal_1.x;
  tmpvar_17.z = worldNormal_3.x;
  tmpvar_17.w = tmpvar_8.x;
  highp vec4 tmpvar_18;
  tmpvar_18.x = worldTangent_2.y;
  tmpvar_18.y = worldBinormal_1.y;
  tmpvar_18.z = worldNormal_3.y;
  tmpvar_18.w = tmpvar_8.y;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.z;
  tmpvar_19.y = worldBinormal_1.z;
  tmpvar_19.z = worldNormal_3.z;
  tmpvar_19.w = tmpvar_8.z;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_17;
  xlv_TEXCOORD3 = tmpvar_18;
  xlv_TEXCOORD4 = tmpvar_19;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD8 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_30);
  worldN_3.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_30);
  worldN_3.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_30);
  worldN_3.z = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_34;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_35;
  normalWorld_35 = worldN_3;
  mediump vec4 realtimeDirTex_36;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD8.zw);
  realtimeDirTex_36 = tmpvar_38;
  lowp vec4 dirTex_39;
  dirTex_39 = realtimeDirTex_36;
  lowp vec3 y_40;
  y_40 = (dirTex_39.xyz - 0.5);
  lowp vec4 c_41;
  lowp vec4 c_42;
  lowp float diff_43;
  mediump float tmpvar_44;
  tmpvar_44 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_43 = tmpvar_44;
  mediump vec3 tmpvar_45;
  tmpvar_45 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_43);
  c_42.xyz = tmpvar_45;
  c_42.w = tmpvar_7;
  c_41.w = c_42.w;
  mediump vec3 tmpvar_46;
  tmpvar_46 = (c_42.xyz + (mixedDiffuse_9.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_35, y_40) + 0.5))
   / dirTex_39.w)));
  c_41.xyz = tmpvar_46;
  lowp vec4 color_47;
  color_47.xyz = (c_41.xyz * tmpvar_7);
  color_47.w = 1.0;
  c_4.xyz = color_47.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_10;
  highp vec4 cse_11;
  cse_11 = (_Object2World * _glesVertex);
  tmpvar_10 = cse_11.xyz;
  highp vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  highp vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  highp vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * _glesNormal.x)
   + 
    (v_13.xyz * _glesNormal.y)
  ) + (v_14.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_15;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_19;
  tmpvar_19 = -(tmpvar_18);
  worldBinormal_1 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.x;
  tmpvar_20.y = worldBinormal_1.x;
  tmpvar_20.z = worldNormal_3.x;
  tmpvar_20.w = tmpvar_10.x;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.y;
  tmpvar_21.y = worldBinormal_1.y;
  tmpvar_21.z = worldNormal_3.y;
  tmpvar_21.w = tmpvar_10.y;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.z;
  tmpvar_22.y = worldBinormal_1.z;
  tmpvar_22.z = worldNormal_3.z;
  tmpvar_22.w = tmpvar_10.z;
  lowp vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = worldNormal_3;
  mediump vec3 tmpvar_24;
  mediump vec4 normal_25;
  normal_25 = tmpvar_23;
  mediump vec3 x2_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_25.xyzz * normal_25.yzzx);
  x2_26.x = dot (unity_SHBr, tmpvar_27);
  x2_26.y = dot (unity_SHBg, tmpvar_27);
  x2_26.z = dot (unity_SHBb, tmpvar_27);
  tmpvar_24 = (x2_26 + (unity_SHC.xyz * (
    (normal_25.x * normal_25.x)
   - 
    (normal_25.y * normal_25.y)
  )));
  highp vec3 lightColor0_28;
  lightColor0_28 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_29;
  lightColor1_29 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_30;
  lightColor2_30 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_31;
  lightColor3_31 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_32;
  lightAttenSq_32 = unity_4LightAtten0;
  highp vec3 normal_33;
  normal_33 = worldNormal_3;
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosX0 - cse_11.x);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosY0 - cse_11.y);
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_4LightPosZ0 - cse_11.z);
  highp vec4 tmpvar_37;
  tmpvar_37 = (((tmpvar_34 * tmpvar_34) + (tmpvar_35 * tmpvar_35)) + (tmpvar_36 * tmpvar_36));
  highp vec4 tmpvar_38;
  tmpvar_38 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_34 * normal_33.x) + (tmpvar_35 * normal_33.y)) + (tmpvar_36 * normal_33.z))
   * 
    inversesqrt(tmpvar_37)
  )) * (1.0/((1.0 + 
    (tmpvar_37 * lightAttenSq_32)
  ))));
  highp vec3 tmpvar_39;
  tmpvar_39 = (tmpvar_24 + ((
    ((lightColor0_28 * tmpvar_38.x) + (lightColor1_29 * tmpvar_38.y))
   + 
    (lightColor2_30 * tmpvar_38.z)
  ) + (lightColor3_31 * tmpvar_38.w)));
  tmpvar_6 = tmpvar_39;
  highp vec4 tmpvar_40;
  tmpvar_40 = (unity_World2Shadow[0] * cse_11);
  tmpvar_7 = tmpvar_40;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_20;
  xlv_TEXCOORD3 = tmpvar_21;
  xlv_TEXCOORD4 = tmpvar_22;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float tmpvar_32;
  mediump float dist_33;
  lowp float tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_33 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (float((dist_33 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_32 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_38;
  lowp vec3 tmpvar_39;
  tmpvar_39 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_39;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_32;
  mediump vec3 normalWorld_40;
  normalWorld_40 = worldN_4;
  mediump vec3 tmpvar_41;
  mediump vec4 tmpvar_42;
  tmpvar_42.w = 1.0;
  tmpvar_42.xyz = normalWorld_40;
  mediump vec3 x1_43;
  x1_43.x = dot (unity_SHAr, tmpvar_42);
  x1_43.y = dot (unity_SHAg, tmpvar_42);
  x1_43.z = dot (unity_SHAb, tmpvar_42);
  tmpvar_41 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_41;
  lowp vec4 c_44;
  lowp vec4 c_45;
  lowp float diff_46;
  mediump float tmpvar_47;
  tmpvar_47 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_46 = tmpvar_47;
  mediump vec3 tmpvar_48;
  tmpvar_48 = ((mixedDiffuse_10.xyz * tmpvar_41) * diff_46);
  c_45.xyz = tmpvar_48;
  c_45.w = tmpvar_8;
  c_44.w = c_45.w;
  mediump vec3 tmpvar_49;
  tmpvar_49 = (c_45.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD6 + x1_43)));
  c_44.xyz = tmpvar_49;
  lowp vec4 color_50;
  color_50.xyz = (c_44.xyz * tmpvar_8);
  color_50.w = 1.0;
  c_5.xyz = color_50.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_World2Shadow[0] * cse_10);
  tmpvar_6 = tmpvar_22;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float tmpvar_32;
  mediump float dist_33;
  lowp float tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_33 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (float((dist_33 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_32 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_38;
  lowp vec3 tmpvar_39;
  tmpvar_39 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_39;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_32;
  mediump vec3 tmpvar_40;
  tmpvar_40 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  tmpvar_2 = tmpvar_40;
  lowp vec4 c_42;
  lowp vec4 c_43;
  lowp float diff_44;
  mediump float tmpvar_45;
  tmpvar_45 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_44 = tmpvar_45;
  mediump vec3 tmpvar_46;
  tmpvar_46 = ((mixedDiffuse_10.xyz * tmpvar_40) * diff_44);
  c_43.xyz = tmpvar_46;
  c_43.w = tmpvar_8;
  c_42.w = c_43.w;
  mediump vec3 tmpvar_47;
  tmpvar_47 = (c_43.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_41.w) * tmpvar_41.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_42.xyz = tmpvar_47;
  lowp vec4 color_48;
  color_48.xyz = (c_42.xyz * tmpvar_8);
  color_48.w = 1.0;
  c_5.xyz = color_48.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_World2Shadow[0] * cse_10);
  tmpvar_6 = tmpvar_22;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float tmpvar_32;
  mediump float dist_33;
  lowp float tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_33 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (float((dist_33 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_32 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_38;
  lowp vec3 tmpvar_39;
  tmpvar_39 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_39;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_32;
  mediump vec3 normalWorld_40;
  normalWorld_40 = worldN_4;
  mediump vec4 realtimeDirTex_41;
  mediump vec3 tmpvar_42;
  tmpvar_42 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_43;
  tmpvar_43 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 tmpvar_44;
  tmpvar_44 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD8.zw);
  realtimeDirTex_41 = tmpvar_44;
  lowp vec4 dirTex_45;
  dirTex_45 = realtimeDirTex_41;
  lowp vec3 y_46;
  y_46 = (dirTex_45.xyz - 0.5);
  tmpvar_2 = tmpvar_42;
  lowp vec4 c_47;
  lowp vec4 c_48;
  lowp float diff_49;
  mediump float tmpvar_50;
  tmpvar_50 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_49 = tmpvar_50;
  mediump vec3 tmpvar_51;
  tmpvar_51 = ((mixedDiffuse_10.xyz * tmpvar_42) * diff_49);
  c_48.xyz = tmpvar_51;
  c_48.w = tmpvar_8;
  c_47.w = c_48.w;
  mediump vec3 tmpvar_52;
  tmpvar_52 = (c_48.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_43.w) * tmpvar_43.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_40, y_46) + 0.5))
   / dirTex_45.w)));
  c_47.xyz = tmpvar_52;
  lowp vec4 color_53;
  color_53.xyz = (c_47.xyz * tmpvar_8);
  color_53.w = 1.0;
  c_5.xyz = color_53.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  lowp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = worldNormal_3;
  mediump vec4 normal_23;
  normal_23 = tmpvar_22;
  mediump vec3 x2_24;
  mediump vec4 tmpvar_25;
  tmpvar_25 = (normal_23.xyzz * normal_23.yzzx);
  x2_24.x = dot (unity_SHBr, tmpvar_25);
  x2_24.y = dot (unity_SHBg, tmpvar_25);
  x2_24.z = dot (unity_SHBb, tmpvar_25);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_World2Shadow[0] * cse_10);
  tmpvar_6 = tmpvar_26;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = (x2_24 + (unity_SHC.xyz * (
    (normal_23.x * normal_23.x)
   - 
    (normal_23.y * normal_23.y)
  )));
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float shadow_32;
  lowp float tmpvar_33;
  tmpvar_33 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_34;
  tmpvar_34 = (_LightShadowData.x + (tmpvar_33 * (1.0 - _LightShadowData.x)));
  shadow_32 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_37;
  lowp vec3 tmpvar_38;
  tmpvar_38 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_38;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_32;
  mediump vec3 normalWorld_39;
  normalWorld_39 = worldN_4;
  mediump vec3 tmpvar_40;
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = normalWorld_39;
  mediump vec3 x1_42;
  x1_42.x = dot (unity_SHAr, tmpvar_41);
  x1_42.y = dot (unity_SHAg, tmpvar_41);
  x1_42.z = dot (unity_SHAb, tmpvar_41);
  tmpvar_40 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_40;
  lowp vec4 c_43;
  lowp vec4 c_44;
  lowp float diff_45;
  mediump float tmpvar_46;
  tmpvar_46 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_45 = tmpvar_46;
  mediump vec3 tmpvar_47;
  tmpvar_47 = ((mixedDiffuse_10.xyz * tmpvar_40) * diff_45);
  c_44.xyz = tmpvar_47;
  c_44.w = tmpvar_8;
  c_43.w = c_44.w;
  mediump vec3 tmpvar_48;
  tmpvar_48 = (c_44.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD6 + x1_42)));
  c_43.xyz = tmpvar_48;
  lowp vec4 color_49;
  color_49.xyz = (c_43.xyz * tmpvar_8);
  color_49.w = 1.0;
  c_5.xyz = color_49.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_World2Shadow[0] * cse_10);
  tmpvar_6 = tmpvar_22;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float shadow_32;
  lowp float tmpvar_33;
  tmpvar_33 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_34;
  tmpvar_34 = (_LightShadowData.x + (tmpvar_33 * (1.0 - _LightShadowData.x)));
  shadow_32 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_37;
  lowp vec3 tmpvar_38;
  tmpvar_38 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_38;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_32;
  mediump vec3 tmpvar_39;
  tmpvar_39 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_40;
  tmpvar_40 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  tmpvar_2 = tmpvar_39;
  lowp vec4 c_41;
  lowp vec4 c_42;
  lowp float diff_43;
  mediump float tmpvar_44;
  tmpvar_44 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_43 = tmpvar_44;
  mediump vec3 tmpvar_45;
  tmpvar_45 = ((mixedDiffuse_10.xyz * tmpvar_39) * diff_43);
  c_42.xyz = tmpvar_45;
  c_42.w = tmpvar_8;
  c_41.w = c_42.w;
  mediump vec3 tmpvar_46;
  tmpvar_46 = (c_42.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_40.w) * tmpvar_40.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_41.xyz = tmpvar_46;
  lowp vec4 color_47;
  color_47.xyz = (c_41.xyz * tmpvar_8);
  color_47.w = 1.0;
  c_5.xyz = color_47.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_World2Shadow[0] * cse_10);
  tmpvar_6 = tmpvar_22;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float shadow_32;
  lowp float tmpvar_33;
  tmpvar_33 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_34;
  tmpvar_34 = (_LightShadowData.x + (tmpvar_33 * (1.0 - _LightShadowData.x)));
  shadow_32 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_37;
  lowp vec3 tmpvar_38;
  tmpvar_38 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_38;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_32;
  mediump vec3 normalWorld_39;
  normalWorld_39 = worldN_4;
  mediump vec4 realtimeDirTex_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_42;
  tmpvar_42 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 tmpvar_43;
  tmpvar_43 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD8.zw);
  realtimeDirTex_40 = tmpvar_43;
  lowp vec4 dirTex_44;
  dirTex_44 = realtimeDirTex_40;
  lowp vec3 y_45;
  y_45 = (dirTex_44.xyz - 0.5);
  tmpvar_2 = tmpvar_41;
  lowp vec4 c_46;
  lowp vec4 c_47;
  lowp float diff_48;
  mediump float tmpvar_49;
  tmpvar_49 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_48 = tmpvar_49;
  mediump vec3 tmpvar_50;
  tmpvar_50 = ((mixedDiffuse_10.xyz * tmpvar_41) * diff_48);
  c_47.xyz = tmpvar_50;
  c_47.w = tmpvar_8;
  c_46.w = c_47.w;
  mediump vec3 tmpvar_51;
  tmpvar_51 = (c_47.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_42.w) * tmpvar_42.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_39, y_45) + 0.5))
   / dirTex_44.w)));
  c_46.xyz = tmpvar_51;
  lowp vec4 color_52;
  color_52.xyz = (c_46.xyz * tmpvar_8);
  color_52.w = 1.0;
  c_5.xyz = color_52.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  tmpvar_6.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_World2Shadow[0] * cse_10);
  tmpvar_7 = tmpvar_22;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  lowp vec3 worldN_2;
  lowp vec4 c_3;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 nrm_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_5 = tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_10;
  tmpvar_10 = (splat_control_5 / (tmpvar_9 + 0.001));
  splat_control_5 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_10.x * tmpvar_11);
  mixedDiffuse_6 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (mixedDiffuse_6 + (tmpvar_10.y * tmpvar_13));
  mixedDiffuse_6 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_6 + (tmpvar_10.z * tmpvar_15));
  mixedDiffuse_6 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_6 + (tmpvar_10.w * tmpvar_17));
  mixedDiffuse_6 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_10.x * tmpvar_19);
  nrm_7 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (nrm_7 + (tmpvar_10.y * tmpvar_21));
  nrm_7 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (nrm_7 + (tmpvar_10.z * tmpvar_23));
  nrm_7 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_7 + (tmpvar_10.w * tmpvar_25));
  nrm_7 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((nrm_7.xyz * 2.0) - 1.0);
  tmpvar_4 = tmpvar_9;
  lowp float shadow_28;
  lowp float tmpvar_29;
  tmpvar_29 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_30;
  tmpvar_30 = (_LightShadowData.x + (tmpvar_29 * (1.0 - _LightShadowData.x)));
  shadow_28 = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_27);
  worldN_2.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_27);
  worldN_2.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_27);
  worldN_2.z = tmpvar_33;
  tmpvar_1 = shadow_28;
  mediump vec3 normalWorld_34;
  normalWorld_34 = worldN_2;
  mediump vec3 tmpvar_35;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2D (unity_Lightmap, xlv_TEXCOORD6.xy);
  mediump vec3 tmpvar_37;
  tmpvar_37 = (2.0 * tmpvar_36.xyz);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_LightmapInd, xlv_TEXCOORD6.xy);
  lowp vec3 y_39;
  y_39 = (tmpvar_38.xyz - 0.5);
  tmpvar_35 = ((tmpvar_37 * (
    dot (normalWorld_34, y_39)
   + 0.5)) / tmpvar_38.w);
  tmpvar_35 = max (min (tmpvar_35, (tmpvar_36.xyz * tmpvar_1)), (tmpvar_35 * tmpvar_1));
  lowp vec4 c_40;
  lowp vec4 c_41;
  c_41.xyz = vec3(0.0, 0.0, 0.0);
  c_41.w = tmpvar_4;
  c_40.w = c_41.w;
  mediump vec3 tmpvar_42;
  tmpvar_42 = (mixedDiffuse_6.xyz * tmpvar_35);
  c_40.xyz = tmpvar_42;
  lowp vec4 color_43;
  color_43.xyz = (c_40.xyz * tmpvar_4);
  color_43.w = 1.0;
  c_3.xyz = color_43.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_6.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_World2Shadow[0] * cse_10);
  tmpvar_7 = tmpvar_22;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  lowp vec3 worldN_2;
  lowp vec4 c_3;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 nrm_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_5 = tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_10;
  tmpvar_10 = (splat_control_5 / (tmpvar_9 + 0.001));
  splat_control_5 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_10.x * tmpvar_11);
  mixedDiffuse_6 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (mixedDiffuse_6 + (tmpvar_10.y * tmpvar_13));
  mixedDiffuse_6 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_6 + (tmpvar_10.z * tmpvar_15));
  mixedDiffuse_6 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_6 + (tmpvar_10.w * tmpvar_17));
  mixedDiffuse_6 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_10.x * tmpvar_19);
  nrm_7 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (nrm_7 + (tmpvar_10.y * tmpvar_21));
  nrm_7 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (nrm_7 + (tmpvar_10.z * tmpvar_23));
  nrm_7 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_7 + (tmpvar_10.w * tmpvar_25));
  nrm_7 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((nrm_7.xyz * 2.0) - 1.0);
  tmpvar_4 = tmpvar_9;
  lowp float shadow_28;
  lowp float tmpvar_29;
  tmpvar_29 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_30;
  tmpvar_30 = (_LightShadowData.x + (tmpvar_29 * (1.0 - _LightShadowData.x)));
  shadow_28 = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_27);
  worldN_2.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_27);
  worldN_2.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_27);
  worldN_2.z = tmpvar_33;
  tmpvar_1 = shadow_28;
  mediump vec3 normalWorld_34;
  normalWorld_34 = worldN_2;
  mediump vec4 realtimeDirTex_35;
  mediump vec3 tmpvar_36;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (unity_Lightmap, xlv_TEXCOORD6.xy);
  mediump vec3 tmpvar_38;
  tmpvar_38 = (2.0 * tmpvar_37.xyz);
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture2D (unity_LightmapInd, xlv_TEXCOORD6.xy);
  lowp vec3 y_40;
  y_40 = (tmpvar_39.xyz - 0.5);
  tmpvar_36 = ((tmpvar_38 * (
    dot (normalWorld_34, y_40)
   + 0.5)) / tmpvar_39.w);
  tmpvar_36 = max (min (tmpvar_36, (tmpvar_37.xyz * tmpvar_1)), (tmpvar_36 * tmpvar_1));
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD6.zw);
  lowp vec4 tmpvar_42;
  tmpvar_42 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD6.zw);
  realtimeDirTex_35 = tmpvar_42;
  lowp vec4 dirTex_43;
  dirTex_43 = realtimeDirTex_35;
  lowp vec3 y_44;
  y_44 = (dirTex_43.xyz - 0.5);
  tmpvar_36 = (tmpvar_36 + ((
    pow (((unity_DynamicLightmap_HDR.x * tmpvar_41.w) * tmpvar_41.xyz), unity_DynamicLightmap_HDR.yyy)
   * 
    (dot (normalWorld_34, y_44) + 0.5)
  ) / dirTex_43.w));
  lowp vec4 c_45;
  lowp vec4 c_46;
  c_46.xyz = vec3(0.0, 0.0, 0.0);
  c_46.w = tmpvar_4;
  c_45.w = c_46.w;
  mediump vec3 tmpvar_47;
  tmpvar_47 = (mixedDiffuse_6.xyz * tmpvar_36);
  c_45.xyz = tmpvar_47;
  lowp vec4 color_48;
  color_48.xyz = (c_45.xyz * tmpvar_4);
  color_48.w = 1.0;
  c_3.xyz = color_48.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_10;
  highp vec4 cse_11;
  cse_11 = (_Object2World * _glesVertex);
  tmpvar_10 = cse_11.xyz;
  highp vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  highp vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  highp vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * _glesNormal.x)
   + 
    (v_13.xyz * _glesNormal.y)
  ) + (v_14.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_15;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_19;
  tmpvar_19 = -(tmpvar_18);
  worldBinormal_1 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.x;
  tmpvar_20.y = worldBinormal_1.x;
  tmpvar_20.z = worldNormal_3.x;
  tmpvar_20.w = tmpvar_10.x;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.y;
  tmpvar_21.y = worldBinormal_1.y;
  tmpvar_21.z = worldNormal_3.y;
  tmpvar_21.w = tmpvar_10.y;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.z;
  tmpvar_22.y = worldBinormal_1.z;
  tmpvar_22.z = worldNormal_3.z;
  tmpvar_22.w = tmpvar_10.z;
  lowp vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = worldNormal_3;
  mediump vec3 tmpvar_24;
  mediump vec4 normal_25;
  normal_25 = tmpvar_23;
  mediump vec3 x2_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_25.xyzz * normal_25.yzzx);
  x2_26.x = dot (unity_SHBr, tmpvar_27);
  x2_26.y = dot (unity_SHBg, tmpvar_27);
  x2_26.z = dot (unity_SHBb, tmpvar_27);
  tmpvar_24 = (x2_26 + (unity_SHC.xyz * (
    (normal_25.x * normal_25.x)
   - 
    (normal_25.y * normal_25.y)
  )));
  highp vec3 lightColor0_28;
  lightColor0_28 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_29;
  lightColor1_29 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_30;
  lightColor2_30 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_31;
  lightColor3_31 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_32;
  lightAttenSq_32 = unity_4LightAtten0;
  highp vec3 normal_33;
  normal_33 = worldNormal_3;
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosX0 - cse_11.x);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosY0 - cse_11.y);
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_4LightPosZ0 - cse_11.z);
  highp vec4 tmpvar_37;
  tmpvar_37 = (((tmpvar_34 * tmpvar_34) + (tmpvar_35 * tmpvar_35)) + (tmpvar_36 * tmpvar_36));
  highp vec4 tmpvar_38;
  tmpvar_38 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_34 * normal_33.x) + (tmpvar_35 * normal_33.y)) + (tmpvar_36 * normal_33.z))
   * 
    inversesqrt(tmpvar_37)
  )) * (1.0/((1.0 + 
    (tmpvar_37 * lightAttenSq_32)
  ))));
  highp vec3 tmpvar_39;
  tmpvar_39 = (tmpvar_24 + ((
    ((lightColor0_28 * tmpvar_38.x) + (lightColor1_29 * tmpvar_38.y))
   + 
    (lightColor2_30 * tmpvar_38.z)
  ) + (lightColor3_31 * tmpvar_38.w)));
  tmpvar_6 = tmpvar_39;
  highp vec4 tmpvar_40;
  tmpvar_40 = (unity_World2Shadow[0] * cse_11);
  tmpvar_7 = tmpvar_40;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_20;
  xlv_TEXCOORD3 = tmpvar_21;
  xlv_TEXCOORD4 = tmpvar_22;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD6 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float shadow_32;
  lowp float tmpvar_33;
  tmpvar_33 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_34;
  tmpvar_34 = (_LightShadowData.x + (tmpvar_33 * (1.0 - _LightShadowData.x)));
  shadow_32 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_37;
  lowp vec3 tmpvar_38;
  tmpvar_38 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_38;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_32;
  mediump vec3 normalWorld_39;
  normalWorld_39 = worldN_4;
  mediump vec3 tmpvar_40;
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = normalWorld_39;
  mediump vec3 x1_42;
  x1_42.x = dot (unity_SHAr, tmpvar_41);
  x1_42.y = dot (unity_SHAg, tmpvar_41);
  x1_42.z = dot (unity_SHAb, tmpvar_41);
  tmpvar_40 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_40;
  lowp vec4 c_43;
  lowp vec4 c_44;
  lowp float diff_45;
  mediump float tmpvar_46;
  tmpvar_46 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_45 = tmpvar_46;
  mediump vec3 tmpvar_47;
  tmpvar_47 = ((mixedDiffuse_10.xyz * tmpvar_40) * diff_45);
  c_44.xyz = tmpvar_47;
  c_44.w = tmpvar_8;
  c_43.w = c_44.w;
  mediump vec3 tmpvar_48;
  tmpvar_48 = (c_44.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD6 + x1_42)));
  c_43.xyz = tmpvar_48;
  lowp vec4 color_49;
  color_49.xyz = (c_43.xyz * tmpvar_8);
  color_49.w = 1.0;
  c_5.xyz = color_49.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_World2Shadow[0] * cse_10);
  tmpvar_6 = tmpvar_22;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float shadow_32;
  lowp float tmpvar_33;
  tmpvar_33 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_34;
  tmpvar_34 = (_LightShadowData.x + (tmpvar_33 * (1.0 - _LightShadowData.x)));
  shadow_32 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_37;
  lowp vec3 tmpvar_38;
  tmpvar_38 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_38;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_32;
  mediump vec3 tmpvar_39;
  tmpvar_39 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_40;
  tmpvar_40 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  tmpvar_2 = tmpvar_39;
  lowp vec4 c_41;
  lowp vec4 c_42;
  lowp float diff_43;
  mediump float tmpvar_44;
  tmpvar_44 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_43 = tmpvar_44;
  mediump vec3 tmpvar_45;
  tmpvar_45 = ((mixedDiffuse_10.xyz * tmpvar_39) * diff_43);
  c_42.xyz = tmpvar_45;
  c_42.w = tmpvar_8;
  c_41.w = c_42.w;
  mediump vec3 tmpvar_46;
  tmpvar_46 = (c_42.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_40.w) * tmpvar_40.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_41.xyz = tmpvar_46;
  lowp vec4 color_47;
  color_47.xyz = (c_41.xyz * tmpvar_8);
  color_47.w = 1.0;
  c_5.xyz = color_47.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (_Object2World * _glesVertex);
  tmpvar_9 = cse_10.xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_9.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_9.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_9.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_World2Shadow[0] * cse_10);
  tmpvar_6 = tmpvar_22;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float shadow_32;
  lowp float tmpvar_33;
  tmpvar_33 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_34;
  tmpvar_34 = (_LightShadowData.x + (tmpvar_33 * (1.0 - _LightShadowData.x)));
  shadow_32 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_37;
  lowp vec3 tmpvar_38;
  tmpvar_38 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_38;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_32;
  mediump vec3 normalWorld_39;
  normalWorld_39 = worldN_4;
  mediump vec4 realtimeDirTex_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_42;
  tmpvar_42 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 tmpvar_43;
  tmpvar_43 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD8.zw);
  realtimeDirTex_40 = tmpvar_43;
  lowp vec4 dirTex_44;
  dirTex_44 = realtimeDirTex_40;
  lowp vec3 y_45;
  y_45 = (dirTex_44.xyz - 0.5);
  tmpvar_2 = tmpvar_41;
  lowp vec4 c_46;
  lowp vec4 c_47;
  lowp float diff_48;
  mediump float tmpvar_49;
  tmpvar_49 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_48 = tmpvar_49;
  mediump vec3 tmpvar_50;
  tmpvar_50 = ((mixedDiffuse_10.xyz * tmpvar_41) * diff_48);
  c_47.xyz = tmpvar_50;
  c_47.w = tmpvar_8;
  c_46.w = c_47.w;
  mediump vec3 tmpvar_51;
  tmpvar_51 = (c_47.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_42.w) * tmpvar_42.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_39, y_45) + 0.5))
   / dirTex_44.w)));
  c_46.xyz = tmpvar_51;
  lowp vec4 color_52;
  color_52.xyz = (c_46.xyz * tmpvar_8);
  color_52.w = 1.0;
  c_5.xyz = color_52.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_9.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_10.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_10.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_10.z;
  lowp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = worldNormal_3;
  mediump vec4 normal_23;
  normal_23 = tmpvar_22;
  mediump vec3 x2_24;
  mediump vec4 tmpvar_25;
  tmpvar_25 = (normal_23.xyzz * normal_23.yzzx);
  x2_24.x = dot (unity_SHBr, tmpvar_25);
  x2_24.y = dot (unity_SHBg, tmpvar_25);
  x2_24.z = dot (unity_SHBb, tmpvar_25);
  gl_Position = cse_9;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = (x2_24 + (unity_SHC.xyz * (
    (normal_23.x * normal_23.x)
   - 
    (normal_23.y * normal_23.y)
  )));
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_30);
  worldN_3.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_30);
  worldN_3.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_30);
  worldN_3.z = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_34;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_35;
  normalWorld_35 = worldN_3;
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = normalWorld_35;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, tmpvar_36);
  x1_37.y = dot (unity_SHAg, tmpvar_36);
  x1_37.z = dot (unity_SHAb, tmpvar_36);
  lowp vec4 c_38;
  lowp vec4 c_39;
  lowp float diff_40;
  mediump float tmpvar_41;
  tmpvar_41 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_40 = tmpvar_41;
  mediump vec3 tmpvar_42;
  tmpvar_42 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_40);
  c_39.xyz = tmpvar_42;
  c_39.w = tmpvar_7;
  c_38.w = c_39.w;
  mediump vec3 tmpvar_43;
  tmpvar_43 = (c_39.xyz + (mixedDiffuse_9.xyz * (xlv_TEXCOORD6 + x1_37)));
  c_38.xyz = tmpvar_43;
  lowp vec4 color_44;
  color_44.xyz = (c_38.xyz * tmpvar_7);
  color_44.w = 1.0;
  lowp vec4 color_45;
  color_45.w = color_44.w;
  highp float tmpvar_46;
  tmpvar_46 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_45.xyz = mix (vec3(0.0, 0.0, 0.0), color_44.xyz, vec3(tmpvar_46));
  c_4.xyz = color_45.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_9.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_10.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_10.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_10.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = cse_9;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_30);
  worldN_3.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_30);
  worldN_3.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_30);
  worldN_3.z = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_34;
  tmpvar_2 = lightDir_5;
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 c_36;
  lowp vec4 c_37;
  lowp float diff_38;
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_38 = tmpvar_39;
  mediump vec3 tmpvar_40;
  tmpvar_40 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_38);
  c_37.xyz = tmpvar_40;
  c_37.w = tmpvar_7;
  c_36.w = c_37.w;
  mediump vec3 tmpvar_41;
  tmpvar_41 = (c_37.xyz + (mixedDiffuse_9.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_35.w) * tmpvar_35.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_36.xyz = tmpvar_41;
  lowp vec4 color_42;
  color_42.xyz = (c_36.xyz * tmpvar_7);
  color_42.w = 1.0;
  lowp vec4 color_43;
  color_43.w = color_42.w;
  highp float tmpvar_44;
  tmpvar_44 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_43.xyz = mix (vec3(0.0, 0.0, 0.0), color_42.xyz, vec3(tmpvar_44));
  c_4.xyz = color_43.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_9.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_10.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_10.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_10.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = cse_9;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_30);
  worldN_3.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_30);
  worldN_3.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_30);
  worldN_3.z = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_34;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_35;
  normalWorld_35 = worldN_3;
  mediump vec4 realtimeDirTex_36;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD8.zw);
  realtimeDirTex_36 = tmpvar_38;
  lowp vec4 dirTex_39;
  dirTex_39 = realtimeDirTex_36;
  lowp vec3 y_40;
  y_40 = (dirTex_39.xyz - 0.5);
  lowp vec4 c_41;
  lowp vec4 c_42;
  lowp float diff_43;
  mediump float tmpvar_44;
  tmpvar_44 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_43 = tmpvar_44;
  mediump vec3 tmpvar_45;
  tmpvar_45 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_43);
  c_42.xyz = tmpvar_45;
  c_42.w = tmpvar_7;
  c_41.w = c_42.w;
  mediump vec3 tmpvar_46;
  tmpvar_46 = (c_42.xyz + (mixedDiffuse_9.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_35, y_40) + 0.5))
   / dirTex_39.w)));
  c_41.xyz = tmpvar_46;
  lowp vec4 color_47;
  color_47.xyz = (c_41.xyz * tmpvar_7);
  color_47.w = 1.0;
  lowp vec4 color_48;
  color_48.w = color_47.w;
  highp float tmpvar_49;
  tmpvar_49 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_48.xyz = mix (vec3(0.0, 0.0, 0.0), color_47.xyz, vec3(tmpvar_49));
  c_4.xyz = color_48.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_9.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_10.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_10.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_10.z;
  tmpvar_7.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = cse_9;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec3 worldN_1;
  lowp vec4 c_2;
  lowp float tmpvar_3;
  mediump vec4 splat_control_4;
  lowp vec4 mixedDiffuse_5;
  lowp vec4 nrm_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_4 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = dot (splat_control_4, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_9;
  tmpvar_9 = (splat_control_4 / (tmpvar_8 + 0.001));
  splat_control_4 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_9.x * tmpvar_10);
  mixedDiffuse_5 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_13;
  tmpvar_13 = (mixedDiffuse_5 + (tmpvar_9.y * tmpvar_12));
  mixedDiffuse_5 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (mixedDiffuse_5 + (tmpvar_9.z * tmpvar_14));
  mixedDiffuse_5 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_5 + (tmpvar_9.w * tmpvar_16));
  mixedDiffuse_5 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_9.x * tmpvar_18);
  nrm_6 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (nrm_6 + (tmpvar_9.y * tmpvar_20));
  nrm_6 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (nrm_6 + (tmpvar_9.z * tmpvar_22));
  nrm_6 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_6 + (tmpvar_9.w * tmpvar_24));
  nrm_6 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = ((nrm_6.xyz * 2.0) - 1.0);
  tmpvar_3 = tmpvar_8;
  highp float tmpvar_27;
  tmpvar_27 = dot (xlv_TEXCOORD2.xyz, tmpvar_26);
  worldN_1.x = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = dot (xlv_TEXCOORD3.xyz, tmpvar_26);
  worldN_1.y = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = dot (xlv_TEXCOORD4.xyz, tmpvar_26);
  worldN_1.z = tmpvar_29;
  mediump vec3 normalWorld_30;
  normalWorld_30 = worldN_1;
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD6.xy);
  mediump vec3 tmpvar_32;
  tmpvar_32 = (2.0 * tmpvar_31.xyz);
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (unity_LightmapInd, xlv_TEXCOORD6.xy);
  lowp vec3 y_34;
  y_34 = (tmpvar_33.xyz - 0.5);
  lowp vec4 c_35;
  lowp vec4 c_36;
  c_36.xyz = vec3(0.0, 0.0, 0.0);
  c_36.w = tmpvar_3;
  c_35.w = c_36.w;
  mediump vec3 tmpvar_37;
  tmpvar_37 = (mixedDiffuse_5.xyz * ((tmpvar_32 * 
    (dot (normalWorld_30, y_34) + 0.5)
  ) / tmpvar_33.w));
  c_35.xyz = tmpvar_37;
  lowp vec4 color_38;
  color_38.xyz = (c_35.xyz * tmpvar_3);
  color_38.w = 1.0;
  lowp vec4 color_39;
  color_39.w = color_38.w;
  highp float tmpvar_40;
  tmpvar_40 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_39.xyz = mix (vec3(0.0, 0.0, 0.0), color_38.xyz, vec3(tmpvar_40));
  c_2.xyz = color_39.xyz;
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_9.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_10.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_10.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_10.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_7.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = cse_9;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec3 worldN_1;
  lowp vec4 c_2;
  lowp float tmpvar_3;
  mediump vec4 splat_control_4;
  lowp vec4 mixedDiffuse_5;
  lowp vec4 nrm_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_4 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = dot (splat_control_4, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_9;
  tmpvar_9 = (splat_control_4 / (tmpvar_8 + 0.001));
  splat_control_4 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_9.x * tmpvar_10);
  mixedDiffuse_5 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_13;
  tmpvar_13 = (mixedDiffuse_5 + (tmpvar_9.y * tmpvar_12));
  mixedDiffuse_5 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (mixedDiffuse_5 + (tmpvar_9.z * tmpvar_14));
  mixedDiffuse_5 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_5 + (tmpvar_9.w * tmpvar_16));
  mixedDiffuse_5 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_9.x * tmpvar_18);
  nrm_6 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (nrm_6 + (tmpvar_9.y * tmpvar_20));
  nrm_6 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (nrm_6 + (tmpvar_9.z * tmpvar_22));
  nrm_6 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_6 + (tmpvar_9.w * tmpvar_24));
  nrm_6 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = ((nrm_6.xyz * 2.0) - 1.0);
  tmpvar_3 = tmpvar_8;
  highp float tmpvar_27;
  tmpvar_27 = dot (xlv_TEXCOORD2.xyz, tmpvar_26);
  worldN_1.x = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = dot (xlv_TEXCOORD3.xyz, tmpvar_26);
  worldN_1.y = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = dot (xlv_TEXCOORD4.xyz, tmpvar_26);
  worldN_1.z = tmpvar_29;
  mediump vec3 normalWorld_30;
  normalWorld_30 = worldN_1;
  mediump vec4 realtimeDirTex_31;
  mediump vec3 tmpvar_32;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (unity_Lightmap, xlv_TEXCOORD6.xy);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (2.0 * tmpvar_33.xyz);
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2D (unity_LightmapInd, xlv_TEXCOORD6.xy);
  lowp vec3 y_36;
  y_36 = (tmpvar_35.xyz - 0.5);
  tmpvar_32 = ((tmpvar_34 * (
    dot (normalWorld_30, y_36)
   + 0.5)) / tmpvar_35.w);
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD6.zw);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD6.zw);
  realtimeDirTex_31 = tmpvar_38;
  lowp vec4 dirTex_39;
  dirTex_39 = realtimeDirTex_31;
  lowp vec3 y_40;
  y_40 = (dirTex_39.xyz - 0.5);
  tmpvar_32 = (tmpvar_32 + ((
    pow (((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz), unity_DynamicLightmap_HDR.yyy)
   * 
    (dot (normalWorld_30, y_40) + 0.5)
  ) / dirTex_39.w));
  lowp vec4 c_41;
  lowp vec4 c_42;
  c_42.xyz = vec3(0.0, 0.0, 0.0);
  c_42.w = tmpvar_3;
  c_41.w = c_42.w;
  mediump vec3 tmpvar_43;
  tmpvar_43 = (mixedDiffuse_5.xyz * tmpvar_32);
  c_41.xyz = tmpvar_43;
  lowp vec4 color_44;
  color_44.xyz = (c_41.xyz * tmpvar_3);
  color_44.w = 1.0;
  lowp vec4 color_45;
  color_45.w = color_44.w;
  highp float tmpvar_46;
  tmpvar_46 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_45.xyz = mix (vec3(0.0, 0.0, 0.0), color_44.xyz, vec3(tmpvar_46));
  c_2.xyz = color_45.xyz;
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  lowp vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = worldNormal_3;
  mediump vec4 normal_25;
  normal_25 = tmpvar_24;
  mediump vec3 x2_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_25.xyzz * normal_25.yzzx);
  x2_26.x = dot (unity_SHBr, tmpvar_27);
  x2_26.y = dot (unity_SHBg, tmpvar_27);
  x2_26.z = dot (unity_SHBb, tmpvar_27);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_World2Shadow[0] * cse_12);
  tmpvar_7 = tmpvar_28;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = (x2_26 + (unity_SHC.xyz * (
    (normal_25.x * normal_25.x)
   - 
    (normal_25.y * normal_25.y)
  )));
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float tmpvar_32;
  mediump float dist_33;
  lowp float tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_33 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (float((dist_33 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_32 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_38;
  lowp vec3 tmpvar_39;
  tmpvar_39 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_39;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_32;
  mediump vec3 normalWorld_40;
  normalWorld_40 = worldN_4;
  mediump vec3 tmpvar_41;
  mediump vec4 tmpvar_42;
  tmpvar_42.w = 1.0;
  tmpvar_42.xyz = normalWorld_40;
  mediump vec3 x1_43;
  x1_43.x = dot (unity_SHAr, tmpvar_42);
  x1_43.y = dot (unity_SHAg, tmpvar_42);
  x1_43.z = dot (unity_SHAb, tmpvar_42);
  tmpvar_41 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_41;
  lowp vec4 c_44;
  lowp vec4 c_45;
  lowp float diff_46;
  mediump float tmpvar_47;
  tmpvar_47 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_46 = tmpvar_47;
  mediump vec3 tmpvar_48;
  tmpvar_48 = ((mixedDiffuse_10.xyz * tmpvar_41) * diff_46);
  c_45.xyz = tmpvar_48;
  c_45.w = tmpvar_8;
  c_44.w = c_45.w;
  mediump vec3 tmpvar_49;
  tmpvar_49 = (c_45.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD6 + x1_43)));
  c_44.xyz = tmpvar_49;
  lowp vec4 color_50;
  color_50.xyz = (c_44.xyz * tmpvar_8);
  color_50.w = 1.0;
  lowp vec4 color_51;
  color_51.w = color_50.w;
  highp float tmpvar_52;
  tmpvar_52 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_51.xyz = mix (vec3(0.0, 0.0, 0.0), color_50.xyz, vec3(tmpvar_52));
  c_5.xyz = color_51.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * cse_12);
  tmpvar_7 = tmpvar_24;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float tmpvar_32;
  mediump float dist_33;
  lowp float tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_33 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (float((dist_33 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_32 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_38;
  lowp vec3 tmpvar_39;
  tmpvar_39 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_39;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_32;
  mediump vec3 tmpvar_40;
  tmpvar_40 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  tmpvar_2 = tmpvar_40;
  lowp vec4 c_42;
  lowp vec4 c_43;
  lowp float diff_44;
  mediump float tmpvar_45;
  tmpvar_45 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_44 = tmpvar_45;
  mediump vec3 tmpvar_46;
  tmpvar_46 = ((mixedDiffuse_10.xyz * tmpvar_40) * diff_44);
  c_43.xyz = tmpvar_46;
  c_43.w = tmpvar_8;
  c_42.w = c_43.w;
  mediump vec3 tmpvar_47;
  tmpvar_47 = (c_43.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_41.w) * tmpvar_41.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_42.xyz = tmpvar_47;
  lowp vec4 color_48;
  color_48.xyz = (c_42.xyz * tmpvar_8);
  color_48.w = 1.0;
  lowp vec4 color_49;
  color_49.w = color_48.w;
  highp float tmpvar_50;
  tmpvar_50 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_49.xyz = mix (vec3(0.0, 0.0, 0.0), color_48.xyz, vec3(tmpvar_50));
  c_5.xyz = color_49.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * cse_12);
  tmpvar_7 = tmpvar_24;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float tmpvar_32;
  mediump float dist_33;
  lowp float tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_33 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (float((dist_33 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_32 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_38;
  lowp vec3 tmpvar_39;
  tmpvar_39 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_39;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_32;
  mediump vec3 normalWorld_40;
  normalWorld_40 = worldN_4;
  mediump vec4 realtimeDirTex_41;
  mediump vec3 tmpvar_42;
  tmpvar_42 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_43;
  tmpvar_43 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 tmpvar_44;
  tmpvar_44 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD8.zw);
  realtimeDirTex_41 = tmpvar_44;
  lowp vec4 dirTex_45;
  dirTex_45 = realtimeDirTex_41;
  lowp vec3 y_46;
  y_46 = (dirTex_45.xyz - 0.5);
  tmpvar_2 = tmpvar_42;
  lowp vec4 c_47;
  lowp vec4 c_48;
  lowp float diff_49;
  mediump float tmpvar_50;
  tmpvar_50 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_49 = tmpvar_50;
  mediump vec3 tmpvar_51;
  tmpvar_51 = ((mixedDiffuse_10.xyz * tmpvar_42) * diff_49);
  c_48.xyz = tmpvar_51;
  c_48.w = tmpvar_8;
  c_47.w = c_48.w;
  mediump vec3 tmpvar_52;
  tmpvar_52 = (c_48.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_43.w) * tmpvar_43.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_40, y_46) + 0.5))
   / dirTex_45.w)));
  c_47.xyz = tmpvar_52;
  lowp vec4 color_53;
  color_53.xyz = (c_47.xyz * tmpvar_8);
  color_53.w = 1.0;
  lowp vec4 color_54;
  color_54.w = color_53.w;
  highp float tmpvar_55;
  tmpvar_55 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_54.xyz = mix (vec3(0.0, 0.0, 0.0), color_53.xyz, vec3(tmpvar_55));
  c_5.xyz = color_54.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  tmpvar_7.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * cse_12);
  tmpvar_8 = tmpvar_24;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  lowp vec3 worldN_2;
  lowp vec4 c_3;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 nrm_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_5 = tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_10;
  tmpvar_10 = (splat_control_5 / (tmpvar_9 + 0.001));
  splat_control_5 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_10.x * tmpvar_11);
  mixedDiffuse_6 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (mixedDiffuse_6 + (tmpvar_10.y * tmpvar_13));
  mixedDiffuse_6 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_6 + (tmpvar_10.z * tmpvar_15));
  mixedDiffuse_6 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_6 + (tmpvar_10.w * tmpvar_17));
  mixedDiffuse_6 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_10.x * tmpvar_19);
  nrm_7 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (nrm_7 + (tmpvar_10.y * tmpvar_21));
  nrm_7 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (nrm_7 + (tmpvar_10.z * tmpvar_23));
  nrm_7 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_7 + (tmpvar_10.w * tmpvar_25));
  nrm_7 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((nrm_7.xyz * 2.0) - 1.0);
  tmpvar_4 = tmpvar_9;
  lowp float tmpvar_28;
  mediump float dist_29;
  lowp float tmpvar_30;
  tmpvar_30 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_29 = tmpvar_30;
  mediump float tmpvar_31;
  tmpvar_31 = max (float((dist_29 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_28 = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD2.xyz, tmpvar_27);
  worldN_2.x = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD3.xyz, tmpvar_27);
  worldN_2.y = tmpvar_33;
  highp float tmpvar_34;
  tmpvar_34 = dot (xlv_TEXCOORD4.xyz, tmpvar_27);
  worldN_2.z = tmpvar_34;
  tmpvar_1 = tmpvar_28;
  mediump vec3 normalWorld_35;
  normalWorld_35 = worldN_2;
  mediump vec3 tmpvar_36;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (unity_Lightmap, xlv_TEXCOORD6.xy);
  mediump vec3 tmpvar_38;
  tmpvar_38 = (2.0 * tmpvar_37.xyz);
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture2D (unity_LightmapInd, xlv_TEXCOORD6.xy);
  lowp vec3 y_40;
  y_40 = (tmpvar_39.xyz - 0.5);
  tmpvar_36 = ((tmpvar_38 * (
    dot (normalWorld_35, y_40)
   + 0.5)) / tmpvar_39.w);
  tmpvar_36 = max (min (tmpvar_36, (tmpvar_37.xyz * tmpvar_1)), (tmpvar_36 * tmpvar_1));
  lowp vec4 c_41;
  lowp vec4 c_42;
  c_42.xyz = vec3(0.0, 0.0, 0.0);
  c_42.w = tmpvar_4;
  c_41.w = c_42.w;
  mediump vec3 tmpvar_43;
  tmpvar_43 = (mixedDiffuse_6.xyz * tmpvar_36);
  c_41.xyz = tmpvar_43;
  lowp vec4 color_44;
  color_44.xyz = (c_41.xyz * tmpvar_4);
  color_44.w = 1.0;
  lowp vec4 color_45;
  color_45.w = color_44.w;
  highp float tmpvar_46;
  tmpvar_46 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_45.xyz = mix (vec3(0.0, 0.0, 0.0), color_44.xyz, vec3(tmpvar_46));
  c_3.xyz = color_45.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_7.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * cse_12);
  tmpvar_8 = tmpvar_24;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  lowp vec3 worldN_2;
  lowp vec4 c_3;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 nrm_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_5 = tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_10;
  tmpvar_10 = (splat_control_5 / (tmpvar_9 + 0.001));
  splat_control_5 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_10.x * tmpvar_11);
  mixedDiffuse_6 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (mixedDiffuse_6 + (tmpvar_10.y * tmpvar_13));
  mixedDiffuse_6 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_6 + (tmpvar_10.z * tmpvar_15));
  mixedDiffuse_6 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_6 + (tmpvar_10.w * tmpvar_17));
  mixedDiffuse_6 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_10.x * tmpvar_19);
  nrm_7 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (nrm_7 + (tmpvar_10.y * tmpvar_21));
  nrm_7 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (nrm_7 + (tmpvar_10.z * tmpvar_23));
  nrm_7 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_7 + (tmpvar_10.w * tmpvar_25));
  nrm_7 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((nrm_7.xyz * 2.0) - 1.0);
  tmpvar_4 = tmpvar_9;
  lowp float tmpvar_28;
  mediump float dist_29;
  lowp float tmpvar_30;
  tmpvar_30 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_29 = tmpvar_30;
  mediump float tmpvar_31;
  tmpvar_31 = max (float((dist_29 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_28 = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD2.xyz, tmpvar_27);
  worldN_2.x = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD3.xyz, tmpvar_27);
  worldN_2.y = tmpvar_33;
  highp float tmpvar_34;
  tmpvar_34 = dot (xlv_TEXCOORD4.xyz, tmpvar_27);
  worldN_2.z = tmpvar_34;
  tmpvar_1 = tmpvar_28;
  mediump vec3 normalWorld_35;
  normalWorld_35 = worldN_2;
  mediump vec4 realtimeDirTex_36;
  mediump vec3 tmpvar_37;
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_Lightmap, xlv_TEXCOORD6.xy);
  mediump vec3 tmpvar_39;
  tmpvar_39 = (2.0 * tmpvar_38.xyz);
  lowp vec4 tmpvar_40;
  tmpvar_40 = texture2D (unity_LightmapInd, xlv_TEXCOORD6.xy);
  lowp vec3 y_41;
  y_41 = (tmpvar_40.xyz - 0.5);
  tmpvar_37 = ((tmpvar_39 * (
    dot (normalWorld_35, y_41)
   + 0.5)) / tmpvar_40.w);
  tmpvar_37 = max (min (tmpvar_37, (tmpvar_38.xyz * tmpvar_1)), (tmpvar_37 * tmpvar_1));
  lowp vec4 tmpvar_42;
  tmpvar_42 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD6.zw);
  lowp vec4 tmpvar_43;
  tmpvar_43 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD6.zw);
  realtimeDirTex_36 = tmpvar_43;
  lowp vec4 dirTex_44;
  dirTex_44 = realtimeDirTex_36;
  lowp vec3 y_45;
  y_45 = (dirTex_44.xyz - 0.5);
  tmpvar_37 = (tmpvar_37 + ((
    pow (((unity_DynamicLightmap_HDR.x * tmpvar_42.w) * tmpvar_42.xyz), unity_DynamicLightmap_HDR.yyy)
   * 
    (dot (normalWorld_35, y_45) + 0.5)
  ) / dirTex_44.w));
  lowp vec4 c_46;
  lowp vec4 c_47;
  c_47.xyz = vec3(0.0, 0.0, 0.0);
  c_47.w = tmpvar_4;
  c_46.w = c_47.w;
  mediump vec3 tmpvar_48;
  tmpvar_48 = (mixedDiffuse_6.xyz * tmpvar_37);
  c_46.xyz = tmpvar_48;
  lowp vec4 color_49;
  color_49.xyz = (c_46.xyz * tmpvar_4);
  color_49.w = 1.0;
  lowp vec4 color_50;
  color_50.w = color_49.w;
  highp float tmpvar_51;
  tmpvar_51 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_50.xyz = mix (vec3(0.0, 0.0, 0.0), color_49.xyz, vec3(tmpvar_51));
  c_3.xyz = color_50.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  highp vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  highp vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * _glesNormal.x)
   + 
    (v_13.xyz * _glesNormal.y)
  ) + (v_14.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_15;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_19;
  tmpvar_19 = -(tmpvar_18);
  worldBinormal_1 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.x;
  tmpvar_20.y = worldBinormal_1.x;
  tmpvar_20.z = worldNormal_3.x;
  tmpvar_20.w = tmpvar_11.x;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.y;
  tmpvar_21.y = worldBinormal_1.y;
  tmpvar_21.z = worldNormal_3.y;
  tmpvar_21.w = tmpvar_11.y;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.z;
  tmpvar_22.y = worldBinormal_1.z;
  tmpvar_22.z = worldNormal_3.z;
  tmpvar_22.w = tmpvar_11.z;
  lowp vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = worldNormal_3;
  mediump vec3 tmpvar_24;
  mediump vec4 normal_25;
  normal_25 = tmpvar_23;
  mediump vec3 x2_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_25.xyzz * normal_25.yzzx);
  x2_26.x = dot (unity_SHBr, tmpvar_27);
  x2_26.y = dot (unity_SHBg, tmpvar_27);
  x2_26.z = dot (unity_SHBb, tmpvar_27);
  tmpvar_24 = (x2_26 + (unity_SHC.xyz * (
    (normal_25.x * normal_25.x)
   - 
    (normal_25.y * normal_25.y)
  )));
  highp vec3 lightColor0_28;
  lightColor0_28 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_29;
  lightColor1_29 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_30;
  lightColor2_30 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_31;
  lightColor3_31 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_32;
  lightAttenSq_32 = unity_4LightAtten0;
  highp vec3 normal_33;
  normal_33 = worldNormal_3;
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_37;
  tmpvar_37 = (((tmpvar_34 * tmpvar_34) + (tmpvar_35 * tmpvar_35)) + (tmpvar_36 * tmpvar_36));
  highp vec4 tmpvar_38;
  tmpvar_38 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_34 * normal_33.x) + (tmpvar_35 * normal_33.y)) + (tmpvar_36 * normal_33.z))
   * 
    inversesqrt(tmpvar_37)
  )) * (1.0/((1.0 + 
    (tmpvar_37 * lightAttenSq_32)
  ))));
  highp vec3 tmpvar_39;
  tmpvar_39 = (tmpvar_24 + ((
    ((lightColor0_28 * tmpvar_38.x) + (lightColor1_29 * tmpvar_38.y))
   + 
    (lightColor2_30 * tmpvar_38.z)
  ) + (lightColor3_31 * tmpvar_38.w)));
  tmpvar_7 = tmpvar_39;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_20;
  xlv_TEXCOORD3 = tmpvar_21;
  xlv_TEXCOORD4 = tmpvar_22;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_30);
  worldN_3.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_30);
  worldN_3.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_30);
  worldN_3.z = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_34;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_35;
  normalWorld_35 = worldN_3;
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = normalWorld_35;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, tmpvar_36);
  x1_37.y = dot (unity_SHAg, tmpvar_36);
  x1_37.z = dot (unity_SHAb, tmpvar_36);
  lowp vec4 c_38;
  lowp vec4 c_39;
  lowp float diff_40;
  mediump float tmpvar_41;
  tmpvar_41 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_40 = tmpvar_41;
  mediump vec3 tmpvar_42;
  tmpvar_42 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_40);
  c_39.xyz = tmpvar_42;
  c_39.w = tmpvar_7;
  c_38.w = c_39.w;
  mediump vec3 tmpvar_43;
  tmpvar_43 = (c_39.xyz + (mixedDiffuse_9.xyz * (xlv_TEXCOORD6 + x1_37)));
  c_38.xyz = tmpvar_43;
  lowp vec4 color_44;
  color_44.xyz = (c_38.xyz * tmpvar_7);
  color_44.w = 1.0;
  lowp vec4 color_45;
  color_45.w = color_44.w;
  highp float tmpvar_46;
  tmpvar_46 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_45.xyz = mix (vec3(0.0, 0.0, 0.0), color_44.xyz, vec3(tmpvar_46));
  c_4.xyz = color_45.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_9.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_10.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_10.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_10.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = cse_9;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_30);
  worldN_3.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_30);
  worldN_3.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_30);
  worldN_3.z = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_34;
  tmpvar_2 = lightDir_5;
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 c_36;
  lowp vec4 c_37;
  lowp float diff_38;
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_38 = tmpvar_39;
  mediump vec3 tmpvar_40;
  tmpvar_40 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_38);
  c_37.xyz = tmpvar_40;
  c_37.w = tmpvar_7;
  c_36.w = c_37.w;
  mediump vec3 tmpvar_41;
  tmpvar_41 = (c_37.xyz + (mixedDiffuse_9.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_35.w) * tmpvar_35.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_36.xyz = tmpvar_41;
  lowp vec4 color_42;
  color_42.xyz = (c_36.xyz * tmpvar_7);
  color_42.w = 1.0;
  lowp vec4 color_43;
  color_43.w = color_42.w;
  highp float tmpvar_44;
  tmpvar_44 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_43.xyz = mix (vec3(0.0, 0.0, 0.0), color_42.xyz, vec3(tmpvar_44));
  c_4.xyz = color_43.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_8.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_8.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_9.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex).xyz;
  highp vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  highp vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  highp vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * _glesNormal.x)
   + 
    (v_12.xyz * _glesNormal.y)
  ) + (v_13.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_14;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * tmpvar_8.xyz));
  worldTangent_2 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_17);
  worldBinormal_1 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.x = worldTangent_2.x;
  tmpvar_19.y = worldBinormal_1.x;
  tmpvar_19.z = worldNormal_3.x;
  tmpvar_19.w = tmpvar_10.x;
  highp vec4 tmpvar_20;
  tmpvar_20.x = worldTangent_2.y;
  tmpvar_20.y = worldBinormal_1.y;
  tmpvar_20.z = worldNormal_3.y;
  tmpvar_20.w = tmpvar_10.y;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.z;
  tmpvar_21.y = worldBinormal_1.z;
  tmpvar_21.z = worldNormal_3.z;
  tmpvar_21.w = tmpvar_10.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  gl_Position = cse_9;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_19;
  xlv_TEXCOORD3 = tmpvar_20;
  xlv_TEXCOORD4 = tmpvar_21;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD8 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_30);
  worldN_3.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_30);
  worldN_3.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_30);
  worldN_3.z = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_34;
  tmpvar_2 = lightDir_5;
  mediump vec3 normalWorld_35;
  normalWorld_35 = worldN_3;
  mediump vec4 realtimeDirTex_36;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD8.zw);
  realtimeDirTex_36 = tmpvar_38;
  lowp vec4 dirTex_39;
  dirTex_39 = realtimeDirTex_36;
  lowp vec3 y_40;
  y_40 = (dirTex_39.xyz - 0.5);
  lowp vec4 c_41;
  lowp vec4 c_42;
  lowp float diff_43;
  mediump float tmpvar_44;
  tmpvar_44 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_43 = tmpvar_44;
  mediump vec3 tmpvar_45;
  tmpvar_45 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_43);
  c_42.xyz = tmpvar_45;
  c_42.w = tmpvar_7;
  c_41.w = c_42.w;
  mediump vec3 tmpvar_46;
  tmpvar_46 = (c_42.xyz + (mixedDiffuse_9.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_35, y_40) + 0.5))
   / dirTex_39.w)));
  c_41.xyz = tmpvar_46;
  lowp vec4 color_47;
  color_47.xyz = (c_41.xyz * tmpvar_7);
  color_47.w = 1.0;
  lowp vec4 color_48;
  color_48.w = color_47.w;
  highp float tmpvar_49;
  tmpvar_49 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_48.xyz = mix (vec3(0.0, 0.0, 0.0), color_47.xyz, vec3(tmpvar_49));
  c_4.xyz = color_48.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  highp vec4 cse_11;
  cse_11 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_10.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_10.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_11.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * _glesNormal.x)
   + 
    (v_15.xyz * _glesNormal.y)
  ) + (v_16.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize((tmpvar_18 * tmpvar_10.xyz));
  worldTangent_2 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_21;
  tmpvar_21 = -(tmpvar_20);
  worldBinormal_1 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.x;
  tmpvar_22.y = worldBinormal_1.x;
  tmpvar_22.z = worldNormal_3.x;
  tmpvar_22.w = tmpvar_12.x;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.y;
  tmpvar_23.y = worldBinormal_1.y;
  tmpvar_23.z = worldNormal_3.y;
  tmpvar_23.w = tmpvar_12.y;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.z;
  tmpvar_24.y = worldBinormal_1.z;
  tmpvar_24.z = worldNormal_3.z;
  tmpvar_24.w = tmpvar_12.z;
  lowp vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = worldNormal_3;
  mediump vec3 tmpvar_26;
  mediump vec4 normal_27;
  normal_27 = tmpvar_25;
  mediump vec3 x2_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normal_27.xyzz * normal_27.yzzx);
  x2_28.x = dot (unity_SHBr, tmpvar_29);
  x2_28.y = dot (unity_SHBg, tmpvar_29);
  x2_28.z = dot (unity_SHBb, tmpvar_29);
  tmpvar_26 = (x2_28 + (unity_SHC.xyz * (
    (normal_27.x * normal_27.x)
   - 
    (normal_27.y * normal_27.y)
  )));
  highp vec3 lightColor0_30;
  lightColor0_30 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_31;
  lightColor1_31 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_32;
  lightColor2_32 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_33;
  lightColor3_33 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_34;
  lightAttenSq_34 = unity_4LightAtten0;
  highp vec3 normal_35;
  normal_35 = worldNormal_3;
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_4LightPosX0 - cse_13.x);
  highp vec4 tmpvar_37;
  tmpvar_37 = (unity_4LightPosY0 - cse_13.y);
  highp vec4 tmpvar_38;
  tmpvar_38 = (unity_4LightPosZ0 - cse_13.z);
  highp vec4 tmpvar_39;
  tmpvar_39 = (((tmpvar_36 * tmpvar_36) + (tmpvar_37 * tmpvar_37)) + (tmpvar_38 * tmpvar_38));
  highp vec4 tmpvar_40;
  tmpvar_40 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_36 * normal_35.x) + (tmpvar_37 * normal_35.y)) + (tmpvar_38 * normal_35.z))
   * 
    inversesqrt(tmpvar_39)
  )) * (1.0/((1.0 + 
    (tmpvar_39 * lightAttenSq_34)
  ))));
  highp vec3 tmpvar_41;
  tmpvar_41 = (tmpvar_26 + ((
    ((lightColor0_30 * tmpvar_40.x) + (lightColor1_31 * tmpvar_40.y))
   + 
    (lightColor2_32 * tmpvar_40.z)
  ) + (lightColor3_33 * tmpvar_40.w)));
  tmpvar_7 = tmpvar_41;
  highp vec4 tmpvar_42;
  tmpvar_42 = (unity_World2Shadow[0] * cse_13);
  tmpvar_8 = tmpvar_42;
  gl_Position = cse_11;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_22;
  xlv_TEXCOORD3 = tmpvar_23;
  xlv_TEXCOORD4 = tmpvar_24;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
  xlv_TEXCOORD8 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float tmpvar_32;
  mediump float dist_33;
  lowp float tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_33 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (float((dist_33 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_32 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_38;
  lowp vec3 tmpvar_39;
  tmpvar_39 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_39;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_32;
  mediump vec3 normalWorld_40;
  normalWorld_40 = worldN_4;
  mediump vec3 tmpvar_41;
  mediump vec4 tmpvar_42;
  tmpvar_42.w = 1.0;
  tmpvar_42.xyz = normalWorld_40;
  mediump vec3 x1_43;
  x1_43.x = dot (unity_SHAr, tmpvar_42);
  x1_43.y = dot (unity_SHAg, tmpvar_42);
  x1_43.z = dot (unity_SHAb, tmpvar_42);
  tmpvar_41 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_41;
  lowp vec4 c_44;
  lowp vec4 c_45;
  lowp float diff_46;
  mediump float tmpvar_47;
  tmpvar_47 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_46 = tmpvar_47;
  mediump vec3 tmpvar_48;
  tmpvar_48 = ((mixedDiffuse_10.xyz * tmpvar_41) * diff_46);
  c_45.xyz = tmpvar_48;
  c_45.w = tmpvar_8;
  c_44.w = c_45.w;
  mediump vec3 tmpvar_49;
  tmpvar_49 = (c_45.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD6 + x1_43)));
  c_44.xyz = tmpvar_49;
  lowp vec4 color_50;
  color_50.xyz = (c_44.xyz * tmpvar_8);
  color_50.w = 1.0;
  lowp vec4 color_51;
  color_51.w = color_50.w;
  highp float tmpvar_52;
  tmpvar_52 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_51.xyz = mix (vec3(0.0, 0.0, 0.0), color_50.xyz, vec3(tmpvar_52));
  c_5.xyz = color_51.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * cse_12);
  tmpvar_7 = tmpvar_24;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float tmpvar_32;
  mediump float dist_33;
  lowp float tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_33 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (float((dist_33 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_32 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_38;
  lowp vec3 tmpvar_39;
  tmpvar_39 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_39;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_32;
  mediump vec3 tmpvar_40;
  tmpvar_40 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  tmpvar_2 = tmpvar_40;
  lowp vec4 c_42;
  lowp vec4 c_43;
  lowp float diff_44;
  mediump float tmpvar_45;
  tmpvar_45 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_44 = tmpvar_45;
  mediump vec3 tmpvar_46;
  tmpvar_46 = ((mixedDiffuse_10.xyz * tmpvar_40) * diff_44);
  c_43.xyz = tmpvar_46;
  c_43.w = tmpvar_8;
  c_42.w = c_43.w;
  mediump vec3 tmpvar_47;
  tmpvar_47 = (c_43.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_41.w) * tmpvar_41.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_42.xyz = tmpvar_47;
  lowp vec4 color_48;
  color_48.xyz = (c_42.xyz * tmpvar_8);
  color_48.w = 1.0;
  lowp vec4 color_49;
  color_49.w = color_48.w;
  highp float tmpvar_50;
  tmpvar_50 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_49.xyz = mix (vec3(0.0, 0.0, 0.0), color_48.xyz, vec3(tmpvar_50));
  c_5.xyz = color_49.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * cse_12);
  tmpvar_7 = tmpvar_24;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float tmpvar_32;
  mediump float dist_33;
  lowp float tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_33 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (float((dist_33 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_32 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_38;
  lowp vec3 tmpvar_39;
  tmpvar_39 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_39;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_32;
  mediump vec3 normalWorld_40;
  normalWorld_40 = worldN_4;
  mediump vec4 realtimeDirTex_41;
  mediump vec3 tmpvar_42;
  tmpvar_42 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_43;
  tmpvar_43 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 tmpvar_44;
  tmpvar_44 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD8.zw);
  realtimeDirTex_41 = tmpvar_44;
  lowp vec4 dirTex_45;
  dirTex_45 = realtimeDirTex_41;
  lowp vec3 y_46;
  y_46 = (dirTex_45.xyz - 0.5);
  tmpvar_2 = tmpvar_42;
  lowp vec4 c_47;
  lowp vec4 c_48;
  lowp float diff_49;
  mediump float tmpvar_50;
  tmpvar_50 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_49 = tmpvar_50;
  mediump vec3 tmpvar_51;
  tmpvar_51 = ((mixedDiffuse_10.xyz * tmpvar_42) * diff_49);
  c_48.xyz = tmpvar_51;
  c_48.w = tmpvar_8;
  c_47.w = c_48.w;
  mediump vec3 tmpvar_52;
  tmpvar_52 = (c_48.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_43.w) * tmpvar_43.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_40, y_46) + 0.5))
   / dirTex_45.w)));
  c_47.xyz = tmpvar_52;
  lowp vec4 color_53;
  color_53.xyz = (c_47.xyz * tmpvar_8);
  color_53.w = 1.0;
  lowp vec4 color_54;
  color_54.w = color_53.w;
  highp float tmpvar_55;
  tmpvar_55 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_54.xyz = mix (vec3(0.0, 0.0, 0.0), color_53.xyz, vec3(tmpvar_55));
  c_5.xyz = color_54.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  lowp vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = worldNormal_3;
  mediump vec4 normal_25;
  normal_25 = tmpvar_24;
  mediump vec3 x2_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_25.xyzz * normal_25.yzzx);
  x2_26.x = dot (unity_SHBr, tmpvar_27);
  x2_26.y = dot (unity_SHBg, tmpvar_27);
  x2_26.z = dot (unity_SHBb, tmpvar_27);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_World2Shadow[0] * cse_12);
  tmpvar_7 = tmpvar_28;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = (x2_26 + (unity_SHC.xyz * (
    (normal_25.x * normal_25.x)
   - 
    (normal_25.y * normal_25.y)
  )));
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float shadow_32;
  lowp float tmpvar_33;
  tmpvar_33 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_34;
  tmpvar_34 = (_LightShadowData.x + (tmpvar_33 * (1.0 - _LightShadowData.x)));
  shadow_32 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_37;
  lowp vec3 tmpvar_38;
  tmpvar_38 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_38;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_32;
  mediump vec3 normalWorld_39;
  normalWorld_39 = worldN_4;
  mediump vec3 tmpvar_40;
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = normalWorld_39;
  mediump vec3 x1_42;
  x1_42.x = dot (unity_SHAr, tmpvar_41);
  x1_42.y = dot (unity_SHAg, tmpvar_41);
  x1_42.z = dot (unity_SHAb, tmpvar_41);
  tmpvar_40 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_40;
  lowp vec4 c_43;
  lowp vec4 c_44;
  lowp float diff_45;
  mediump float tmpvar_46;
  tmpvar_46 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_45 = tmpvar_46;
  mediump vec3 tmpvar_47;
  tmpvar_47 = ((mixedDiffuse_10.xyz * tmpvar_40) * diff_45);
  c_44.xyz = tmpvar_47;
  c_44.w = tmpvar_8;
  c_43.w = c_44.w;
  mediump vec3 tmpvar_48;
  tmpvar_48 = (c_44.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD6 + x1_42)));
  c_43.xyz = tmpvar_48;
  lowp vec4 color_49;
  color_49.xyz = (c_43.xyz * tmpvar_8);
  color_49.w = 1.0;
  lowp vec4 color_50;
  color_50.w = color_49.w;
  highp float tmpvar_51;
  tmpvar_51 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_50.xyz = mix (vec3(0.0, 0.0, 0.0), color_49.xyz, vec3(tmpvar_51));
  c_5.xyz = color_50.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * cse_12);
  tmpvar_7 = tmpvar_24;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float shadow_32;
  lowp float tmpvar_33;
  tmpvar_33 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_34;
  tmpvar_34 = (_LightShadowData.x + (tmpvar_33 * (1.0 - _LightShadowData.x)));
  shadow_32 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_37;
  lowp vec3 tmpvar_38;
  tmpvar_38 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_38;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_32;
  mediump vec3 tmpvar_39;
  tmpvar_39 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_40;
  tmpvar_40 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  tmpvar_2 = tmpvar_39;
  lowp vec4 c_41;
  lowp vec4 c_42;
  lowp float diff_43;
  mediump float tmpvar_44;
  tmpvar_44 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_43 = tmpvar_44;
  mediump vec3 tmpvar_45;
  tmpvar_45 = ((mixedDiffuse_10.xyz * tmpvar_39) * diff_43);
  c_42.xyz = tmpvar_45;
  c_42.w = tmpvar_8;
  c_41.w = c_42.w;
  mediump vec3 tmpvar_46;
  tmpvar_46 = (c_42.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_40.w) * tmpvar_40.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_41.xyz = tmpvar_46;
  lowp vec4 color_47;
  color_47.xyz = (c_41.xyz * tmpvar_8);
  color_47.w = 1.0;
  lowp vec4 color_48;
  color_48.w = color_47.w;
  highp float tmpvar_49;
  tmpvar_49 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_48.xyz = mix (vec3(0.0, 0.0, 0.0), color_47.xyz, vec3(tmpvar_49));
  c_5.xyz = color_48.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * cse_12);
  tmpvar_7 = tmpvar_24;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float shadow_32;
  lowp float tmpvar_33;
  tmpvar_33 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_34;
  tmpvar_34 = (_LightShadowData.x + (tmpvar_33 * (1.0 - _LightShadowData.x)));
  shadow_32 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_37;
  lowp vec3 tmpvar_38;
  tmpvar_38 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_38;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_32;
  mediump vec3 normalWorld_39;
  normalWorld_39 = worldN_4;
  mediump vec4 realtimeDirTex_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_42;
  tmpvar_42 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 tmpvar_43;
  tmpvar_43 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD8.zw);
  realtimeDirTex_40 = tmpvar_43;
  lowp vec4 dirTex_44;
  dirTex_44 = realtimeDirTex_40;
  lowp vec3 y_45;
  y_45 = (dirTex_44.xyz - 0.5);
  tmpvar_2 = tmpvar_41;
  lowp vec4 c_46;
  lowp vec4 c_47;
  lowp float diff_48;
  mediump float tmpvar_49;
  tmpvar_49 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_48 = tmpvar_49;
  mediump vec3 tmpvar_50;
  tmpvar_50 = ((mixedDiffuse_10.xyz * tmpvar_41) * diff_48);
  c_47.xyz = tmpvar_50;
  c_47.w = tmpvar_8;
  c_46.w = c_47.w;
  mediump vec3 tmpvar_51;
  tmpvar_51 = (c_47.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_42.w) * tmpvar_42.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_39, y_45) + 0.5))
   / dirTex_44.w)));
  c_46.xyz = tmpvar_51;
  lowp vec4 color_52;
  color_52.xyz = (c_46.xyz * tmpvar_8);
  color_52.w = 1.0;
  lowp vec4 color_53;
  color_53.w = color_52.w;
  highp float tmpvar_54;
  tmpvar_54 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_53.xyz = mix (vec3(0.0, 0.0, 0.0), color_52.xyz, vec3(tmpvar_54));
  c_5.xyz = color_53.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  tmpvar_7.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * cse_12);
  tmpvar_8 = tmpvar_24;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  lowp vec3 worldN_2;
  lowp vec4 c_3;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 nrm_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_5 = tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_10;
  tmpvar_10 = (splat_control_5 / (tmpvar_9 + 0.001));
  splat_control_5 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_10.x * tmpvar_11);
  mixedDiffuse_6 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (mixedDiffuse_6 + (tmpvar_10.y * tmpvar_13));
  mixedDiffuse_6 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_6 + (tmpvar_10.z * tmpvar_15));
  mixedDiffuse_6 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_6 + (tmpvar_10.w * tmpvar_17));
  mixedDiffuse_6 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_10.x * tmpvar_19);
  nrm_7 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (nrm_7 + (tmpvar_10.y * tmpvar_21));
  nrm_7 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (nrm_7 + (tmpvar_10.z * tmpvar_23));
  nrm_7 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_7 + (tmpvar_10.w * tmpvar_25));
  nrm_7 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((nrm_7.xyz * 2.0) - 1.0);
  tmpvar_4 = tmpvar_9;
  lowp float shadow_28;
  lowp float tmpvar_29;
  tmpvar_29 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_30;
  tmpvar_30 = (_LightShadowData.x + (tmpvar_29 * (1.0 - _LightShadowData.x)));
  shadow_28 = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_27);
  worldN_2.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_27);
  worldN_2.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_27);
  worldN_2.z = tmpvar_33;
  tmpvar_1 = shadow_28;
  mediump vec3 normalWorld_34;
  normalWorld_34 = worldN_2;
  mediump vec3 tmpvar_35;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2D (unity_Lightmap, xlv_TEXCOORD6.xy);
  mediump vec3 tmpvar_37;
  tmpvar_37 = (2.0 * tmpvar_36.xyz);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_LightmapInd, xlv_TEXCOORD6.xy);
  lowp vec3 y_39;
  y_39 = (tmpvar_38.xyz - 0.5);
  tmpvar_35 = ((tmpvar_37 * (
    dot (normalWorld_34, y_39)
   + 0.5)) / tmpvar_38.w);
  tmpvar_35 = max (min (tmpvar_35, (tmpvar_36.xyz * tmpvar_1)), (tmpvar_35 * tmpvar_1));
  lowp vec4 c_40;
  lowp vec4 c_41;
  c_41.xyz = vec3(0.0, 0.0, 0.0);
  c_41.w = tmpvar_4;
  c_40.w = c_41.w;
  mediump vec3 tmpvar_42;
  tmpvar_42 = (mixedDiffuse_6.xyz * tmpvar_35);
  c_40.xyz = tmpvar_42;
  lowp vec4 color_43;
  color_43.xyz = (c_40.xyz * tmpvar_4);
  color_43.w = 1.0;
  lowp vec4 color_44;
  color_44.w = color_43.w;
  highp float tmpvar_45;
  tmpvar_45 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_44.xyz = mix (vec3(0.0, 0.0, 0.0), color_43.xyz, vec3(tmpvar_45));
  c_3.xyz = color_44.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  tmpvar_7.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * cse_12);
  tmpvar_8 = tmpvar_24;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  lowp vec3 worldN_2;
  lowp vec4 c_3;
  lowp float tmpvar_4;
  mediump vec4 splat_control_5;
  lowp vec4 mixedDiffuse_6;
  lowp vec4 nrm_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_5 = tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = dot (splat_control_5, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_10;
  tmpvar_10 = (splat_control_5 / (tmpvar_9 + 0.001));
  splat_control_5 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_10.x * tmpvar_11);
  mixedDiffuse_6 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (mixedDiffuse_6 + (tmpvar_10.y * tmpvar_13));
  mixedDiffuse_6 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_6 + (tmpvar_10.z * tmpvar_15));
  mixedDiffuse_6 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_6 + (tmpvar_10.w * tmpvar_17));
  mixedDiffuse_6 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_10.x * tmpvar_19);
  nrm_7 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (nrm_7 + (tmpvar_10.y * tmpvar_21));
  nrm_7 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (nrm_7 + (tmpvar_10.z * tmpvar_23));
  nrm_7 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_7 + (tmpvar_10.w * tmpvar_25));
  nrm_7 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((nrm_7.xyz * 2.0) - 1.0);
  tmpvar_4 = tmpvar_9;
  lowp float shadow_28;
  lowp float tmpvar_29;
  tmpvar_29 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_30;
  tmpvar_30 = (_LightShadowData.x + (tmpvar_29 * (1.0 - _LightShadowData.x)));
  shadow_28 = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = dot (xlv_TEXCOORD2.xyz, tmpvar_27);
  worldN_2.x = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = dot (xlv_TEXCOORD3.xyz, tmpvar_27);
  worldN_2.y = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD4.xyz, tmpvar_27);
  worldN_2.z = tmpvar_33;
  tmpvar_1 = shadow_28;
  mediump vec3 normalWorld_34;
  normalWorld_34 = worldN_2;
  mediump vec4 realtimeDirTex_35;
  mediump vec3 tmpvar_36;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (unity_Lightmap, xlv_TEXCOORD6.xy);
  mediump vec3 tmpvar_38;
  tmpvar_38 = (2.0 * tmpvar_37.xyz);
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture2D (unity_LightmapInd, xlv_TEXCOORD6.xy);
  lowp vec3 y_40;
  y_40 = (tmpvar_39.xyz - 0.5);
  tmpvar_36 = ((tmpvar_38 * (
    dot (normalWorld_34, y_40)
   + 0.5)) / tmpvar_39.w);
  tmpvar_36 = max (min (tmpvar_36, (tmpvar_37.xyz * tmpvar_1)), (tmpvar_36 * tmpvar_1));
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD6.zw);
  lowp vec4 tmpvar_42;
  tmpvar_42 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD6.zw);
  realtimeDirTex_35 = tmpvar_42;
  lowp vec4 dirTex_43;
  dirTex_43 = realtimeDirTex_35;
  lowp vec3 y_44;
  y_44 = (dirTex_43.xyz - 0.5);
  tmpvar_36 = (tmpvar_36 + ((
    pow (((unity_DynamicLightmap_HDR.x * tmpvar_41.w) * tmpvar_41.xyz), unity_DynamicLightmap_HDR.yyy)
   * 
    (dot (normalWorld_34, y_44) + 0.5)
  ) / dirTex_43.w));
  lowp vec4 c_45;
  lowp vec4 c_46;
  c_46.xyz = vec3(0.0, 0.0, 0.0);
  c_46.w = tmpvar_4;
  c_45.w = c_46.w;
  mediump vec3 tmpvar_47;
  tmpvar_47 = (mixedDiffuse_6.xyz * tmpvar_36);
  c_45.xyz = tmpvar_47;
  lowp vec4 color_48;
  color_48.xyz = (c_45.xyz * tmpvar_4);
  color_48.w = 1.0;
  lowp vec4 color_49;
  color_49.w = color_48.w;
  highp float tmpvar_50;
  tmpvar_50 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_49.xyz = mix (vec3(0.0, 0.0, 0.0), color_48.xyz, vec3(tmpvar_50));
  c_3.xyz = color_49.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  highp vec4 cse_11;
  cse_11 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_10.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_10.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_11.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * _glesNormal.x)
   + 
    (v_15.xyz * _glesNormal.y)
  ) + (v_16.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize((tmpvar_18 * tmpvar_10.xyz));
  worldTangent_2 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_21;
  tmpvar_21 = -(tmpvar_20);
  worldBinormal_1 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.x;
  tmpvar_22.y = worldBinormal_1.x;
  tmpvar_22.z = worldNormal_3.x;
  tmpvar_22.w = tmpvar_12.x;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.y;
  tmpvar_23.y = worldBinormal_1.y;
  tmpvar_23.z = worldNormal_3.y;
  tmpvar_23.w = tmpvar_12.y;
  highp vec4 tmpvar_24;
  tmpvar_24.x = worldTangent_2.z;
  tmpvar_24.y = worldBinormal_1.z;
  tmpvar_24.z = worldNormal_3.z;
  tmpvar_24.w = tmpvar_12.z;
  lowp vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = worldNormal_3;
  mediump vec3 tmpvar_26;
  mediump vec4 normal_27;
  normal_27 = tmpvar_25;
  mediump vec3 x2_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normal_27.xyzz * normal_27.yzzx);
  x2_28.x = dot (unity_SHBr, tmpvar_29);
  x2_28.y = dot (unity_SHBg, tmpvar_29);
  x2_28.z = dot (unity_SHBb, tmpvar_29);
  tmpvar_26 = (x2_28 + (unity_SHC.xyz * (
    (normal_27.x * normal_27.x)
   - 
    (normal_27.y * normal_27.y)
  )));
  highp vec3 lightColor0_30;
  lightColor0_30 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_31;
  lightColor1_31 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_32;
  lightColor2_32 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_33;
  lightColor3_33 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_34;
  lightAttenSq_34 = unity_4LightAtten0;
  highp vec3 normal_35;
  normal_35 = worldNormal_3;
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_4LightPosX0 - cse_13.x);
  highp vec4 tmpvar_37;
  tmpvar_37 = (unity_4LightPosY0 - cse_13.y);
  highp vec4 tmpvar_38;
  tmpvar_38 = (unity_4LightPosZ0 - cse_13.z);
  highp vec4 tmpvar_39;
  tmpvar_39 = (((tmpvar_36 * tmpvar_36) + (tmpvar_37 * tmpvar_37)) + (tmpvar_38 * tmpvar_38));
  highp vec4 tmpvar_40;
  tmpvar_40 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_36 * normal_35.x) + (tmpvar_37 * normal_35.y)) + (tmpvar_38 * normal_35.z))
   * 
    inversesqrt(tmpvar_39)
  )) * (1.0/((1.0 + 
    (tmpvar_39 * lightAttenSq_34)
  ))));
  highp vec3 tmpvar_41;
  tmpvar_41 = (tmpvar_26 + ((
    ((lightColor0_30 * tmpvar_40.x) + (lightColor1_31 * tmpvar_40.y))
   + 
    (lightColor2_32 * tmpvar_40.z)
  ) + (lightColor3_33 * tmpvar_40.w)));
  tmpvar_7 = tmpvar_41;
  highp vec4 tmpvar_42;
  tmpvar_42 = (unity_World2Shadow[0] * cse_13);
  tmpvar_8 = tmpvar_42;
  gl_Position = cse_11;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_22;
  xlv_TEXCOORD3 = tmpvar_23;
  xlv_TEXCOORD4 = tmpvar_24;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD6 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
  xlv_TEXCOORD8 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float shadow_32;
  lowp float tmpvar_33;
  tmpvar_33 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_34;
  tmpvar_34 = (_LightShadowData.x + (tmpvar_33 * (1.0 - _LightShadowData.x)));
  shadow_32 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_37;
  lowp vec3 tmpvar_38;
  tmpvar_38 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_38;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_32;
  mediump vec3 normalWorld_39;
  normalWorld_39 = worldN_4;
  mediump vec3 tmpvar_40;
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = normalWorld_39;
  mediump vec3 x1_42;
  x1_42.x = dot (unity_SHAr, tmpvar_41);
  x1_42.y = dot (unity_SHAg, tmpvar_41);
  x1_42.z = dot (unity_SHAb, tmpvar_41);
  tmpvar_40 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_40;
  lowp vec4 c_43;
  lowp vec4 c_44;
  lowp float diff_45;
  mediump float tmpvar_46;
  tmpvar_46 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_45 = tmpvar_46;
  mediump vec3 tmpvar_47;
  tmpvar_47 = ((mixedDiffuse_10.xyz * tmpvar_40) * diff_45);
  c_44.xyz = tmpvar_47;
  c_44.w = tmpvar_8;
  c_43.w = c_44.w;
  mediump vec3 tmpvar_48;
  tmpvar_48 = (c_44.xyz + (mixedDiffuse_10.xyz * (xlv_TEXCOORD6 + x1_42)));
  c_43.xyz = tmpvar_48;
  lowp vec4 color_49;
  color_49.xyz = (c_43.xyz * tmpvar_8);
  color_49.w = 1.0;
  lowp vec4 color_50;
  color_50.w = color_49.w;
  highp float tmpvar_51;
  tmpvar_51 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_50.xyz = mix (vec3(0.0, 0.0, 0.0), color_49.xyz, vec3(tmpvar_51));
  c_5.xyz = color_50.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * cse_12);
  tmpvar_7 = tmpvar_24;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float shadow_32;
  lowp float tmpvar_33;
  tmpvar_33 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_34;
  tmpvar_34 = (_LightShadowData.x + (tmpvar_33 * (1.0 - _LightShadowData.x)));
  shadow_32 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_37;
  lowp vec3 tmpvar_38;
  tmpvar_38 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_38;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_32;
  mediump vec3 tmpvar_39;
  tmpvar_39 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_40;
  tmpvar_40 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  tmpvar_2 = tmpvar_39;
  lowp vec4 c_41;
  lowp vec4 c_42;
  lowp float diff_43;
  mediump float tmpvar_44;
  tmpvar_44 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_43 = tmpvar_44;
  mediump vec3 tmpvar_45;
  tmpvar_45 = ((mixedDiffuse_10.xyz * tmpvar_39) * diff_43);
  c_42.xyz = tmpvar_45;
  c_42.w = tmpvar_8;
  c_41.w = c_42.w;
  mediump vec3 tmpvar_46;
  tmpvar_46 = (c_42.xyz + (mixedDiffuse_10.xyz * pow (
    ((unity_DynamicLightmap_HDR.x * tmpvar_40.w) * tmpvar_40.xyz)
  , unity_DynamicLightmap_HDR.yyy)));
  c_41.xyz = tmpvar_46;
  lowp vec4 color_47;
  color_47.xyz = (c_41.xyz * tmpvar_8);
  color_47.w = 1.0;
  lowp vec4 color_48;
  color_48.w = color_47.w;
  highp float tmpvar_49;
  tmpvar_49 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_48.xyz = mix (vec3(0.0, 0.0, 0.0), color_47.xyz, vec3(tmpvar_49));
  c_5.xyz = color_48.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec3 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  highp vec4 cse_10;
  cse_10 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_9.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_9.w = -1.0;
  tmpvar_6.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_6.z = exp2(-((unity_FogParams.y * cse_10.z)));
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec3 tmpvar_11;
  highp vec4 cse_12;
  cse_12 = (_Object2World * _glesVertex);
  tmpvar_11 = cse_12.xyz;
  highp vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  highp vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  highp vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * _glesNormal.x)
   + 
    (v_14.xyz * _glesNormal.y)
  ) + (v_15.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_16;
  highp mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize((tmpvar_17 * tmpvar_9.xyz));
  worldTangent_2 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_20;
  tmpvar_20 = -(tmpvar_19);
  worldBinormal_1 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.x = worldTangent_2.x;
  tmpvar_21.y = worldBinormal_1.x;
  tmpvar_21.z = worldNormal_3.x;
  tmpvar_21.w = tmpvar_11.x;
  highp vec4 tmpvar_22;
  tmpvar_22.x = worldTangent_2.y;
  tmpvar_22.y = worldBinormal_1.y;
  tmpvar_22.z = worldNormal_3.y;
  tmpvar_22.w = tmpvar_11.y;
  highp vec4 tmpvar_23;
  tmpvar_23.x = worldTangent_2.z;
  tmpvar_23.y = worldBinormal_1.z;
  tmpvar_23.z = worldNormal_3.z;
  tmpvar_23.w = tmpvar_11.z;
  tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * cse_12);
  tmpvar_7 = tmpvar_24;
  gl_Position = cse_10;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_21;
  xlv_TEXCOORD3 = tmpvar_22;
  xlv_TEXCOORD4 = tmpvar_23;
  xlv_TEXCOORD5 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_TEXCOORD8 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform sampler2D unity_DynamicLightmap;
uniform sampler2D unity_DynamicDirectionality;
uniform mediump vec4 unity_DynamicLightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_TEXCOORD8;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec3 worldN_4;
  lowp vec4 c_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD5.xy);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  lowp float shadow_32;
  lowp float tmpvar_33;
  tmpvar_33 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_34;
  tmpvar_34 = (_LightShadowData.x + (tmpvar_33 * (1.0 - _LightShadowData.x)));
  shadow_32 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
  worldN_4.x = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
  worldN_4.y = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
  worldN_4.z = tmpvar_37;
  lowp vec3 tmpvar_38;
  tmpvar_38 = _LightColor0.xyz;
  tmpvar_2 = tmpvar_38;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = shadow_32;
  mediump vec3 normalWorld_39;
  normalWorld_39 = worldN_4;
  mediump vec4 realtimeDirTex_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = (tmpvar_2 * tmpvar_1);
  lowp vec4 tmpvar_42;
  tmpvar_42 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD8.zw);
  lowp vec4 tmpvar_43;
  tmpvar_43 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD8.zw);
  realtimeDirTex_40 = tmpvar_43;
  lowp vec4 dirTex_44;
  dirTex_44 = realtimeDirTex_40;
  lowp vec3 y_45;
  y_45 = (dirTex_44.xyz - 0.5);
  tmpvar_2 = tmpvar_41;
  lowp vec4 c_46;
  lowp vec4 c_47;
  lowp float diff_48;
  mediump float tmpvar_49;
  tmpvar_49 = max (0.0, dot (worldN_4, tmpvar_3));
  diff_48 = tmpvar_49;
  mediump vec3 tmpvar_50;
  tmpvar_50 = ((mixedDiffuse_10.xyz * tmpvar_41) * diff_48);
  c_47.xyz = tmpvar_50;
  c_47.w = tmpvar_8;
  c_46.w = c_47.w;
  mediump vec3 tmpvar_51;
  tmpvar_51 = (c_47.xyz + (mixedDiffuse_10.xyz * (
    (pow (((unity_DynamicLightmap_HDR.x * tmpvar_42.w) * tmpvar_42.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_39, y_45) + 0.5))
   / dirTex_44.w)));
  c_46.xyz = tmpvar_51;
  lowp vec4 color_52;
  color_52.xyz = (c_46.xyz * tmpvar_8);
  color_52.w = 1.0;
  lowp vec4 color_53;
  color_53.w = color_52.w;
  highp float tmpvar_54;
  tmpvar_54 = clamp (xlv_TEXCOORD5.z, 0.0, 1.0);
  color_53.xyz = mix (vec3(0.0, 0.0, 0.0), color_52.xyz, vec3(tmpvar_54));
  c_5.xyz = color_53.xyz;
  c_5.w = 1.0;
  gl_FragData[0] = c_5;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "_TERRAIN_NORMAL_MAP" }
"!!GLES"
}
}
 }
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry-99" "IGNOREPROJECTOR"="true" "RenderType"="Opaque" "SplatCount"="4" }
  ZWrite Off
  Blend One One
  GpuProgramID 125842
Program "vp" {
SubProgram "gles " {
Keywords { "POINT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_5;
  v_5.x = _World2Object[0].x;
  v_5.y = _World2Object[1].x;
  v_5.z = _World2Object[2].x;
  v_5.w = _World2Object[3].x;
  highp vec4 v_6;
  v_6.x = _World2Object[0].y;
  v_6.y = _World2Object[1].y;
  v_6.z = _World2Object[2].y;
  v_6.w = _World2Object[3].y;
  highp vec4 v_7;
  v_7.x = _World2Object[0].z;
  v_7.y = _World2Object[1].z;
  v_7.z = _World2Object[2].z;
  v_7.w = _World2Object[3].z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (v_5.xyz * _glesNormal.x)
   + 
    (v_6.xyz * _glesNormal.y)
  ) + (v_7.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_8;
  tmpvar_4 = worldNormal_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  mediump vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD3));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  highp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = xlv_TEXCOORD3;
  highp vec3 tmpvar_23;
  tmpvar_23 = (_LightMatrix0 * tmpvar_22).xyz;
  lightCoord_4 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = dot (lightCoord_4, lightCoord_4);
  lowp float tmpvar_25;
  tmpvar_25 = texture2D (_LightTexture0, vec2(tmpvar_24)).w;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_26;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_25);
  lowp vec4 c_27;
  lowp vec4 c_28;
  lowp float diff_29;
  mediump float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_29 = tmpvar_30;
  mediump vec3 tmpvar_31;
  tmpvar_31 = ((mixedDiffuse_10.xyz * tmpvar_1) * diff_29);
  c_28.xyz = tmpvar_31;
  c_28.w = tmpvar_8;
  c_27.w = c_28.w;
  mediump vec3 tmpvar_32;
  tmpvar_32 = c_28.xyz;
  c_27.xyz = tmpvar_32;
  lowp vec4 color_33;
  color_33.xyz = (c_27.xyz * tmpvar_8);
  color_33.w = 1.0;
  c_3.xyz = color_33.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_5;
  v_5.x = _World2Object[0].x;
  v_5.y = _World2Object[1].x;
  v_5.z = _World2Object[2].x;
  v_5.w = _World2Object[3].x;
  highp vec4 v_6;
  v_6.x = _World2Object[0].y;
  v_6.y = _World2Object[1].y;
  v_6.z = _World2Object[2].y;
  v_6.w = _World2Object[3].y;
  highp vec4 v_7;
  v_7.x = _World2Object[0].z;
  v_7.y = _World2Object[1].z;
  v_7.z = _World2Object[2].z;
  v_7.w = _World2Object[3].z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (v_5.xyz * _glesNormal.x)
   + 
    (v_6.xyz * _glesNormal.y)
  ) + (v_7.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_8;
  tmpvar_4 = worldNormal_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_24 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_24);
  c_23.xyz = tmpvar_26;
  c_23.w = tmpvar_7;
  c_22.w = c_23.w;
  mediump vec3 tmpvar_27;
  tmpvar_27 = c_23.xyz;
  c_22.xyz = tmpvar_27;
  lowp vec4 color_28;
  color_28.xyz = (c_22.xyz * tmpvar_7);
  color_28.w = 1.0;
  c_3.xyz = color_28.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "SPOT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_5;
  v_5.x = _World2Object[0].x;
  v_5.y = _World2Object[1].x;
  v_5.z = _World2Object[2].x;
  v_5.w = _World2Object[3].x;
  highp vec4 v_6;
  v_6.x = _World2Object[0].y;
  v_6.y = _World2Object[1].y;
  v_6.z = _World2Object[2].y;
  v_6.w = _World2Object[3].y;
  highp vec4 v_7;
  v_7.x = _World2Object[0].z;
  v_7.y = _World2Object[1].z;
  v_7.z = _World2Object[2].z;
  v_7.w = _World2Object[3].z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (v_5.xyz * _glesNormal.x)
   + 
    (v_6.xyz * _glesNormal.y)
  ) + (v_7.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_8;
  tmpvar_4 = worldNormal_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  mediump vec4 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD3));
  lightDir_7 = tmpvar_8;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp float tmpvar_9;
  mediump vec4 splat_control_10;
  lowp vec4 mixedDiffuse_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_10 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_10, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_10 / (tmpvar_13 + 0.001));
  splat_control_10 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_11 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_11 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_11 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_11 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_11 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_11 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_11 = tmpvar_22;
  tmpvar_9 = tmpvar_13;
  highp vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = xlv_TEXCOORD3;
  highp vec4 tmpvar_24;
  tmpvar_24 = (_LightMatrix0 * tmpvar_23);
  lightCoord_5 = tmpvar_24;
  lowp vec4 tmpvar_25;
  mediump vec2 P_26;
  P_26 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
  tmpvar_25 = texture2D (_LightTexture0, P_26);
  mediump float tmpvar_27;
  tmpvar_27 = dot (lightCoord_5.xyz, lightCoord_5.xyz);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_LightTextureB0, vec2(tmpvar_27));
  mediump float tmpvar_29;
  tmpvar_29 = ((float(
    (lightCoord_5.z > 0.0)
  ) * tmpvar_25.w) * tmpvar_28.w);
  atten_4 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_30;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_31;
  lowp vec4 c_32;
  lowp float diff_33;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_33 = tmpvar_34;
  mediump vec3 tmpvar_35;
  tmpvar_35 = ((mixedDiffuse_11.xyz * tmpvar_1) * diff_33);
  c_32.xyz = tmpvar_35;
  c_32.w = tmpvar_9;
  c_31.w = c_32.w;
  mediump vec3 tmpvar_36;
  tmpvar_36 = c_32.xyz;
  c_31.xyz = tmpvar_36;
  lowp vec4 color_37;
  color_37.xyz = (c_31.xyz * tmpvar_9);
  color_37.w = 1.0;
  c_3.xyz = color_37.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_5;
  v_5.x = _World2Object[0].x;
  v_5.y = _World2Object[1].x;
  v_5.z = _World2Object[2].x;
  v_5.w = _World2Object[3].x;
  highp vec4 v_6;
  v_6.x = _World2Object[0].y;
  v_6.y = _World2Object[1].y;
  v_6.z = _World2Object[2].y;
  v_6.w = _World2Object[3].y;
  highp vec4 v_7;
  v_7.x = _World2Object[0].z;
  v_7.y = _World2Object[1].z;
  v_7.z = _World2Object[2].z;
  v_7.w = _World2Object[3].z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (v_5.xyz * _glesNormal.x)
   + 
    (v_6.xyz * _glesNormal.y)
  ) + (v_7.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_8;
  tmpvar_4 = worldNormal_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform lowp samplerCube _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  mediump vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD3));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  highp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = xlv_TEXCOORD3;
  highp vec3 tmpvar_23;
  tmpvar_23 = (_LightMatrix0 * tmpvar_22).xyz;
  lightCoord_4 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = dot (lightCoord_4, lightCoord_4);
  lowp float tmpvar_25;
  tmpvar_25 = (texture2D (_LightTextureB0, vec2(tmpvar_24)).w * textureCube (_LightTexture0, lightCoord_4).w);
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_26;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_25);
  lowp vec4 c_27;
  lowp vec4 c_28;
  lowp float diff_29;
  mediump float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_29 = tmpvar_30;
  mediump vec3 tmpvar_31;
  tmpvar_31 = ((mixedDiffuse_10.xyz * tmpvar_1) * diff_29);
  c_28.xyz = tmpvar_31;
  c_28.w = tmpvar_8;
  c_27.w = c_28.w;
  mediump vec3 tmpvar_32;
  tmpvar_32 = c_28.xyz;
  c_27.xyz = tmpvar_32;
  lowp vec4 color_33;
  color_33.xyz = (c_27.xyz * tmpvar_8);
  color_33.w = 1.0;
  c_3.xyz = color_33.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_5;
  v_5.x = _World2Object[0].x;
  v_5.y = _World2Object[1].x;
  v_5.z = _World2Object[2].x;
  v_5.w = _World2Object[3].x;
  highp vec4 v_6;
  v_6.x = _World2Object[0].y;
  v_6.y = _World2Object[1].y;
  v_6.z = _World2Object[2].y;
  v_6.w = _World2Object[3].y;
  highp vec4 v_7;
  v_7.x = _World2Object[0].z;
  v_7.y = _World2Object[1].z;
  v_7.z = _World2Object[2].z;
  v_7.w = _World2Object[3].z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (v_5.xyz * _glesNormal.x)
   + 
    (v_6.xyz * _glesNormal.y)
  ) + (v_7.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_8;
  tmpvar_4 = worldNormal_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  mediump vec2 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  highp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = xlv_TEXCOORD3;
  highp vec2 tmpvar_23;
  tmpvar_23 = (_LightMatrix0 * tmpvar_22).xy;
  lightCoord_4 = tmpvar_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2D (_LightTexture0, lightCoord_4).w;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_25;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_24);
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_28 = tmpvar_29;
  mediump vec3 tmpvar_30;
  tmpvar_30 = ((mixedDiffuse_10.xyz * tmpvar_1) * diff_28);
  c_27.xyz = tmpvar_30;
  c_27.w = tmpvar_8;
  c_26.w = c_27.w;
  mediump vec3 tmpvar_31;
  tmpvar_31 = c_27.xyz;
  c_26.xyz = tmpvar_31;
  lowp vec4 color_32;
  color_32.xyz = (c_26.xyz * tmpvar_8);
  color_32.w = 1.0;
  c_3.xyz = color_32.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  highp vec4 cse_6;
  cse_6 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_6.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  gl_Position = cse_6;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  mediump vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD3));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  highp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = xlv_TEXCOORD3;
  highp vec3 tmpvar_23;
  tmpvar_23 = (_LightMatrix0 * tmpvar_22).xyz;
  lightCoord_4 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = dot (lightCoord_4, lightCoord_4);
  lowp float tmpvar_25;
  tmpvar_25 = texture2D (_LightTexture0, vec2(tmpvar_24)).w;
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_26;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_25);
  lowp vec4 c_27;
  lowp vec4 c_28;
  lowp float diff_29;
  mediump float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_29 = tmpvar_30;
  mediump vec3 tmpvar_31;
  tmpvar_31 = ((mixedDiffuse_10.xyz * tmpvar_1) * diff_29);
  c_28.xyz = tmpvar_31;
  c_28.w = tmpvar_8;
  c_27.w = c_28.w;
  mediump vec3 tmpvar_32;
  tmpvar_32 = c_28.xyz;
  c_27.xyz = tmpvar_32;
  lowp vec4 color_33;
  color_33.xyz = (c_27.xyz * tmpvar_8);
  color_33.w = 1.0;
  lowp vec4 color_34;
  color_34.w = color_33.w;
  highp float tmpvar_35;
  tmpvar_35 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_34.xyz = mix (vec3(0.0, 0.0, 0.0), color_33.xyz, vec3(tmpvar_35));
  c_3.xyz = color_34.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  highp vec4 cse_6;
  cse_6 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_6.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  gl_Position = cse_6;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_8 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_12;
  tmpvar_12 = (splat_control_8 / (tmpvar_11 + 0.001));
  splat_control_8 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_14;
  tmpvar_14 = (tmpvar_12.x * tmpvar_13);
  mixedDiffuse_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (mixedDiffuse_9 + (tmpvar_12.y * tmpvar_15));
  mixedDiffuse_9 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_9 + (tmpvar_12.z * tmpvar_17));
  mixedDiffuse_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_9 + (tmpvar_12.w * tmpvar_19));
  mixedDiffuse_9 = tmpvar_20;
  tmpvar_7 = tmpvar_11;
  lowp vec3 tmpvar_21;
  tmpvar_21 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_21;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_24 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_24);
  c_23.xyz = tmpvar_26;
  c_23.w = tmpvar_7;
  c_22.w = c_23.w;
  mediump vec3 tmpvar_27;
  tmpvar_27 = c_23.xyz;
  c_22.xyz = tmpvar_27;
  lowp vec4 color_28;
  color_28.xyz = (c_22.xyz * tmpvar_7);
  color_28.w = 1.0;
  lowp vec4 color_29;
  color_29.w = color_28.w;
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_29.xyz = mix (vec3(0.0, 0.0, 0.0), color_28.xyz, vec3(tmpvar_30));
  c_3.xyz = color_29.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  highp vec4 cse_6;
  cse_6 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_6.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  gl_Position = cse_6;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  mediump vec4 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD3));
  lightDir_7 = tmpvar_8;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp float tmpvar_9;
  mediump vec4 splat_control_10;
  lowp vec4 mixedDiffuse_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_10 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_10, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_10 / (tmpvar_13 + 0.001));
  splat_control_10 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_11 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_11 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_11 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_11 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_11 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_11 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_11 = tmpvar_22;
  tmpvar_9 = tmpvar_13;
  highp vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = xlv_TEXCOORD3;
  highp vec4 tmpvar_24;
  tmpvar_24 = (_LightMatrix0 * tmpvar_23);
  lightCoord_5 = tmpvar_24;
  lowp vec4 tmpvar_25;
  mediump vec2 P_26;
  P_26 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
  tmpvar_25 = texture2D (_LightTexture0, P_26);
  mediump float tmpvar_27;
  tmpvar_27 = dot (lightCoord_5.xyz, lightCoord_5.xyz);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_LightTextureB0, vec2(tmpvar_27));
  mediump float tmpvar_29;
  tmpvar_29 = ((float(
    (lightCoord_5.z > 0.0)
  ) * tmpvar_25.w) * tmpvar_28.w);
  atten_4 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_30;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_31;
  lowp vec4 c_32;
  lowp float diff_33;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_33 = tmpvar_34;
  mediump vec3 tmpvar_35;
  tmpvar_35 = ((mixedDiffuse_11.xyz * tmpvar_1) * diff_33);
  c_32.xyz = tmpvar_35;
  c_32.w = tmpvar_9;
  c_31.w = c_32.w;
  mediump vec3 tmpvar_36;
  tmpvar_36 = c_32.xyz;
  c_31.xyz = tmpvar_36;
  lowp vec4 color_37;
  color_37.xyz = (c_31.xyz * tmpvar_9);
  color_37.w = 1.0;
  lowp vec4 color_38;
  color_38.w = color_37.w;
  highp float tmpvar_39;
  tmpvar_39 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_38.xyz = mix (vec3(0.0, 0.0, 0.0), color_37.xyz, vec3(tmpvar_39));
  c_3.xyz = color_38.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  highp vec4 cse_6;
  cse_6 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_6.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  gl_Position = cse_6;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform lowp samplerCube _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  mediump vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD3));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  highp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = xlv_TEXCOORD3;
  highp vec3 tmpvar_23;
  tmpvar_23 = (_LightMatrix0 * tmpvar_22).xyz;
  lightCoord_4 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = dot (lightCoord_4, lightCoord_4);
  lowp float tmpvar_25;
  tmpvar_25 = (texture2D (_LightTextureB0, vec2(tmpvar_24)).w * textureCube (_LightTexture0, lightCoord_4).w);
  lowp vec3 tmpvar_26;
  tmpvar_26 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_26;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_25);
  lowp vec4 c_27;
  lowp vec4 c_28;
  lowp float diff_29;
  mediump float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_29 = tmpvar_30;
  mediump vec3 tmpvar_31;
  tmpvar_31 = ((mixedDiffuse_10.xyz * tmpvar_1) * diff_29);
  c_28.xyz = tmpvar_31;
  c_28.w = tmpvar_8;
  c_27.w = c_28.w;
  mediump vec3 tmpvar_32;
  tmpvar_32 = c_28.xyz;
  c_27.xyz = tmpvar_32;
  lowp vec4 color_33;
  color_33.xyz = (c_27.xyz * tmpvar_8);
  color_33.w = 1.0;
  lowp vec4 color_34;
  color_34.w = color_33.w;
  highp float tmpvar_35;
  tmpvar_35 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_34.xyz = mix (vec3(0.0, 0.0, 0.0), color_33.xyz, vec3(tmpvar_35));
  c_3.xyz = color_34.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 worldNormal_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  highp vec4 cse_6;
  cse_6 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
  tmpvar_5.z = exp2(-((unity_FogParams.y * cse_6.z)));
  tmpvar_2.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_1 = tmpvar_10;
  tmpvar_4 = worldNormal_1;
  gl_Position = cse_6;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  mediump vec2 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD4.xy);
  splat_control_9 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_9 / (tmpvar_12 + 0.001));
  splat_control_9 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_10 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_10 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_10 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_10 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_10 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_10 = tmpvar_21;
  tmpvar_8 = tmpvar_12;
  highp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = xlv_TEXCOORD3;
  highp vec2 tmpvar_23;
  tmpvar_23 = (_LightMatrix0 * tmpvar_22).xy;
  lightCoord_4 = tmpvar_23;
  lowp float tmpvar_24;
  tmpvar_24 = texture2D (_LightTexture0, lightCoord_4).w;
  lowp vec3 tmpvar_25;
  tmpvar_25 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_25;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_24);
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_28 = tmpvar_29;
  mediump vec3 tmpvar_30;
  tmpvar_30 = ((mixedDiffuse_10.xyz * tmpvar_1) * diff_28);
  c_27.xyz = tmpvar_30;
  c_27.w = tmpvar_8;
  c_26.w = c_27.w;
  mediump vec3 tmpvar_31;
  tmpvar_31 = c_27.xyz;
  c_26.xyz = tmpvar_31;
  lowp vec4 color_32;
  color_32.xyz = (c_26.xyz * tmpvar_8);
  color_32.w = 1.0;
  lowp vec4 color_33;
  color_33.w = color_32.w;
  highp float tmpvar_34;
  tmpvar_34 = clamp (xlv_TEXCOORD4.z, 0.0, 1.0);
  color_33.xyz = mix (vec3(0.0, 0.0, 0.0), color_32.xyz, vec3(tmpvar_34));
  c_3.xyz = color_33.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec2 xlv_TEXCOORD6;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_6.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize((tmpvar_11 * tmpvar_6.xyz));
  worldTangent_2 = tmpvar_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_14;
  tmpvar_14 = -(tmpvar_13);
  worldBinormal_1 = tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15.x = worldTangent_2.x;
  tmpvar_15.y = worldBinormal_1.x;
  tmpvar_15.z = worldNormal_3.x;
  lowp vec3 tmpvar_16;
  tmpvar_16.x = worldTangent_2.y;
  tmpvar_16.y = worldBinormal_1.y;
  tmpvar_16.z = worldNormal_3.y;
  lowp vec3 tmpvar_17;
  tmpvar_17.x = worldTangent_2.z;
  tmpvar_17.y = worldBinormal_1.z;
  tmpvar_17.z = worldNormal_3.z;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_15;
  xlv_TEXCOORD3 = tmpvar_16;
  xlv_TEXCOORD4 = tmpvar_17;
  xlv_TEXCOORD5 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD6 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec2 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  mediump vec3 lightCoord_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
  lightDir_6 = tmpvar_7;
  lowp float tmpvar_8;
  mediump vec4 splat_control_9;
  lowp vec4 mixedDiffuse_10;
  lowp vec4 nrm_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_Control, xlv_TEXCOORD6);
  splat_control_9 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = dot (splat_control_9, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_14;
  tmpvar_14 = (splat_control_9 / (tmpvar_13 + 0.001));
  splat_control_9 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_14.x * tmpvar_15);
  mixedDiffuse_10 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_18;
  tmpvar_18 = (mixedDiffuse_10 + (tmpvar_14.y * tmpvar_17));
  mixedDiffuse_10 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_20;
  tmpvar_20 = (mixedDiffuse_10 + (tmpvar_14.z * tmpvar_19));
  mixedDiffuse_10 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (mixedDiffuse_10 + (tmpvar_14.w * tmpvar_21));
  mixedDiffuse_10 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.x * tmpvar_23);
  nrm_11 = tmpvar_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_26;
  tmpvar_26 = (nrm_11 + (tmpvar_14.y * tmpvar_25));
  nrm_11 = tmpvar_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_28;
  tmpvar_28 = (nrm_11 + (tmpvar_14.z * tmpvar_27));
  nrm_11 = tmpvar_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_30;
  tmpvar_30 = (nrm_11 + (tmpvar_14.w * tmpvar_29));
  nrm_11 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((nrm_11.xyz * 2.0) - 1.0);
  tmpvar_8 = tmpvar_13;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = xlv_TEXCOORD5;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_LightMatrix0 * tmpvar_32).xyz;
  lightCoord_5 = tmpvar_33;
  mediump float tmpvar_34;
  tmpvar_34 = dot (lightCoord_5, lightCoord_5);
  lowp float tmpvar_35;
  tmpvar_35 = texture2D (_LightTexture0, vec2(tmpvar_34)).w;
  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_31);
  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_31);
  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_31);
  lowp vec3 tmpvar_36;
  tmpvar_36 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_36;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * tmpvar_35);
  lowp vec4 c_37;
  lowp vec4 c_38;
  lowp float diff_39;
  mediump float tmpvar_40;
  tmpvar_40 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_39 = tmpvar_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = ((mixedDiffuse_10.xyz * tmpvar_1) * diff_39);
  c_38.xyz = tmpvar_41;
  c_38.w = tmpvar_8;
  c_37.w = c_38.w;
  mediump vec3 tmpvar_42;
  tmpvar_42 = c_38.xyz;
  c_37.xyz = tmpvar_42;
  lowp vec4 color_43;
  color_43.xyz = (c_37.xyz * tmpvar_8);
  color_43.w = 1.0;
  c_4.xyz = color_43.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec2 xlv_TEXCOORD6;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_6.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize((tmpvar_11 * tmpvar_6.xyz));
  worldTangent_2 = tmpvar_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_14;
  tmpvar_14 = -(tmpvar_13);
  worldBinormal_1 = tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15.x = worldTangent_2.x;
  tmpvar_15.y = worldBinormal_1.x;
  tmpvar_15.z = worldNormal_3.x;
  lowp vec3 tmpvar_16;
  tmpvar_16.x = worldTangent_2.y;
  tmpvar_16.y = worldBinormal_1.y;
  tmpvar_16.z = worldNormal_3.y;
  lowp vec3 tmpvar_17;
  tmpvar_17.x = worldTangent_2.z;
  tmpvar_17.y = worldBinormal_1.z;
  tmpvar_17.z = worldNormal_3.z;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_15;
  xlv_TEXCOORD3 = tmpvar_16;
  xlv_TEXCOORD4 = tmpvar_17;
  xlv_TEXCOORD5 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD6 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  lowp float tmpvar_7;
  mediump vec4 splat_control_8;
  lowp vec4 mixedDiffuse_9;
  lowp vec4 nrm_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_Control, xlv_TEXCOORD6);
  splat_control_8 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = dot (splat_control_8, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_13;
  tmpvar_13 = (splat_control_8 / (tmpvar_12 + 0.001));
  splat_control_8 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_15;
  tmpvar_15 = (tmpvar_13.x * tmpvar_14);
  mixedDiffuse_9 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (mixedDiffuse_9 + (tmpvar_13.y * tmpvar_16));
  mixedDiffuse_9 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_9 + (tmpvar_13.z * tmpvar_18));
  mixedDiffuse_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_9 + (tmpvar_13.w * tmpvar_20));
  mixedDiffuse_9 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_13.x * tmpvar_22);
  nrm_10 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (nrm_10 + (tmpvar_13.y * tmpvar_24));
  nrm_10 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_10 + (tmpvar_13.z * tmpvar_26));
  nrm_10 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_29;
  tmpvar_29 = (nrm_10 + (tmpvar_13.w * tmpvar_28));
  nrm_10 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((nrm_10.xyz * 2.0) - 1.0);
  tmpvar_7 = tmpvar_12;
  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_30);
  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_30);
  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_30);
  lowp vec3 tmpvar_31;
  tmpvar_31 = _LightColor0.xyz;
  tmpvar_1 = tmpvar_31;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (worldN_3, tmpvar_2));
  diff_34 = tmpvar_35;
  mediump vec3 tmpvar_36;
  tmpvar_36 = ((mixedDiffuse_9.xyz * tmpvar_1) * diff_34);
  c_33.xyz = tmpvar_36;
  c_33.w = tmpvar_7;
  c_32.w = c_33.w;
  mediump vec3 tmpvar_37;
  tmpvar_37 = c_33.xyz;
  c_32.xyz = tmpvar_37;
  lowp vec4 color_38;
  color_38.xyz = (c_32.xyz * tmpvar_7);
  color_38.w = 1.0;
  c_4.xyz = color_38.xyz;
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "_TERRAIN_NORMAL_MAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _Control_ST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
uniform highp vec4 _Splat2_ST;
uniform highp vec4 _Splat3_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec2 xlv_TEXCOORD6;
void main ()
{
  lowp vec3 worldBinormal_1;
  lowp vec3 worldTangent_2;
  lowp vec3 worldNormal_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.xyz = ((_glesNormal.yzx * vec3(1.0, 0.0, 0.0)) - (_glesNormal.zxy * vec3(0.0, 1.0, 0.0)));
  tmpvar_6.w = -1.0;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _Splat2_ST.xy) + _Splat2_ST.zw);
  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _Splat3_ST.xy) + _Splat3_ST.zw);
  highp vec4 v_7;
  v_7.x = _World2Object[0].x;
  v_7.y = _World2Object[1].x;
  v_7.z = _World2Object[2].x;
  v_7.w = _World2Object[3].x;
  highp vec4 v_8;
  v_8.x = _World2Object[0].y;
  v_8.y = _World2Object[1].y;
  v_8.z = _World2Object[2].y;
  v_8.w = _World2Object[3].y;
  highp vec4 v_9;
  v_9.x = _World2Object[0].z;
  v_9.y = _World2Object[1].z;
  v_9.z = _World2Object[2].z;
  v_9.w = _World2Object[3].z;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize(((
    (v_7.xyz * _glesNormal.x)
   + 
    (v_8.xyz * _glesNormal.y)
  ) + (v_9.xyz * _glesNormal.z)));
  worldNormal_3 = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize((tmpvar_11 * tmpvar_6.xyz));
  worldTangent_2 = tmpvar_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = ((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx));
  highp vec3 tmpvar_14;
  tmpvar_14 = -(tmpvar_13);
  worldBinormal_1 = tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15.x = worldTangent_2.x;
  tmpvar_15.y = worldBinormal_1.x;
  tmpvar_15.z = worldNormal_3.x;
  lowp vec3 tmpvar_16;
  tmpvar_16.x = worldTangent_2.y;
  tmpvar_16.y = worldBinormal_1.y;
  tmpvar_16.z = worldNormal_3.y;
  lowp vec3 tmpvar_17;
  tmpvar_17.x = worldTangent_2.z;
  tmpvar_17.y = worldBinormal_1.z;
  tmpvar_17.z = worldNormal_3.z;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_15;
  xlv_TEXCOORD3 = tmpvar_16;
  xlv_TEXCOORD4 = tmpvar_17;
  xlv_TEXCOORD5 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD6 = ((_glesMultiTexCoord0.xy * _Control_ST.xy) + _Control_ST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform mediump mat4 _LightMatrix0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _Control;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _Splat2;
uniform sampler2D _Splat3;
uniform sampler2D _Normal0;
uniform sampler2D _Normal1;
uniform sampler2D _Normal2;
uniform sampler2D _Normal3;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec2 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 worldN_3;
  lowp vec4 c_4;
  lowp float atten_5;
  mediump vec4 lightCoord_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
  lightDir_7 = tmpvar_8;
  lowp float tmpvar_9;
  mediump vec4 splat_control_10;
  lowp vec4 mixedDiffuse_11;
  lowp vec4 nrm_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Control, xlv_TEXCOORD6);
  splat_control_10 = tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = dot (splat_control_10, vec4(1.0, 1.0, 1.0, 1.0));
  mediump vec4 tmpvar_15;
  tmpvar_15 = (splat_control_10 / (tmpvar_14 + 0.001));
  splat_control_10 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Splat0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_15.x * tmpvar_16);
  mixedDiffuse_11 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Splat1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_19;
  tmpvar_19 = (mixedDiffuse_11 + (tmpvar_15.y * tmpvar_18));
  mixedDiffuse_11 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_Splat2, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_21;
  tmpvar_21 = (mixedDiffuse_11 + (tmpvar_15.z * tmpvar_20));
  mixedDiffuse_11 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_Splat3, xlv_TEXCOORD1.zw);
  mediump vec4 tmpvar_23;
  tmpvar_23 = (mixedDiffuse_11 + (tmpvar_15.w * tmpvar_22));
  mixedDiffuse_11 = tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_Normal0, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_15.x * tmpvar_24);
  nrm_12 = tmpvar_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2D (_Normal1, xlv_TEXCOORD0.zw);
  mediump vec4 tmpvar_27;
  tmpvar_27 = (nrm_12 + (tmpvar_15.y * tmpvar_26));
  nrm_12 = tmpvar_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Normal2, xlv_TEXCOORD1.xy);
